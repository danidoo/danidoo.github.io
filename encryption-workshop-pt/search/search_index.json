{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Lab Steps 1. Inicializa\u00e7\u00e3o do cluster de CloudHSM 2. Gest\u00e3o de chaves sim\u00e9tricas e assim\u00e9tricas 3. Cria\u00e7\u00e3o de um website usando chaves do CloudHSM 4. Usando o AWS Certificate Manager para gerenciar chaves e ceritifcados em um ELB 5. Criptografia usando o servi\u00e7o AWS Key Management Service","title":"In\u00edcio"},{"location":"#lab-steps","text":"1. Inicializa\u00e7\u00e3o do cluster de CloudHSM 2. Gest\u00e3o de chaves sim\u00e9tricas e assim\u00e9tricas 3. Cria\u00e7\u00e3o de um website usando chaves do CloudHSM 4. Usando o AWS Certificate Manager para gerenciar chaves e ceritifcados em um ELB 5. Criptografia usando o servi\u00e7o AWS Key Management Service","title":"Lab Steps"},{"location":"acm/","text":"Creando un Website cifrado con TLS usando llaves del CloudHSM 1. Cree un usuario para el servidor web y comparta llave privada (detalles) 1.1. Abra en una nueva pesta\u00f1a o ventana del navegador del AWS CloudWatch en la terminal de la instancia 1.2. Seleccione el Logs en el menu lateral 1.3. Haga click en el \"Log Group\" con el nombre /aws/cloudhsm/cluster-<cluster_id> y despu\u00e9s en Search Log Group 1.4. Filtre los logs por el evento de generaci\u00f3n de par de llaves CN_GENERATE_KEY_PAIR 1.5. Haga click en la flecha para expandir los logs Entre el Key Handle de la llave privada generada con openssl: Entre el Key Handle de la llave de wrapping generada en el CloudHSM: 1.6. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 1.7. Entre en el agente de administraci\u00f3n del cluster con el comando: ./cloudhsm_mgmt_util.sh 1.8. Haga login en el CloudHSM loginHSM -u CU -s user1 -p defaultPassword 1.9. Exporte la llave publica generado con el openssl: exportPrivateKey -k <openssl priv key handle> -w <wrapping key handle> -out webserver.pem 1.10. Saiga el cliente: exit 1.11. Abra en una nueva pesta\u00f1a o ventana del navegador del AWS Certificate Manager 1.12. Si ves la opci\u00f3n Get started haga click en el que esta debajo de Provision certificates 1.13. Haga click en Import a certificate 1.14. En la ventana de terminal del AWS Systems Manager , ejecute el comando: cat webserver.crt 1.15. Copie la informacion y la pegue en el campo Certificate body 1.16. En la ventana de terminal del AWS Systems Manager , ejecute el comando: cat webserver.pem 1.17. Copie la informacion y la pegue en el campo Certificate private key 1.18. Haga click en Import 1.19. Revise el mensaje y haga click de nuevo en Import 2. Cree un balanceador usando el certificado importado (detalles) 2.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS EC2 2.2. En el menu lateral haga click en Load Balancers 2.3. Haga click en Create Load Balancer 2.4. Haga click en Create debajo de Application Load Balancer 2.5. En Name llene con acm-webserver 2.6. En Listeners , cambie el protocolo de \"HTTP\" a HTTPS 2.7. En VPC seleccione el que tiene nombre cloudhsm-vpc 2.8. Seleccione las AZ us-east-1a y us-east-1b y seleccione las subnets public para cada una. 2.9. Haga click en Next: Configure Security Settings 2.10. Deje seleccionado **Choose a certificate from ACM (recommended) y seleccione el certificado importado anteriormente 2.11. Haga click en Next: Configure Security Groups 2.12. Seleccione Create a new security group 2.13. En Security group name llene con acm-webserver-sg 2.14. En \"Type\" seleccione HTTPS 2.15. Haga click en Next: Configure Routing 2.16. En Name llene con webserver1 2.17. Haga click en Advanced health check settings 2.18. En la opci\u00f3n Healthy threashold cambie el valor para 2 2.19. En la opci\u00f3n Interval cambie el valor para 10 2.20. Haga click en Next: Register Targets 2.21. En la secci\u00f3n Instances seleccione la instancia webserver1 y haga click en Add to registered 2.22. Haga click en Next: Review y despu\u00e9s en Create 2.23. Haga click en Close 2.24. Llene abajo la informaci\u00f3n del nombre DNS el balanceador: Entre el DNS name del balanceador: 3. Agregue HTTP al Security Group el webserver1 (detalles) 3.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS EC2 3.2. En el menu lateral haga click en Security Groups 3.3. Seleccione el webserver1-sg y haga click en la pesta\u00f1a Inbound 3.4. Haga click en Edit y despu\u00e9s en Add Rule 3.5. En la ultima linea que se creo, seleccione el tipo HTTP y en \"Source\" remplaze el \"0.0.0.0/0\" por acm-web y cuando aparecer el id, seleccione el sg-xxxxxxxxxxx 3.6. Haga click en Save 3.7. En el menu lateral haga click en Target Groups 3.8. Seleccione el webserver1 y haga click en la pesta\u00f1a Targets 3.9. Vea si la instancia muestra Status como healthy 3.10. Si todav\u00eda sigue unhealthy espere alguns segundos, haga click en icono de refresh hasta que cambie de estado 3.11. Pruebe si el servicio funciona correctamente en: https:// <ELB DNS name> 3.12. Accepte el certificado digital auto-firmado haciendo click en Advanced... y Accept the Risk and Continue","title":"ACM"},{"location":"acm/#creando-un-website-cifrado-con-tls-usando-llaves-del-cloudhsm","text":"","title":"Creando un Website cifrado con TLS usando llaves del CloudHSM"},{"location":"acm/#1-cree-un-usuario-para-el-servidor-web-y-comparta-llave-privada","text":"(detalles) 1.1. Abra en una nueva pesta\u00f1a o ventana del navegador del AWS CloudWatch en la terminal de la instancia 1.2. Seleccione el Logs en el menu lateral 1.3. Haga click en el \"Log Group\" con el nombre /aws/cloudhsm/cluster-<cluster_id> y despu\u00e9s en Search Log Group 1.4. Filtre los logs por el evento de generaci\u00f3n de par de llaves CN_GENERATE_KEY_PAIR 1.5. Haga click en la flecha para expandir los logs Entre el Key Handle de la llave privada generada con openssl: Entre el Key Handle de la llave de wrapping generada en el CloudHSM: 1.6. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 1.7. Entre en el agente de administraci\u00f3n del cluster con el comando: ./cloudhsm_mgmt_util.sh 1.8. Haga login en el CloudHSM loginHSM -u CU -s user1 -p defaultPassword 1.9. Exporte la llave publica generado con el openssl: exportPrivateKey -k <openssl priv key handle> -w <wrapping key handle> -out webserver.pem 1.10. Saiga el cliente: exit 1.11. Abra en una nueva pesta\u00f1a o ventana del navegador del AWS Certificate Manager 1.12. Si ves la opci\u00f3n Get started haga click en el que esta debajo de Provision certificates 1.13. Haga click en Import a certificate 1.14. En la ventana de terminal del AWS Systems Manager , ejecute el comando: cat webserver.crt 1.15. Copie la informacion y la pegue en el campo Certificate body 1.16. En la ventana de terminal del AWS Systems Manager , ejecute el comando: cat webserver.pem 1.17. Copie la informacion y la pegue en el campo Certificate private key 1.18. Haga click en Import 1.19. Revise el mensaje y haga click de nuevo en Import","title":"1. Cree un usuario para el servidor web y comparta llave privada"},{"location":"acm/#2-cree-un-balanceador-usando-el-certificado-importado","text":"(detalles) 2.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS EC2 2.2. En el menu lateral haga click en Load Balancers 2.3. Haga click en Create Load Balancer 2.4. Haga click en Create debajo de Application Load Balancer 2.5. En Name llene con acm-webserver 2.6. En Listeners , cambie el protocolo de \"HTTP\" a HTTPS 2.7. En VPC seleccione el que tiene nombre cloudhsm-vpc 2.8. Seleccione las AZ us-east-1a y us-east-1b y seleccione las subnets public para cada una. 2.9. Haga click en Next: Configure Security Settings 2.10. Deje seleccionado **Choose a certificate from ACM (recommended) y seleccione el certificado importado anteriormente 2.11. Haga click en Next: Configure Security Groups 2.12. Seleccione Create a new security group 2.13. En Security group name llene con acm-webserver-sg 2.14. En \"Type\" seleccione HTTPS 2.15. Haga click en Next: Configure Routing 2.16. En Name llene con webserver1 2.17. Haga click en Advanced health check settings 2.18. En la opci\u00f3n Healthy threashold cambie el valor para 2 2.19. En la opci\u00f3n Interval cambie el valor para 10 2.20. Haga click en Next: Register Targets 2.21. En la secci\u00f3n Instances seleccione la instancia webserver1 y haga click en Add to registered 2.22. Haga click en Next: Review y despu\u00e9s en Create 2.23. Haga click en Close 2.24. Llene abajo la informaci\u00f3n del nombre DNS el balanceador: Entre el DNS name del balanceador:","title":"2. Cree un balanceador usando el certificado importado"},{"location":"acm/#3-agregue-http-al-security-group-el-webserver1","text":"(detalles) 3.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS EC2 3.2. En el menu lateral haga click en Security Groups 3.3. Seleccione el webserver1-sg y haga click en la pesta\u00f1a Inbound 3.4. Haga click en Edit y despu\u00e9s en Add Rule 3.5. En la ultima linea que se creo, seleccione el tipo HTTP y en \"Source\" remplaze el \"0.0.0.0/0\" por acm-web y cuando aparecer el id, seleccione el sg-xxxxxxxxxxx 3.6. Haga click en Save 3.7. En el menu lateral haga click en Target Groups 3.8. Seleccione el webserver1 y haga click en la pesta\u00f1a Targets 3.9. Vea si la instancia muestra Status como healthy 3.10. Si todav\u00eda sigue unhealthy espere alguns segundos, haga click en icono de refresh hasta que cambie de estado 3.11. Pruebe si el servicio funciona correctamente en: https:// <ELB DNS name> 3.12. Accepte el certificado digital auto-firmado haciendo click en Advanced... y Accept the Risk and Continue","title":"3. Agregue HTTP al Security Group el webserver1"},{"location":"advanced_topics/","text":"Topicos avanzados en el CloudHSM En este modulo se har\u00e1 las configuraciones de gestion por quorum (MofN) y configuraci\u00f3n de llaves no exportables 1. Cree una VPC (detalles) Si la infraestructura b\u00e1sica fue creada en el modulo anterior, podr\u00e1s saltar este paso. 1.1. En un navegador, abra la URL https://github.com/danidoo/danidoo.github.io/blob/master/cloudhsm-workshop/CFN-CloudHSMWorkshop.yml 1.2.","title":"Advanced topics"},{"location":"advanced_topics/#topicos-avanzados-en-el-cloudhsm","text":"En este modulo se har\u00e1 las configuraciones de gestion por quorum (MofN) y configuraci\u00f3n de llaves no exportables","title":"Topicos avanzados en el CloudHSM"},{"location":"advanced_topics/#1-cree-una-vpc","text":"(detalles) Si la infraestructura b\u00e1sica fue creada en el modulo anterior, podr\u00e1s saltar este paso. 1.1. En un navegador, abra la URL https://github.com/danidoo/danidoo.github.io/blob/master/cloudhsm-workshop/CFN-CloudHSMWorkshop.yml 1.2.","title":"1. Cree una VPC"},{"location":"cluster_init/","text":"Inicializa\u00e7\u00e3o do Cluster Neste laborat\u00f3rio ser\u00e1 feita a inicializa\u00e7\u00e3o de um cluster de CloudHSM. 1. Crie um ambiente de redes (VPC, Subnets, etc.) (detalhes) Se a infraestrutura b\u00e1sica foi criada no m\u00f3dulo anterior, voc\u00ea poder\u00e1 saltar este passo. 1.1. Em um navegador, abra a URL https://github.com/danidoo/danidoo.github.io/blob/master/cloudhsm-workshop/CFN-CloudHSMWorkshop.yml 1.2. Clique em Raw e baixe o arquivo para seu computador com usando o nome cloudhsm-landing-zone.json. 1.3. Abra a console AWS no servi\u00e7o AWS CloudFormation . 1.4. Verifique que a console est\u00e1 usando a regi\u00e3o \"N. Virginia\" (est\u00e1 informa\u00e7\u00e3o se encontra no canto superior direto da tela) 1.5. Clique em Create stack 1.6. Selecione o \"Template source\" para Upload a template file 1.7. Clique em Choose a file e selecione o arquivo baixado anteriormente 1.8. Clique em Next 1.9. No campo Stack name preencha com o nome CloudHSM-Stack e clique em Next 1.10. Clique em Next e depois em Create stack 2. Crie um cluster (detalhes) 2.1. Em uma nova janela ou aba do navegador abra a console da AWS no servi\u00e7o AWS CloudHSM na regi\u00e3o de N. Virginia 2.2. Clique em Create cluster , e usando os IDs do VPC e subnets, escolha os parametros adequedos 2.3. Deixe a op\u00e7\u00e3o Create new cluster selecionada e clique em Next: Review e depois em Create cluster 2.4. A cria\u00e7\u00e3o do cluster pode levar at\u00e9 10 minutos. Continue com a pr\u00f3xima etapa enquanto o processo corre. 3. Crie um bucket S3 para armazenamento de objetos (detalhes) Entre seu um user id ou um valor aleat\u00f3rio para gerar objetos \u00fanicos 3.1. Em uma nova janela ou aba do navegador, abra a console da AWS no servi\u00e7o Amazon S3 3.2. Clique em Create bucket 3.2. Em Bucket name preencha com o nome crypto- <su user id> (os buckets precisam ter nomes \u00fanicos globalmente) 3.2. Escolha a regi\u00e3o US East (N. Virginia) 3.2. Clique em Create 4. Crie um bukcet S3 para armazemaneto de sess\u00f5es (detalhes) 4.2. Clique em Create bucket 4.2. Em Bucket name preencha com o nome session-logs- <su user id> (os buckets preseisam ter nomes \u00fanicos globalmente) 4.2. Selecione a regi\u00e3o US East (N. Virginia) 4.2. Clique em Create 5. Crie uma pol\u00edtica de IAM de acesso ao bucket S3 criado anteriormente (detalhes) 5.1. Em uma nova janela ou aba do navegador, abra a console da AWS no servi\u00e7o Amazon IAM 5.2. Clique em Policies no menu lateral e depois em Create policy 5.3. Clique em Choose a service , filtre por S3 clique em S3 5.4. Selecione All S3 actions (s3:*) 5.5. Clique em Resources e depois em Add ARN do item bucket 5.6. Em Bucket name preencha com o nome do bucket criado anteriormente ( crypto- <seu user id> ) e clique em Add 5.7. Clique em Add ARN do item object 5.8. No Bucket name e preencha com o nome do bucket criado anteriormente ( crypto- <seu user id> ) 5.9. No Object name selecione Any de pois clique em Add 5.10. Clique em Review policy 5.11. Em Name preencha com S3CryptoBucket e depois em Create policy 6. Crie um role IAM para instancias EC2 gerenciadas pelo SSM Systems Manager (detalhes) 6.1. Ainda na console da servi\u00e7oo Amazon IAM 6.2. Clique em Roles no menu lateral e depois em Create role 6.3. Clique em EC2 e depois em Next: Permissions 6.4. Filtre as pol\u00edticas por ssm e escolha a pol\u00edtica AmazonEC2RoleforSSM 6.5. Filtre novamente por cloudhsm e escolha a pol\u00edtica AWSCloudHSMFullAccess 6.6. Filtre mais uma vez por s3 e escolha a pol\u00edtica criada na etapa anterior: S3CryptoBucket 6.7. Clique em Next: Tags e depois em Next: Review 6.8. Em Role name preencha com o nome EC2-SSM+S3Crypto e clique em Create role 7. Crie um CloudHSM no Cluster (detalhes) 7.1. Volte \u00e0 janela ou aba do servi\u00e7o AWS CloudHSM 7.2. Quando o status do cluster mostrar Uninitialized , clique em Initialize Entre o Id do cluster (no formato cluster-xxxxxxxxxxx ) 7.3. Crie um novo CloudHSM no cluster, selecionando a subnet na AZ us-east-1a e clicando em Create (Se vc receber a mensagem \"CreateHsm request failed\", escolha a pr\u00f3xima AZ na lista - b, c...) 7.4. o processo de cria\u00e7\u00e3o de um novo CloudHSM no cluster pode levar cerca de 5 minutos. Siga a pr\u00f3xima etapa enquando espera este process. 8. Crie uma instancia EC2 para gest\u00e3o do CloudHSM (detalhes) 8.1. Abra a console no Amazon EC2 . 8.2. Clique em Running Instances e depois em Launch Instance . 8.3. Selecione a vers\u00e3o do Sistema Operacional Amazon Linux 2 AMI (64-bit x86) clicando em Select ao lado da vers\u00e3o da AMI 8.4. No tipo de instancia, deixe selecionada t2.micro e clique em Next: Configure Instance Details 8.5. Em Network escolha o VPC com nome cloudhsm-vpc 8.6. Em Subnet escolha a subnet private-subnet-us-east-1b (ou preferencialmente a que est\u00e1 na mesma AZ em que foi criado o CloudHSM) 8.7. Em IAM role escolha o role criado anteriormente com nome EC2-SSM+S3Crypto e clique em Next: Add Storage 8.8. Clique em Next Add Tags e depois em Add Tag 8.9. No campo Key preencha com Name e no campo Value preencha com nome cloudhsm-mgmt 8.10. Clique em Next: Configure Security Group 8.11. Deixe selecionado Create a new security group 8.12. Em Security group name preencha com o nome cloudhsm-mgmt-sg 8.13. Em Description preencha com CloudHSM Management Group 8.14. Apague a configura\u00e7\u00e3o de permiss\u00e3o de SSH clicando no X no fim da linha de configura\u00e7\u00e3o 8.15. Clique em Review and Launch e depois em Launch 8.16. Substitua a op\u00e7\u00e3o \"Choose an existing key pair\" por Proceed without a key pair 8.17. Selecione I acknowledge that I will not (...) e clique em Launch Instance 9. Descargue el CSR y lo deje disponible para firmar en el bucket S3 (detalhes) 9.1. Volte \u00e0 janela ou aba do navegador no servi\u00e7o AWS CloudHSM 9.2. Baixe o arquivo de CSR para assinar o certificado do cluster, clicando em Cluster CSR e salve-o em seu computador 9.3. Volte \u00e0 janela ou aba do navegador no servi\u00e7o S3 9.4. Clique no bucket criado anteriormente crypto- <su user id> 9.5. Clique em Upload e depois em Add files 9.6. Escolha o arquivo com o CSR baixado anteriormente (arquivo com o nome <cluster-xxxxxxxxxxxx> _ClusterCsr.csr ) 9.7. Clique em Upload 10. Configure o session manager (detalhes) 10.1. Abra uma nova janela ou aba do navegador no servi\u00e7o AWS Systems Manager 10.2. No menu lateral, clique em Session Manager 10.3. Clique em Configure Preferences ou na aba Preferences 10.4. Na se\u00e7\u00e3o Write session output to an Amazon S3 bucket selecione S3 bucket e desabilite o item Encrypt log data 10.5. Deixe selecionado Choose a bucket name from the list e selecione o bucket criado anteriormente com nome session-logs- <su user id> 10.6. Clique em Save e depois na aba Sessions 11. Use a instancia de administra\u00e7\u00e3o para assinar o CSR (detalhes) 11.3. Clique em Start session 11.4. Selecione a instancia com nome cloudhsm-mgmt e clique em Start session 11.5. Uma nova aba do navegador se abrir\u00e1, clique em na parte negra da tela e execute o comando cd <enter> 11.6. Execute os comandos: sudo yum update -y wget https://s3.amazonaws.com/cloudhsmv2-software/CloudHsmClient/EL7/cloudhsm-client-latest.el7.x86_64.rpm sudo yum install ./cloudhsm-client-latest.el7.x86_64.rpm -y sudo yum install jq -y aws configure 11.7. Para as configura\u00e7\u00f5es de AWS Access Key ID e AWS Secret Access Key deixe em branco teclando <enter> 11.8. Na op\u00e7\u00e3o Default region name preencha com us-east-1 11.9. N\u00e3o altere a configura\u00e7\u00e3o padr\u00e3o de Default output format 11.10. Execute o comando: aws s3 cp s3://crypto- <su_user_id> / <cluster-xxxxxxxxxxxx> _ClusterCsr.csr . 11.11. Crie um par de chaves RSA com o comando: openssl genrsa -aes256 -out customerCA.key 2048 11.12. Escolha um pass phrase para as chaves e excute o comando: openssl req -new -x509 -days 3652 -key customerCA.key -out customerCA.crt 11.12. Usa a pass phrase criada anteriormente e escolha as op\u00e7\u00f5es que preferir para os dados do certificado digital 11.13. Assine o CSR com o comando: openssl x509 -req -days 3652 -in <cluster-xxxxxxxxxxxx> _ClusterCsr.csr \\ -CA customerCA.crt \\ -CAkey customerCA.key \\ -CAcreateserial \\ -out CustomerHsmCertificate.crt 11.14. Use o pass phrase criado anteriormente 11.15. Inicialize o cluster com o comando: aws cloudhsmv2 initialize-cluster --cluster-id <cluster-xxxxxxxxxxxx> \\ --signed-cert file://CustomerHsmCertificate.crt \\ --trust-anchor file://customerCA.crt 11.16. Volte \u00e0 janela ou aba do navegador no servi\u00e7o AWS CloudHSM 11.17. Clique no bot\u00e3o para atualizar as informa\u00e7\u00f5es e veja que o status do cluster est\u00e1 em Initialize in progress 11.18. O processo de inicializa\u00e7\u00e3o do cluster leva cerca de 5 minutos. Siga para a pr\u00f3xima etapa enquanto o processo segue 12. Use o cliente do CloudHSM para conectar ao cluster (detalhes) 12.1. Volte \u00e0 janela ou aba do navegador no servi\u00e7o AWS Systems Manager que est\u00e1 no terminal da instancia 12.2. Configure o cliente com o comando: sudo cp customerCA.crt /opt/cloudhsm/etc/customerCA.crt 12.3. echo '#!/bin/sh' >> cloudhsm_mgmt_util.sh echo '/opt/cloudhsm/bin/cloudhsm_mgmt_util /opt/cloudhsm/etc/cloudhsm_mgmt_util.cfg' >> cloudhsm_mgmt_util.sh chmod +x cloudhsm_mgmt_util.sh ln -s /opt/cloudhsm/bin/key_mgmt_util key_mgmt_util 12.4. Veja o endere\u00e7o IP do HSM no cluster com o comando: aws cloudhsmv2 describe-clusters | jq '.Clusters[].Hsms[].EniIp' 12.5. Configure o agente com o endere\u00e7o IP do HSM com o comando: sudo /opt/cloudhsm/bin/configure -a <IP address> 12.6. Execute o agente de gerenciamento do CloudHSM com o comando: ./cloudhsm_mgmt_util.sh 12.7. Neste momento n\u00e3o ser\u00e1 poss\u00edvel conectar ao dispositivo pois faltam regras de firewall (Security Groups) para conectar ao CloudHSM. A configura\u00e7\u00e3o ser\u00e1 feita no passo seguinte 13. Configure as regras de firewall para conectar ao CloudHSM (detalhes) 13.1. Volte \u00e0 janela ou aba do navegador no servi\u00e7o AWS EC2 13.2. No menu lateral clique em Instances 13.3. Selecione a instancia com nome cloudhsm-mgmt 13.4. Clique em Actions e dentro de Networking clique em Change Security Groups 13.5. Selecione um Security Group adicional com \"Group Name\" cloudhsm- <cluster-xxxxxxxxxxxx> -sg (gerado automaticamente pelo Cluster) 13.6. Clique em Assign Security Groups 13.7. Volte \u00e0 janela ou aba do navegador no servi\u00e7o AWS Systems Manager que est\u00e1 no terminal da instancia 13.8. Tente novamente conectar ao HSM com o comando: ./cloudhsm_mgmt_util.sh 13.9. Veja os usuarios padr\u00e3o no sistema com o comando: listUsers 13.10. Fa\u00e7a login com o usuario e senha inicial com o comando: loginHSM PRECO admin password 13.11. Troque a senha com o comando: changePswd PRECO admin defaultPassword 13.12. Quando receber o prompt Do you want to continue(y/n)? digita y <enter> 13.13. Use o comando \u201ccreateUser\u201c para criar um crypto user (CU). createUser CU user1 defaultPassword 13.14. Veja que o CloudHSM muda o tipo de usu\u00e1rio do cripto officer e mostra o novo usu\u00e1rio user1 : listUsers 13.15. Termine a sess\u00e3o com o comando: quit","title":"Inicializa\u00e7\u00e3o"},{"location":"cluster_init/#inicializacao-do-cluster","text":"Neste laborat\u00f3rio ser\u00e1 feita a inicializa\u00e7\u00e3o de um cluster de CloudHSM.","title":"Inicializa\u00e7\u00e3o do Cluster"},{"location":"cluster_init/#1-crie-um-ambiente-de-redes-vpc-subnets-etc","text":"(detalhes) Se a infraestrutura b\u00e1sica foi criada no m\u00f3dulo anterior, voc\u00ea poder\u00e1 saltar este passo. 1.1. Em um navegador, abra a URL https://github.com/danidoo/danidoo.github.io/blob/master/cloudhsm-workshop/CFN-CloudHSMWorkshop.yml 1.2. Clique em Raw e baixe o arquivo para seu computador com usando o nome cloudhsm-landing-zone.json. 1.3. Abra a console AWS no servi\u00e7o AWS CloudFormation . 1.4. Verifique que a console est\u00e1 usando a regi\u00e3o \"N. Virginia\" (est\u00e1 informa\u00e7\u00e3o se encontra no canto superior direto da tela) 1.5. Clique em Create stack 1.6. Selecione o \"Template source\" para Upload a template file 1.7. Clique em Choose a file e selecione o arquivo baixado anteriormente 1.8. Clique em Next 1.9. No campo Stack name preencha com o nome CloudHSM-Stack e clique em Next 1.10. Clique em Next e depois em Create stack","title":"1. Crie um ambiente de redes (VPC, Subnets, etc.)"},{"location":"cluster_init/#2-crie-um-cluster","text":"(detalhes) 2.1. Em uma nova janela ou aba do navegador abra a console da AWS no servi\u00e7o AWS CloudHSM na regi\u00e3o de N. Virginia 2.2. Clique em Create cluster , e usando os IDs do VPC e subnets, escolha os parametros adequedos 2.3. Deixe a op\u00e7\u00e3o Create new cluster selecionada e clique em Next: Review e depois em Create cluster 2.4. A cria\u00e7\u00e3o do cluster pode levar at\u00e9 10 minutos. Continue com a pr\u00f3xima etapa enquanto o processo corre.","title":"2. Crie um cluster"},{"location":"cluster_init/#3-crie-um-bucket-s3-para-armazenamento-de-objetos","text":"(detalhes) Entre seu um user id ou um valor aleat\u00f3rio para gerar objetos \u00fanicos 3.1. Em uma nova janela ou aba do navegador, abra a console da AWS no servi\u00e7o Amazon S3 3.2. Clique em Create bucket 3.2. Em Bucket name preencha com o nome crypto- <su user id> (os buckets precisam ter nomes \u00fanicos globalmente) 3.2. Escolha a regi\u00e3o US East (N. Virginia) 3.2. Clique em Create","title":"3. Crie um bucket S3 para armazenamento de objetos"},{"location":"cluster_init/#4-crie-um-bukcet-s3-para-armazemaneto-de-sessoes","text":"(detalhes) 4.2. Clique em Create bucket 4.2. Em Bucket name preencha com o nome session-logs- <su user id> (os buckets preseisam ter nomes \u00fanicos globalmente) 4.2. Selecione a regi\u00e3o US East (N. Virginia) 4.2. Clique em Create","title":"4. Crie um bukcet S3 para armazemaneto de sess\u00f5es"},{"location":"cluster_init/#5-crie-uma-politica-de-iam-de-acesso-ao-bucket-s3-criado-anteriormente","text":"(detalhes) 5.1. Em uma nova janela ou aba do navegador, abra a console da AWS no servi\u00e7o Amazon IAM 5.2. Clique em Policies no menu lateral e depois em Create policy 5.3. Clique em Choose a service , filtre por S3 clique em S3 5.4. Selecione All S3 actions (s3:*) 5.5. Clique em Resources e depois em Add ARN do item bucket 5.6. Em Bucket name preencha com o nome do bucket criado anteriormente ( crypto- <seu user id> ) e clique em Add 5.7. Clique em Add ARN do item object 5.8. No Bucket name e preencha com o nome do bucket criado anteriormente ( crypto- <seu user id> ) 5.9. No Object name selecione Any de pois clique em Add 5.10. Clique em Review policy 5.11. Em Name preencha com S3CryptoBucket e depois em Create policy","title":"5. Crie uma pol\u00edtica de IAM de acesso ao bucket S3 criado anteriormente"},{"location":"cluster_init/#6-crie-um-role-iam-para-instancias-ec2-gerenciadas-pelo-ssm-systems-manager","text":"(detalhes) 6.1. Ainda na console da servi\u00e7oo Amazon IAM 6.2. Clique em Roles no menu lateral e depois em Create role 6.3. Clique em EC2 e depois em Next: Permissions 6.4. Filtre as pol\u00edticas por ssm e escolha a pol\u00edtica AmazonEC2RoleforSSM 6.5. Filtre novamente por cloudhsm e escolha a pol\u00edtica AWSCloudHSMFullAccess 6.6. Filtre mais uma vez por s3 e escolha a pol\u00edtica criada na etapa anterior: S3CryptoBucket 6.7. Clique em Next: Tags e depois em Next: Review 6.8. Em Role name preencha com o nome EC2-SSM+S3Crypto e clique em Create role","title":"6. Crie um role IAM para instancias EC2 gerenciadas pelo SSM Systems Manager"},{"location":"cluster_init/#7-crie-um-cloudhsm-no-cluster","text":"(detalhes) 7.1. Volte \u00e0 janela ou aba do servi\u00e7o AWS CloudHSM 7.2. Quando o status do cluster mostrar Uninitialized , clique em Initialize Entre o Id do cluster (no formato cluster-xxxxxxxxxxx ) 7.3. Crie um novo CloudHSM no cluster, selecionando a subnet na AZ us-east-1a e clicando em Create (Se vc receber a mensagem \"CreateHsm request failed\", escolha a pr\u00f3xima AZ na lista - b, c...) 7.4. o processo de cria\u00e7\u00e3o de um novo CloudHSM no cluster pode levar cerca de 5 minutos. Siga a pr\u00f3xima etapa enquando espera este process.","title":"7. Crie um CloudHSM no Cluster"},{"location":"cluster_init/#8-crie-uma-instancia-ec2-para-gestao-do-cloudhsm","text":"(detalhes) 8.1. Abra a console no Amazon EC2 . 8.2. Clique em Running Instances e depois em Launch Instance . 8.3. Selecione a vers\u00e3o do Sistema Operacional Amazon Linux 2 AMI (64-bit x86) clicando em Select ao lado da vers\u00e3o da AMI 8.4. No tipo de instancia, deixe selecionada t2.micro e clique em Next: Configure Instance Details 8.5. Em Network escolha o VPC com nome cloudhsm-vpc 8.6. Em Subnet escolha a subnet private-subnet-us-east-1b (ou preferencialmente a que est\u00e1 na mesma AZ em que foi criado o CloudHSM) 8.7. Em IAM role escolha o role criado anteriormente com nome EC2-SSM+S3Crypto e clique em Next: Add Storage 8.8. Clique em Next Add Tags e depois em Add Tag 8.9. No campo Key preencha com Name e no campo Value preencha com nome cloudhsm-mgmt 8.10. Clique em Next: Configure Security Group 8.11. Deixe selecionado Create a new security group 8.12. Em Security group name preencha com o nome cloudhsm-mgmt-sg 8.13. Em Description preencha com CloudHSM Management Group 8.14. Apague a configura\u00e7\u00e3o de permiss\u00e3o de SSH clicando no X no fim da linha de configura\u00e7\u00e3o 8.15. Clique em Review and Launch e depois em Launch 8.16. Substitua a op\u00e7\u00e3o \"Choose an existing key pair\" por Proceed without a key pair 8.17. Selecione I acknowledge that I will not (...) e clique em Launch Instance","title":"8. Crie uma instancia EC2 para gest\u00e3o do CloudHSM"},{"location":"cluster_init/#9-descargue-el-csr-y-lo-deje-disponible-para-firmar-en-el-bucket-s3","text":"(detalhes) 9.1. Volte \u00e0 janela ou aba do navegador no servi\u00e7o AWS CloudHSM 9.2. Baixe o arquivo de CSR para assinar o certificado do cluster, clicando em Cluster CSR e salve-o em seu computador 9.3. Volte \u00e0 janela ou aba do navegador no servi\u00e7o S3 9.4. Clique no bucket criado anteriormente crypto- <su user id> 9.5. Clique em Upload e depois em Add files 9.6. Escolha o arquivo com o CSR baixado anteriormente (arquivo com o nome <cluster-xxxxxxxxxxxx> _ClusterCsr.csr ) 9.7. Clique em Upload","title":"9. Descargue el CSR y lo deje disponible para firmar en el bucket S3"},{"location":"cluster_init/#10-configure-o-session-manager","text":"(detalhes) 10.1. Abra uma nova janela ou aba do navegador no servi\u00e7o AWS Systems Manager 10.2. No menu lateral, clique em Session Manager 10.3. Clique em Configure Preferences ou na aba Preferences 10.4. Na se\u00e7\u00e3o Write session output to an Amazon S3 bucket selecione S3 bucket e desabilite o item Encrypt log data 10.5. Deixe selecionado Choose a bucket name from the list e selecione o bucket criado anteriormente com nome session-logs- <su user id> 10.6. Clique em Save e depois na aba Sessions","title":"10. Configure o session manager"},{"location":"cluster_init/#11-use-a-instancia-de-administracao-para-assinar-o-csr","text":"(detalhes) 11.3. Clique em Start session 11.4. Selecione a instancia com nome cloudhsm-mgmt e clique em Start session 11.5. Uma nova aba do navegador se abrir\u00e1, clique em na parte negra da tela e execute o comando cd <enter> 11.6. Execute os comandos: sudo yum update -y wget https://s3.amazonaws.com/cloudhsmv2-software/CloudHsmClient/EL7/cloudhsm-client-latest.el7.x86_64.rpm sudo yum install ./cloudhsm-client-latest.el7.x86_64.rpm -y sudo yum install jq -y aws configure 11.7. Para as configura\u00e7\u00f5es de AWS Access Key ID e AWS Secret Access Key deixe em branco teclando <enter> 11.8. Na op\u00e7\u00e3o Default region name preencha com us-east-1 11.9. N\u00e3o altere a configura\u00e7\u00e3o padr\u00e3o de Default output format 11.10. Execute o comando: aws s3 cp s3://crypto- <su_user_id> / <cluster-xxxxxxxxxxxx> _ClusterCsr.csr . 11.11. Crie um par de chaves RSA com o comando: openssl genrsa -aes256 -out customerCA.key 2048 11.12. Escolha um pass phrase para as chaves e excute o comando: openssl req -new -x509 -days 3652 -key customerCA.key -out customerCA.crt 11.12. Usa a pass phrase criada anteriormente e escolha as op\u00e7\u00f5es que preferir para os dados do certificado digital 11.13. Assine o CSR com o comando: openssl x509 -req -days 3652 -in <cluster-xxxxxxxxxxxx> _ClusterCsr.csr \\ -CA customerCA.crt \\ -CAkey customerCA.key \\ -CAcreateserial \\ -out CustomerHsmCertificate.crt 11.14. Use o pass phrase criado anteriormente 11.15. Inicialize o cluster com o comando: aws cloudhsmv2 initialize-cluster --cluster-id <cluster-xxxxxxxxxxxx> \\ --signed-cert file://CustomerHsmCertificate.crt \\ --trust-anchor file://customerCA.crt 11.16. Volte \u00e0 janela ou aba do navegador no servi\u00e7o AWS CloudHSM 11.17. Clique no bot\u00e3o para atualizar as informa\u00e7\u00f5es e veja que o status do cluster est\u00e1 em Initialize in progress 11.18. O processo de inicializa\u00e7\u00e3o do cluster leva cerca de 5 minutos. Siga para a pr\u00f3xima etapa enquanto o processo segue","title":"11. Use a instancia de administra\u00e7\u00e3o para assinar o CSR"},{"location":"cluster_init/#12-use-o-cliente-do-cloudhsm-para-conectar-ao-cluster","text":"(detalhes) 12.1. Volte \u00e0 janela ou aba do navegador no servi\u00e7o AWS Systems Manager que est\u00e1 no terminal da instancia 12.2. Configure o cliente com o comando: sudo cp customerCA.crt /opt/cloudhsm/etc/customerCA.crt 12.3. echo '#!/bin/sh' >> cloudhsm_mgmt_util.sh echo '/opt/cloudhsm/bin/cloudhsm_mgmt_util /opt/cloudhsm/etc/cloudhsm_mgmt_util.cfg' >> cloudhsm_mgmt_util.sh chmod +x cloudhsm_mgmt_util.sh ln -s /opt/cloudhsm/bin/key_mgmt_util key_mgmt_util 12.4. Veja o endere\u00e7o IP do HSM no cluster com o comando: aws cloudhsmv2 describe-clusters | jq '.Clusters[].Hsms[].EniIp' 12.5. Configure o agente com o endere\u00e7o IP do HSM com o comando: sudo /opt/cloudhsm/bin/configure -a <IP address> 12.6. Execute o agente de gerenciamento do CloudHSM com o comando: ./cloudhsm_mgmt_util.sh 12.7. Neste momento n\u00e3o ser\u00e1 poss\u00edvel conectar ao dispositivo pois faltam regras de firewall (Security Groups) para conectar ao CloudHSM. A configura\u00e7\u00e3o ser\u00e1 feita no passo seguinte","title":"12. Use o cliente do CloudHSM para conectar ao cluster"},{"location":"cluster_init/#13-configure-as-regras-de-firewall-para-conectar-ao-cloudhsm","text":"(detalhes) 13.1. Volte \u00e0 janela ou aba do navegador no servi\u00e7o AWS EC2 13.2. No menu lateral clique em Instances 13.3. Selecione a instancia com nome cloudhsm-mgmt 13.4. Clique em Actions e dentro de Networking clique em Change Security Groups 13.5. Selecione um Security Group adicional com \"Group Name\" cloudhsm- <cluster-xxxxxxxxxxxx> -sg (gerado automaticamente pelo Cluster) 13.6. Clique em Assign Security Groups 13.7. Volte \u00e0 janela ou aba do navegador no servi\u00e7o AWS Systems Manager que est\u00e1 no terminal da instancia 13.8. Tente novamente conectar ao HSM com o comando: ./cloudhsm_mgmt_util.sh 13.9. Veja os usuarios padr\u00e3o no sistema com o comando: listUsers 13.10. Fa\u00e7a login com o usuario e senha inicial com o comando: loginHSM PRECO admin password 13.11. Troque a senha com o comando: changePswd PRECO admin defaultPassword 13.12. Quando receber o prompt Do you want to continue(y/n)? digita y <enter> 13.13. Use o comando \u201ccreateUser\u201c para criar um crypto user (CU). createUser CU user1 defaultPassword 13.14. Veja que o CloudHSM muda o tipo de usu\u00e1rio do cripto officer e mostra o novo usu\u00e1rio user1 : listUsers 13.15. Termine a sess\u00e3o com o comando: quit","title":"13. Configure as regras de firewall para conectar ao CloudHSM"},{"location":"key_management/","text":"Gerenciamento de Chaves 1. Criando chaves no HSM (detalhes) Neste m\u00f3dulo varios tipos de chaves ser\u00e3o criados (sim\u00e9tricas e assim\u00e9tricas) Entre o user id ou valor aleat\u00f3rio usado no m\u00f3dulo anterior: 1.1. Volte \u00e0 janela ou aba do navegador do servi\u00e7o AWS Systems Manager em que est\u00e1 aberto o terminal \u00e0 instancia 1.2. Inicie o servi\u00e7o cliente do CloudHSM usando: sudo systemctl start cloudhsm-client 1.3. Inicie o agente de gest\u00e3o de chaves com o comando ./key_mgmt_util 1.4. Fa\u00e7a login com o usu\u00e1rio crypto user criado anteriormente usando: loginHSM -u CU -s user1 -p defaultPassword 1.5. Crie uma chave sim\u00e9trica AES-256 com o comando: genSymKey -t 31 -s 32 -l aes256 Tome nota do Key Handle desta chave aqui: 1.6. Crie uma chave assim\u00e9trica RSA com o comando: genRSAKeyPair -m 2048 -e 65541 -l rsa_test Tome nota do Key Handle desta chave aqui: 1.7. Crie uma chave de curva el\u00edptica com o comando: genECCKeyPair -i 12 -l ecc12 1.8. Crie uma wrapping key com o no CloudHSM e tome nota de seu key handle : genSymKey -t 31 -s 32 -l wrappingKey Llene el Key Handle del wrapping key: Tome nota tambi\u00e9n de ese numero en un editor de texto pues la va a necesitar en una etapa seguiente. 1.9. Saiga del agente con el comando: exit 2. Importando una llave AES-256 al CloudHSM (detalhes) En este modulo se va a importar una llave simetrica AES-256 al CloudHSM 2.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 2.2. Genere una llave simetrica AES-256 para importaci\u00f3n con la herramienta openssl openssl rand -out aes256-forImport.key 32 2.3. Use el comando imSymKey para importar al CloudHSM la llave AES-256 generada con openssl en el paso anteriormente. /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s user1 -p defaultPassword imSymKey -f aes256-forImport.key -w <wrapping key handle> -t 31 -l imported 3. Exportando la llave AES-256 del CloudHSM (detalhes) 3.1. Exporte en texto plano la llave AES-256 creada anteriormente (key handle -k). El agente usa una llave AES-256 de wrapping creada anteriormente(key handle -w) en el CloudHSM. Entonces escribe la llave en texto plano al archivo AES-256-CHSM-unencrypted.key. /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s user1 -p defaultPassword exSymKey -k <AES-256 key handle> -w <wrapping key handle> -out AES-256-CHSM-unencrypted.key 3.2. Importe la llave AES-256 en texto plano creada anteriormente (key handle -k). /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s user1 -p defaultPassword imSymKey -t 31 -f AES-256-CHSM-unencrypted.key -w <wrapping key handle> -l imported_fromPlaintext 3.3. Exporte la misma llave AES-256 de manera cifrada con el comando: /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s user1 -p defaultPassword wrapKey -k <AES-256 key handle> -w <wrapping key handle> -out AES-256-CHSM-encrypted.key 3.4. Vuelva a importar esa llave cifrada al CloudHSM: /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s user1 -p defaultPassword unWrapKey -f AES-256-CHSM-encrypted.key -w <wrapping key handle> 3.5. Saiga del agente con el comando: exit 4. Usando openssl con llaves en el CloudHSM (detalhes) 4.1. Instale la libreria wget https://s3.amazonaws.com/cloudhsmv2-software/CloudHsmClient/EL7/cloudhsm-client-dyn-latest.el7.x86_64.rpm sudo yum install -y ./cloudhsm-client-dyn-latest.el7.x86_64.rpm 4.2. Configure las credenciales export n3fips_password=user1:defaultPassword 4.3. Cree un key pair openssl genrsa -engine cloudhsm -out fake_pem.key 2048 4.4. Cree un CSR openssl req -engine cloudhsm -new -key fake_pem.key -out webserver.csr 4.4. Cree un Certificado auto-firmado con el comando: openssl x509 -engine cloudhsm -req -days 365 -in webserver.csr -signkey fake_pem.key -out webserver.crt 5. Ponga el certificado y fake_pem en el bucket S3 (detalhes) 5.1. Envie el archivo PEM de llave y el certificado generado al bucket S3 con los comandos aws s3 cp ./fake_pem.key s3://crypto- <su user id> / aws s3 cp ./webserver.crt s3://crypto- <su user id> /","title":"Gest\u00e3o de chaves"},{"location":"key_management/#gerenciamento-de-chaves","text":"","title":"Gerenciamento de Chaves"},{"location":"key_management/#1-criando-chaves-no-hsm","text":"(detalhes) Neste m\u00f3dulo varios tipos de chaves ser\u00e3o criados (sim\u00e9tricas e assim\u00e9tricas) Entre o user id ou valor aleat\u00f3rio usado no m\u00f3dulo anterior: 1.1. Volte \u00e0 janela ou aba do navegador do servi\u00e7o AWS Systems Manager em que est\u00e1 aberto o terminal \u00e0 instancia 1.2. Inicie o servi\u00e7o cliente do CloudHSM usando: sudo systemctl start cloudhsm-client 1.3. Inicie o agente de gest\u00e3o de chaves com o comando ./key_mgmt_util 1.4. Fa\u00e7a login com o usu\u00e1rio crypto user criado anteriormente usando: loginHSM -u CU -s user1 -p defaultPassword 1.5. Crie uma chave sim\u00e9trica AES-256 com o comando: genSymKey -t 31 -s 32 -l aes256 Tome nota do Key Handle desta chave aqui: 1.6. Crie uma chave assim\u00e9trica RSA com o comando: genRSAKeyPair -m 2048 -e 65541 -l rsa_test Tome nota do Key Handle desta chave aqui: 1.7. Crie uma chave de curva el\u00edptica com o comando: genECCKeyPair -i 12 -l ecc12 1.8. Crie uma wrapping key com o no CloudHSM e tome nota de seu key handle : genSymKey -t 31 -s 32 -l wrappingKey Llene el Key Handle del wrapping key: Tome nota tambi\u00e9n de ese numero en un editor de texto pues la va a necesitar en una etapa seguiente. 1.9. Saiga del agente con el comando: exit","title":"1. Criando chaves no HSM"},{"location":"key_management/#2-importando-una-llave-aes-256-al-cloudhsm","text":"(detalhes) En este modulo se va a importar una llave simetrica AES-256 al CloudHSM 2.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 2.2. Genere una llave simetrica AES-256 para importaci\u00f3n con la herramienta openssl openssl rand -out aes256-forImport.key 32 2.3. Use el comando imSymKey para importar al CloudHSM la llave AES-256 generada con openssl en el paso anteriormente. /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s user1 -p defaultPassword imSymKey -f aes256-forImport.key -w <wrapping key handle> -t 31 -l imported","title":"2. Importando una llave AES-256 al CloudHSM"},{"location":"key_management/#3-exportando-la-llave-aes-256-del-cloudhsm","text":"(detalhes) 3.1. Exporte en texto plano la llave AES-256 creada anteriormente (key handle -k). El agente usa una llave AES-256 de wrapping creada anteriormente(key handle -w) en el CloudHSM. Entonces escribe la llave en texto plano al archivo AES-256-CHSM-unencrypted.key. /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s user1 -p defaultPassword exSymKey -k <AES-256 key handle> -w <wrapping key handle> -out AES-256-CHSM-unencrypted.key 3.2. Importe la llave AES-256 en texto plano creada anteriormente (key handle -k). /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s user1 -p defaultPassword imSymKey -t 31 -f AES-256-CHSM-unencrypted.key -w <wrapping key handle> -l imported_fromPlaintext 3.3. Exporte la misma llave AES-256 de manera cifrada con el comando: /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s user1 -p defaultPassword wrapKey -k <AES-256 key handle> -w <wrapping key handle> -out AES-256-CHSM-encrypted.key 3.4. Vuelva a importar esa llave cifrada al CloudHSM: /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s user1 -p defaultPassword unWrapKey -f AES-256-CHSM-encrypted.key -w <wrapping key handle> 3.5. Saiga del agente con el comando: exit","title":"3. Exportando la llave AES-256 del CloudHSM"},{"location":"key_management/#4-usando-openssl-con-llaves-en-el-cloudhsm","text":"(detalhes) 4.1. Instale la libreria wget https://s3.amazonaws.com/cloudhsmv2-software/CloudHsmClient/EL7/cloudhsm-client-dyn-latest.el7.x86_64.rpm sudo yum install -y ./cloudhsm-client-dyn-latest.el7.x86_64.rpm 4.2. Configure las credenciales export n3fips_password=user1:defaultPassword 4.3. Cree un key pair openssl genrsa -engine cloudhsm -out fake_pem.key 2048 4.4. Cree un CSR openssl req -engine cloudhsm -new -key fake_pem.key -out webserver.csr 4.4. Cree un Certificado auto-firmado con el comando: openssl x509 -engine cloudhsm -req -days 365 -in webserver.csr -signkey fake_pem.key -out webserver.crt","title":"4. Usando openssl con llaves en el CloudHSM"},{"location":"key_management/#5-ponga-el-certificado-y-fake_pem-en-el-bucket-s3","text":"(detalhes) 5.1. Envie el archivo PEM de llave y el certificado generado al bucket S3 con los comandos aws s3 cp ./fake_pem.key s3://crypto- <su user id> / aws s3 cp ./webserver.crt s3://crypto- <su user id> /","title":"5. Ponga el certificado y fake_pem en el bucket S3"},{"location":"kms/","text":"AWS Key Management Service 1. Cree un perfil para una instancia EC2 (detalles) 1.1. En una nueva pesta\u00f1a o ventana del navegador, abra la consola de AWS en el servicio AWS Identity and Access Management 1.2. En el menu lateral, haga click en Roles y despu\u00e9s en Create role 1.3. Deje las selecciones por defecto de entidades confiadas como AWS service , haga click en el servicio EC2 y despu\u00e9s en Next: Permissions 1.4. Filtre las politicas por SSM , seleccione la pol\u00edtica AmazonEC2RoleforSSM y haga click en Next: Tags 1.5. Haga click en Next: Review (Tags no van a ser necesarios en ese momento) 1.6. En el campo Role name llene con el nombre EC2-Role y haga click en Create role 1.7. En el topo de la pantalla aparecer\u00e1 el mensaje \"The role EC2-SSM-S3 has been created\", haga click en el enlace EC2-Role 1.8. Tome nota del ARN (Amazon Resource Name) en Role ARN (formato arn:aws:iam::XXXXXXXXXXXX:role/EC2-SSM-S3 ) Entre el ARN del perfil: 2. Cree un bucket S3 (detalles) 2.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS S3 2.2. Haga click en + Create bucket 2.3. En el campo Bucket name llene el texto s3encrypted-<su user id> 2.4. Verifique que em Region est\u00e1 selecionado US East (N. Virginia) e clique em Create** Entre el Nombre final del bucket: 3. Cree una instancia EC2 (detalles) 3.1. Vuelva a la pesta\u00f1a o ventana del navegador del Amazon EC2 3.2. Haga click en Launch Instance 3.3. Haga click en Select en la linea que corresponde a la AMI Amazon Linux 2 AMI (HVM), SSD Volume Type 3.4. Deje seleccionado el tipo de instancia t2.micro y haga click en Next: Configure Instance Details 3.5. Mantenga las configuraciones por defecto y en el punto IAM role seleccione el perfil EC2-Role creado anteriormente 3.6. Haga click en Review and Launch y en la pantalla siguiente en Launch 3.7. Remplaze la opci\u00f3n \"Choose an existing key pair\" por Proceed without a key pair 3.8. Seleccione I acknowledge that I will not (...) y haga click en Launch Instance 4. Pruebe el acceso de la instancia al bucket S3 (detalles) 4.1. Abra una nueva pesta\u00f1a o ventana del navegador en el servicio AWS Systems Manager 4.2. En el menu lateral, haga click Session Manager 4.3. Haga click en Start session 4.4. Seleccione la instancia creada anteriormente y haga click en Start session 4.5. Una nueva pesta\u00f1a se abrir\u00e1, haga click en la ventana y ejecute cd <enter> 4.6. Para listar los buckets S3, ejecute el comando aws s3 ls 4.7. El acceso sera denegado pues la instancia no tiene permiso de acceso al servicio S3 4.8. Mantenga la pesta\u00f1a o ventana del navegador abierta pues se la usaremos en otras etapas 5. Agregue permissos de acceso al S3 a la instancia (detalles) 5.1. Vuelva a la pesta\u00f1a o ventana del navegador del Amazon IAM 5.2. HEn el menu lateral haga click en Roles y filtre por ec2 5.3. Haga click en el perfil EC2-Role creado anteriormente 5.4. Haga click en Attach policies 5.5. Filtre las politicas por S3 , seleccione la politica AmazonS3FullAccess y haga click en Attach policy 5.6. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 5.7. Ejecute nuevamente el comando para listar los buckets S3 aws s3 ls 5.7. Ahora con los permisos establecidos, el acceso debe ser permitido y una lista de buckets sera mostrada 6. Cree una Customer Master Key (detalles) 6.1. Abra una nueva pesta\u00f1a o ventana del navegador en el servicio AWS Key Management Service 6.2. Haga click en Create Key 6.3. En el campo Alias llene con el texto KMS-CMK 6.4. En Advanced options deje seleccionado KMS como origen del material de llaves y haga click en Next 6.5. Haga click en Next 6.6. En las opciones de elecci\u00f3n de administradores, deje los valores est\u00e1ndar y haga click en Next 6.7. En las opciones de administradores de llaves, filtre por user1 , seleccione el usuario user1 y haga click en Next 6.8. Haga click en Finish Entre el Key Id de la llave creada: 7. Configure el bucket para encripci\u00f3n, agregue un objeto y pruebe el acceso (detalles) 7.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS S3 7.2. Haga click en el numbre del bucket creado anteriormente <nombre del bucket> 7.3. Haga click en la pesta\u00f1a Properties y despu\u00e9s en Default encryption 7.4. Seleccione encripci\u00f3n KMS-CMK , elija la llave KMS-CMK y haga click en Save 7.5. Cree o elija un archivo no confidencial o personal en su computadora que no sea muy grande 7.6. Vuelva a la pesta\u00f1a Overview y haga click en Upload 7.7. Haga click en Add files y seleccione el archivo; o arrastre el archivo a la pantalla 7.8. Haga click en Upload Entre el nombre del archivo : 7.9. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 7.10. Intente descargar el archivo (no ser\u00e1 posible pues la instancia no tiene permiso a la llave de encripci\u00f3n) aws s3 cp s3:// <nombre del bucket> / <nombre del archivo> . 8. Cambie los permisos de acceso a la llave y intente de nuevo (detalles) 8.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Key Management Service 8.2. En el menu lateral, haga click en Customer managed keys 8.3. Seleccione el alias de la llave generada anteriormente KMS-CMK 8.4. En la secci\u00f3n Key users haga click en Add 8.5. Filtre por ec2 , seleccione EC2-Role y haga click en Add 8.6. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia aws s3 cp s3:// <nombre del bucket> / <nombre del archivo> . 8.7. En esta vez el acceso al archivo sera permitido pues el perfil de la instancia tiene permisi\u00f3n para uso de la llave 9. Configure el rotacionamiento automatico de la llave (detalles) 9.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Key Management Service 9.2. En el menu lateral, haga click en Customer managed keys 9.3. Seleccione el nombre de la llave generada anteriormente KMS-CMK 9.4. En la pesta\u00f1a Key policy haga click en Edit 9.5. Haga click en la pesta\u00f1a Key rotation 9.6. Seleccione la opci\u00f3n Automatically rotate this CMK every year. 9.7. Haga click en Save 10. Agregue permissos de acceso al AWS KMS a la instancia (detalles) 10.1. Vuelva a la pesta\u00f1a o ventana del navegador del Amazon IAM 10.2. HEn el menu lateral haga click en Roles y filtre por ec2 10.3. Haga click en el perfil EC2-Role creado anteriormente 10.4. Haga click en Attach policies 10.5. Filtre las politicas por S3 , seleccione la politica AmazonS3FullAccess y haga click en Attach policy 10.6. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 10.7. Ejecute nuevamente el comando para listar los buckets S3 aws s3 ls 10.8. Ahora con los permisos establecidos, el acceso debe ser permitido y una lista de buckets sera mostrada 11. Haga encripci\u00f3n del lado del cliente usando llaves del KMS (detalles) 11.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 11.2. Instale las herramientas de encripcion de AWS con el comando: sudo install python3 python-pip3 -y sudo pip3 install aws-encryption-sdk-cli 11.3. Descargue un archivo para cifrar con el comando: cd /tmp wget https://d1.awsstatic.com/whitepapers/KMS-Cryptographic-Details.pdf 11.1. Verifique el formato del archivo usando el comando: file KMS-Cryptographic-Details.pdf 11.1. Usando la herramienta de encripci\u00f3n de AWS, cifre el archivo usando la llave creada anteriormente: aws-encryption-cli --encrypt --input KMS-Cryptographic-Details.pdf \\ --master-keys key= <cmk key id> \\ --encryption-context purpose=test \\ --metadata-output ~/metadata \\ --output . 11.1. Verifique el formato del archivo cifrado usando el comando: file KMS-Cryptographic-Details.pdf.encrypted 11.1. Decifre el archivo usando el comando: aws-encryption-cli --decrypt --input KMS-Cryptographic-Details.pdf.encrypted \\ --encryption-context purpose=test \\ --metadata-output ~/metadata \\ --output . 11.1. Verifique el formato del archivo cifrado usando el comando: file KMS-Cryptographic-Details.pdf.encrypted 11.1. Verifique si los archivos son identicos con el comando: sha256sum KMS-Cryptographic-Details.pdf KMS-Cryptographic-Details.pdf.encrypted.decrypted","title":"KMS"},{"location":"kms/#aws-key-management-service","text":"","title":"AWS Key Management Service"},{"location":"kms/#1-cree-un-perfil-para-una-instancia-ec2","text":"(detalles) 1.1. En una nueva pesta\u00f1a o ventana del navegador, abra la consola de AWS en el servicio AWS Identity and Access Management 1.2. En el menu lateral, haga click en Roles y despu\u00e9s en Create role 1.3. Deje las selecciones por defecto de entidades confiadas como AWS service , haga click en el servicio EC2 y despu\u00e9s en Next: Permissions 1.4. Filtre las politicas por SSM , seleccione la pol\u00edtica AmazonEC2RoleforSSM y haga click en Next: Tags 1.5. Haga click en Next: Review (Tags no van a ser necesarios en ese momento) 1.6. En el campo Role name llene con el nombre EC2-Role y haga click en Create role 1.7. En el topo de la pantalla aparecer\u00e1 el mensaje \"The role EC2-SSM-S3 has been created\", haga click en el enlace EC2-Role 1.8. Tome nota del ARN (Amazon Resource Name) en Role ARN (formato arn:aws:iam::XXXXXXXXXXXX:role/EC2-SSM-S3 ) Entre el ARN del perfil:","title":"1. Cree un perfil para una instancia EC2"},{"location":"kms/#2-cree-un-bucket-s3","text":"(detalles) 2.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS S3 2.2. Haga click en + Create bucket 2.3. En el campo Bucket name llene el texto s3encrypted-<su user id> 2.4. Verifique que em Region est\u00e1 selecionado US East (N. Virginia) e clique em Create** Entre el Nombre final del bucket:","title":"2. Cree un bucket S3"},{"location":"kms/#3-cree-una-instancia-ec2","text":"(detalles) 3.1. Vuelva a la pesta\u00f1a o ventana del navegador del Amazon EC2 3.2. Haga click en Launch Instance 3.3. Haga click en Select en la linea que corresponde a la AMI Amazon Linux 2 AMI (HVM), SSD Volume Type 3.4. Deje seleccionado el tipo de instancia t2.micro y haga click en Next: Configure Instance Details 3.5. Mantenga las configuraciones por defecto y en el punto IAM role seleccione el perfil EC2-Role creado anteriormente 3.6. Haga click en Review and Launch y en la pantalla siguiente en Launch 3.7. Remplaze la opci\u00f3n \"Choose an existing key pair\" por Proceed without a key pair 3.8. Seleccione I acknowledge that I will not (...) y haga click en Launch Instance","title":"3. Cree una instancia EC2"},{"location":"kms/#4-pruebe-el-acceso-de-la-instancia-al-bucket-s3","text":"(detalles) 4.1. Abra una nueva pesta\u00f1a o ventana del navegador en el servicio AWS Systems Manager 4.2. En el menu lateral, haga click Session Manager 4.3. Haga click en Start session 4.4. Seleccione la instancia creada anteriormente y haga click en Start session 4.5. Una nueva pesta\u00f1a se abrir\u00e1, haga click en la ventana y ejecute cd <enter> 4.6. Para listar los buckets S3, ejecute el comando aws s3 ls 4.7. El acceso sera denegado pues la instancia no tiene permiso de acceso al servicio S3 4.8. Mantenga la pesta\u00f1a o ventana del navegador abierta pues se la usaremos en otras etapas","title":"4. Pruebe el acceso de la instancia al bucket S3"},{"location":"kms/#5-agregue-permissos-de-acceso-al-s3-a-la-instancia","text":"(detalles) 5.1. Vuelva a la pesta\u00f1a o ventana del navegador del Amazon IAM 5.2. HEn el menu lateral haga click en Roles y filtre por ec2 5.3. Haga click en el perfil EC2-Role creado anteriormente 5.4. Haga click en Attach policies 5.5. Filtre las politicas por S3 , seleccione la politica AmazonS3FullAccess y haga click en Attach policy 5.6. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 5.7. Ejecute nuevamente el comando para listar los buckets S3 aws s3 ls 5.7. Ahora con los permisos establecidos, el acceso debe ser permitido y una lista de buckets sera mostrada","title":"5. Agregue permissos de acceso al S3 a la instancia"},{"location":"kms/#6-cree-una-customer-master-key","text":"(detalles) 6.1. Abra una nueva pesta\u00f1a o ventana del navegador en el servicio AWS Key Management Service 6.2. Haga click en Create Key 6.3. En el campo Alias llene con el texto KMS-CMK 6.4. En Advanced options deje seleccionado KMS como origen del material de llaves y haga click en Next 6.5. Haga click en Next 6.6. En las opciones de elecci\u00f3n de administradores, deje los valores est\u00e1ndar y haga click en Next 6.7. En las opciones de administradores de llaves, filtre por user1 , seleccione el usuario user1 y haga click en Next 6.8. Haga click en Finish Entre el Key Id de la llave creada:","title":"6. Cree una Customer Master Key"},{"location":"kms/#7-configure-el-bucket-para-encripcion-agregue-un-objeto-y-pruebe-el-acceso","text":"(detalles) 7.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS S3 7.2. Haga click en el numbre del bucket creado anteriormente <nombre del bucket> 7.3. Haga click en la pesta\u00f1a Properties y despu\u00e9s en Default encryption 7.4. Seleccione encripci\u00f3n KMS-CMK , elija la llave KMS-CMK y haga click en Save 7.5. Cree o elija un archivo no confidencial o personal en su computadora que no sea muy grande 7.6. Vuelva a la pesta\u00f1a Overview y haga click en Upload 7.7. Haga click en Add files y seleccione el archivo; o arrastre el archivo a la pantalla 7.8. Haga click en Upload Entre el nombre del archivo : 7.9. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 7.10. Intente descargar el archivo (no ser\u00e1 posible pues la instancia no tiene permiso a la llave de encripci\u00f3n) aws s3 cp s3:// <nombre del bucket> / <nombre del archivo> .","title":"7. Configure el bucket para encripci\u00f3n, agregue un objeto y pruebe el acceso"},{"location":"kms/#8-cambie-los-permisos-de-acceso-a-la-llave-y-intente-de-nuevo","text":"(detalles) 8.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Key Management Service 8.2. En el menu lateral, haga click en Customer managed keys 8.3. Seleccione el alias de la llave generada anteriormente KMS-CMK 8.4. En la secci\u00f3n Key users haga click en Add 8.5. Filtre por ec2 , seleccione EC2-Role y haga click en Add 8.6. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia aws s3 cp s3:// <nombre del bucket> / <nombre del archivo> . 8.7. En esta vez el acceso al archivo sera permitido pues el perfil de la instancia tiene permisi\u00f3n para uso de la llave","title":"8. Cambie los permisos de acceso a la llave y intente de nuevo"},{"location":"kms/#9-configure-el-rotacionamiento-automatico-de-la-llave","text":"(detalles) 9.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Key Management Service 9.2. En el menu lateral, haga click en Customer managed keys 9.3. Seleccione el nombre de la llave generada anteriormente KMS-CMK 9.4. En la pesta\u00f1a Key policy haga click en Edit 9.5. Haga click en la pesta\u00f1a Key rotation 9.6. Seleccione la opci\u00f3n Automatically rotate this CMK every year. 9.7. Haga click en Save","title":"9. Configure el rotacionamiento automatico de la llave"},{"location":"kms/#10-agregue-permissos-de-acceso-al-aws-kms-a-la-instancia","text":"(detalles) 10.1. Vuelva a la pesta\u00f1a o ventana del navegador del Amazon IAM 10.2. HEn el menu lateral haga click en Roles y filtre por ec2 10.3. Haga click en el perfil EC2-Role creado anteriormente 10.4. Haga click en Attach policies 10.5. Filtre las politicas por S3 , seleccione la politica AmazonS3FullAccess y haga click en Attach policy 10.6. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 10.7. Ejecute nuevamente el comando para listar los buckets S3 aws s3 ls 10.8. Ahora con los permisos establecidos, el acceso debe ser permitido y una lista de buckets sera mostrada","title":"10. Agregue permissos de acceso al AWS KMS a la instancia"},{"location":"kms/#11-haga-encripcion-del-lado-del-cliente-usando-llaves-del-kms","text":"(detalles) 11.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 11.2. Instale las herramientas de encripcion de AWS con el comando: sudo install python3 python-pip3 -y sudo pip3 install aws-encryption-sdk-cli 11.3. Descargue un archivo para cifrar con el comando: cd /tmp wget https://d1.awsstatic.com/whitepapers/KMS-Cryptographic-Details.pdf 11.1. Verifique el formato del archivo usando el comando: file KMS-Cryptographic-Details.pdf 11.1. Usando la herramienta de encripci\u00f3n de AWS, cifre el archivo usando la llave creada anteriormente: aws-encryption-cli --encrypt --input KMS-Cryptographic-Details.pdf \\ --master-keys key= <cmk key id> \\ --encryption-context purpose=test \\ --metadata-output ~/metadata \\ --output . 11.1. Verifique el formato del archivo cifrado usando el comando: file KMS-Cryptographic-Details.pdf.encrypted 11.1. Decifre el archivo usando el comando: aws-encryption-cli --decrypt --input KMS-Cryptographic-Details.pdf.encrypted \\ --encryption-context purpose=test \\ --metadata-output ~/metadata \\ --output . 11.1. Verifique el formato del archivo cifrado usando el comando: file KMS-Cryptographic-Details.pdf.encrypted 11.1. Verifique si los archivos son identicos con el comando: sha256sum KMS-Cryptographic-Details.pdf KMS-Cryptographic-Details.pdf.encrypted.decrypted","title":"11. Haga encripci\u00f3n del lado del cliente usando llaves del KMS"},{"location":"networking_setup/","text":"Create VPC aws ec2 create-vpc --cidr-block 10.0.0.0/16 Enter VPC Id from output: aws ec2 modify-vpc-attribute --enable-dns-hostnames --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-tags --resources vpc-XXXXXXXXXXXX --tags Key=Name,Value=cloudhsm-vpc Create protected subnets aws ec2 describe-availability-zones --region us-east-1 aws ec2 create-subnet --availability-zone us-east-1a --cidr-block 10.0.0.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1b --cidr-block 10.0.1.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1c --cidr-block 10.0.2.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1d --cidr-block 10.0.3.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1e --cidr-block 10.0.4.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1f --cidr-block 10.0.5.0/24 --vpc-id vpc-XXXXXXXXXXXX Create private subnets aws ec2 create-subnet --availability-zone us-east-1a --cidr-block 10.0.128.0/24 --vpc-id vpc-XXXXXXXXXXXX Enter Subnet Id from output: aws ec2 create-subnet --availability-zone us-east-1b --cidr-block 10.0.129.0/24 --vpc-id vpc-XXXXXXXXXXXX Enter Subnet Id from output: Tag private subnets aws ec2 create-tags --resources subnet-XXXXXXXXXXXX --tags Key=Name,Value=private-subnet-us-east-1a aws ec2 create-tags --resources subnet-XXXXXXXXXXXX --tags Key=Name,Value=private-subnet-us-east-1b Create Security Groups for VPC Endpoints aws ec2 create-security-group --group-name vpc-endpoints --description \"For communication with VPC Endpoints\" --vpc-id vpc-XXXXXXXXXXXX Enter Security Group Id from output: aws ec2 authorize-security-group-ingress --group-id sg-XXXXXXXXXXXX --cidr '10.0.0.0/16' --protocol tcp --port 443 Create VPC Endpoints to manage EC2 instances through Session Manager aws ec2 describe-vpc-endpoint-services aws ec2 create-vpc-endpoint --vpc-endpoint-type Interface --private-dns-enabled --service-name com.amazonaws.us-east-1.ec2 --security-group-ids sg-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX --subnet-ids subnet-XXXXXXXXXXXX vpc-XXXXXXXXXXXX aws ec2 create-vpc-endpoint --vpc-endpoint-type Interface --private-dns-enabled --service-name com.amazonaws.us-east-1.ec2messages --security-group-ids sg-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX --subnet-ids subnet-XXXXXXXXXXXX vpc-XXXXXXXXXXXX aws ec2 create-vpc-endpoint --vpc-endpoint-type Interface --private-dns-enabled --service-name com.amazonaws.us-east-1.ssm --security-group-ids sg-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX --subnet-ids subnet-XXXXXXXXXXXX vpc-XXXXXXXXXXXX aws ec2 create-vpc-endpoint --vpc-endpoint-type Interface --private-dns-enabled --service-name com.amazonaws.us-east-1.ssmmessages --security-group-ids sg-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX --subnet-ids subnet-XXXXXXXXXXXX vpc-XXXXXXXXXXXX Create public subnets aws ec2 create-subnet --availability-zone us-east-1a --cidr-block 10.0.192.0/24 --vpc-id vpc-XXXXXXXXXXXX Enter Subnet Id from output: aws ec2 create-subnet --availability-zone us-east-1b --cidr-block 10.0.193.0/24 --vpc-id vpc-XXXXXXXXXXXX Enter Subnet Id from output: aws ec2 create-tags --resources subnet-XXXXXXXXXXXX --tags Key=Name,Value=public-subnet-us-east-1a aws ec2 create-tags --resources subnet-XXXXXXXXXXXX --tags Key=Name,Value=public-subnet-us-east-1b Create and attach internet gateway to VPC aws ec2 create-internet-gateway Enter Subnet Id from output: aws ec2 attach-internet-gateway --internet-gateway-id igw-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX Set Subnets for auto public IP assignment aws ec2 modify-subnet-attribute --map-public-ip-on-launch --subnet-id subnet-XXXXXXXXXXXX aws ec2 modify-subnet-attribute --map-public-ip-on-launch --subnet-id subnet-XXXXXXXXXXXX Allocate Elastic IP and create NAT Gateway aws ec2 allocate-address Enter Elastic IP Id from output: aws ec2 create-nat-gateway --allocation-id subnet-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX Enter NAT Gateway Id from output: Create Route Table for public subnet aws ec2 create-route-table --vpc-id vpc-XXXXXXXXXXXX Enter Route Table Id from output: aws ec2 create-tags --resources rtb-XXXXXXXXXXXX --tags Key=Name,Value=public-route-table aws ec2 create-route --destination-cidr-block 0.0.0.0/0 --gateway-id igw-XXXXXXXXXXXX --route-table-id rtb-XXXXXXXXXXXX aws ec2 associate-route-table --route-table-id rtb-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX aws ec2 associate-route-table --route-table-id rtb-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX Create Route Table for private subnet aws ec2 create-route-table --vpc-id vpc-XXXXXXXXXXXX Enter Route Table Id from output: aws ec2 create-tags --resources rtb-XXXXXXXXXXXX --tags Key=Name,Value=private-route-table aws ec2 create-route --destination-cidr-block 0.0.0.0/0 --nat-gateway-id nat-XXXXXXXXXXXX --route-table-id rtb-XXXXXXXXXXXX aws ec2 associate-route-table --route-table-id rtb-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX aws ec2 associate-route-table --route-table-id rtb-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX","title":"Networking setup"},{"location":"networking_setup/#create-vpc","text":"aws ec2 create-vpc --cidr-block 10.0.0.0/16 Enter VPC Id from output: aws ec2 modify-vpc-attribute --enable-dns-hostnames --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-tags --resources vpc-XXXXXXXXXXXX --tags Key=Name,Value=cloudhsm-vpc","title":"Create VPC"},{"location":"networking_setup/#create-protected-subnets","text":"aws ec2 describe-availability-zones --region us-east-1 aws ec2 create-subnet --availability-zone us-east-1a --cidr-block 10.0.0.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1b --cidr-block 10.0.1.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1c --cidr-block 10.0.2.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1d --cidr-block 10.0.3.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1e --cidr-block 10.0.4.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1f --cidr-block 10.0.5.0/24 --vpc-id vpc-XXXXXXXXXXXX","title":"Create protected subnets"},{"location":"networking_setup/#create-private-subnets","text":"aws ec2 create-subnet --availability-zone us-east-1a --cidr-block 10.0.128.0/24 --vpc-id vpc-XXXXXXXXXXXX Enter Subnet Id from output: aws ec2 create-subnet --availability-zone us-east-1b --cidr-block 10.0.129.0/24 --vpc-id vpc-XXXXXXXXXXXX Enter Subnet Id from output:","title":"Create private subnets"},{"location":"networking_setup/#tag-private-subnets","text":"aws ec2 create-tags --resources subnet-XXXXXXXXXXXX --tags Key=Name,Value=private-subnet-us-east-1a aws ec2 create-tags --resources subnet-XXXXXXXXXXXX --tags Key=Name,Value=private-subnet-us-east-1b","title":"Tag private subnets"},{"location":"networking_setup/#create-security-groups-for-vpc-endpoints","text":"aws ec2 create-security-group --group-name vpc-endpoints --description \"For communication with VPC Endpoints\" --vpc-id vpc-XXXXXXXXXXXX Enter Security Group Id from output: aws ec2 authorize-security-group-ingress --group-id sg-XXXXXXXXXXXX --cidr '10.0.0.0/16' --protocol tcp --port 443","title":"Create Security Groups for VPC Endpoints"},{"location":"networking_setup/#create-vpc-endpoints-to-manage-ec2-instances-through-session-manager","text":"aws ec2 describe-vpc-endpoint-services aws ec2 create-vpc-endpoint --vpc-endpoint-type Interface --private-dns-enabled --service-name com.amazonaws.us-east-1.ec2 --security-group-ids sg-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX --subnet-ids subnet-XXXXXXXXXXXX vpc-XXXXXXXXXXXX aws ec2 create-vpc-endpoint --vpc-endpoint-type Interface --private-dns-enabled --service-name com.amazonaws.us-east-1.ec2messages --security-group-ids sg-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX --subnet-ids subnet-XXXXXXXXXXXX vpc-XXXXXXXXXXXX aws ec2 create-vpc-endpoint --vpc-endpoint-type Interface --private-dns-enabled --service-name com.amazonaws.us-east-1.ssm --security-group-ids sg-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX --subnet-ids subnet-XXXXXXXXXXXX vpc-XXXXXXXXXXXX aws ec2 create-vpc-endpoint --vpc-endpoint-type Interface --private-dns-enabled --service-name com.amazonaws.us-east-1.ssmmessages --security-group-ids sg-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX --subnet-ids subnet-XXXXXXXXXXXX vpc-XXXXXXXXXXXX","title":"Create VPC Endpoints to manage EC2 instances through Session Manager"},{"location":"networking_setup/#create-public-subnets","text":"aws ec2 create-subnet --availability-zone us-east-1a --cidr-block 10.0.192.0/24 --vpc-id vpc-XXXXXXXXXXXX Enter Subnet Id from output: aws ec2 create-subnet --availability-zone us-east-1b --cidr-block 10.0.193.0/24 --vpc-id vpc-XXXXXXXXXXXX Enter Subnet Id from output: aws ec2 create-tags --resources subnet-XXXXXXXXXXXX --tags Key=Name,Value=public-subnet-us-east-1a aws ec2 create-tags --resources subnet-XXXXXXXXXXXX --tags Key=Name,Value=public-subnet-us-east-1b","title":"Create public subnets"},{"location":"networking_setup/#create-and-attach-internet-gateway-to-vpc","text":"aws ec2 create-internet-gateway Enter Subnet Id from output: aws ec2 attach-internet-gateway --internet-gateway-id igw-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX","title":"Create and attach internet gateway to VPC"},{"location":"networking_setup/#set-subnets-for-auto-public-ip-assignment","text":"aws ec2 modify-subnet-attribute --map-public-ip-on-launch --subnet-id subnet-XXXXXXXXXXXX aws ec2 modify-subnet-attribute --map-public-ip-on-launch --subnet-id subnet-XXXXXXXXXXXX","title":"Set Subnets for auto public IP assignment"},{"location":"networking_setup/#allocate-elastic-ip-and-create-nat-gateway","text":"aws ec2 allocate-address Enter Elastic IP Id from output: aws ec2 create-nat-gateway --allocation-id subnet-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX Enter NAT Gateway Id from output:","title":"Allocate Elastic IP and create NAT Gateway"},{"location":"networking_setup/#create-route-table-for-public-subnet","text":"aws ec2 create-route-table --vpc-id vpc-XXXXXXXXXXXX Enter Route Table Id from output: aws ec2 create-tags --resources rtb-XXXXXXXXXXXX --tags Key=Name,Value=public-route-table aws ec2 create-route --destination-cidr-block 0.0.0.0/0 --gateway-id igw-XXXXXXXXXXXX --route-table-id rtb-XXXXXXXXXXXX aws ec2 associate-route-table --route-table-id rtb-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX aws ec2 associate-route-table --route-table-id rtb-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX","title":"Create Route Table for public subnet"},{"location":"networking_setup/#create-route-table-for-private-subnet","text":"aws ec2 create-route-table --vpc-id vpc-XXXXXXXXXXXX Enter Route Table Id from output: aws ec2 create-tags --resources rtb-XXXXXXXXXXXX --tags Key=Name,Value=private-route-table aws ec2 create-route --destination-cidr-block 0.0.0.0/0 --nat-gateway-id nat-XXXXXXXXXXXX --route-table-id rtb-XXXXXXXXXXXX aws ec2 associate-route-table --route-table-id rtb-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX aws ec2 associate-route-table --route-table-id rtb-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX","title":"Create Route Table for private subnet"},{"location":"website/","text":"Creando un Website cifrado con TLS usando llaves del CloudHSM 1. Cree un usuario para el servidor web y comparta llave privada (detalles) 1.1. Abra en una nueva pesta\u00f1a o ventana del navegador del AWS CloudWatch en la terminal de la instancia 1.2. Seleccione el Logs en el menu lateral 1.3. Haga click en el \"Log Group\" con el nombre /aws/cloudhsm/cluster-<cluster_id> y despu\u00e9s en Search Log Group 1.4. Filtre los logs por el evento de generaci\u00f3n de par de llaves CN_GENERATE_KEY_PAIR 1.5. Haga click en la flecha para expandir los logs Entre el Key Handle de la llave privada generada con openssl: 1.6. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 1.7. Entre en el agente de administraci\u00f3n del cluster con el comando: ./cloudhsm_mgmt_util.sh 1.8. Login loginHSM CO admin defaultPassword 1.9. Cree un nuevo usuario para el servidor web createUser CU webserver1 defaultPassword 1.10. Tome nota del numero de usuario para compartirle la llave en un paso posterior listUsers Entre el User ID del usuario webserver1 : 1.11. Haga logout del CloudHSM como usuario Crypto Officer admin: logoutHSM 1.12. Haga login al CloudHSM como el usuario user1 que es administrador de la llave que sera compartida: loginHSM CU user1 defaultPassword 1.13. Comparta la llave privada con el usuario webserver1 con el comando: shareKey <public key handle> <webserver1 user id> 1 1.14. Ahora intentemos exportar la llave como el usuario webserver1. Para eso generaremos una llava para wrapping con el comando: /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s webserver1 -p defaultPassword genSymKey -t 31 -s 32 -l wrappingKey Entre el Key Handle de la llave generada: 1.15. Y intente exportar la llave con el comando: /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s webserver1 -p defaultPassword exportPrivateKey -k <openssl priv key handle> -w <wrapping key handle> -out webserver_priv.key El CloudHSM no permitir\u00e1 exportar essa llave pues el usuario webserver1 no es administrador de la llave, apenas la tiene compartida para operaciones de cifrado con ella. 2. Cree un servidor web usando la llave en el CloudHSM (detalles) 2.1. Vuelva a pesta\u00f1a o ventana del navegador del AWS EC2 2.2. Haga click en Launch Instance 2.3. Seleccione la AMI Amazon Linux 2 AMI haciendo click en Select en la linea que corresponde 2.4. Deje seleccionado el tipo de instancia t2.micro y haga click en Next: Configure Instance Details 2.5. En la opci\u00f3n Network elija la VPC con nombre cloudhsm-vpc 2.6. En la opci\u00f3n Subnet elija la Subnet con nombre public-subnet-us-east-1a 2.7. En IAM role seleccione el perfil EC2-SSM+S3Crypto y haga click en Next: Add Storage 2.8. Haga click en Next: Add Tags 2.9. Haga click en Add Tag , en el campo \"Key\" llene con Name y en el campo \"Value\" llene con webserver1 2.10. Haga click en Next: Configure Security Group 2.11. Deje Create a new security group seleccionado y en \"Security group name\" llene con webserver1-sg 2.12. Borre la linea de configuraci\u00f3n de acceso SSH haciendo click en el icono X 2.13. Haga click en Add Rule , en el campo \"Type\" seleccione HTTPS y deje los otros campos con el valor por defecto 2.14. Haga click en Review and Launch y despu\u00e9s en Launch 2.15. Remplaze la opci\u00f3n \"Choose an existing key pair\" por Proceed without a key pair 2.16. Seleccione I acknowledge that I will not (...) y haga click en Launch Instance 2.17. Haga click en View Instances 2.18. Seleccione la instancia con nombre webserver1 2.19. Haga click en Actions , seleccione Networking y haga click en Change Security Groups 2.20. Deje seleccionado el Security Group webserver1-sg y seleccione tambi\u00e9n el grupo **cloudhsm-cluster-<cluster id>-sg 2.21. Haga click en Assign Security Groups 2.22. Tome nota de la direcci\u00f3n IP publica en IPv4 Public IP Entre el IP Address : 3. Haga la configuraci\u00f3n del webserver1 (detalles) Entre el user id o valor aleatorio usado anteriormente: Entre el HSM IP Address : 3.1. Vuelva a pesta\u00f1a o ventana del navegador del AWS Systems Manager 3.2. Haga click en Start session 3.3. Seleccione el webserver1 y haga click en Start session 3.4. Haga click en la terminal y digite: cd <enter> 3.5. Actualize el software del Sistema Operativo y instale las librerias de CloudHSM y nginx sudo yum update -y wget https://s3.amazonaws.com/cloudhsmv2-software/CloudHsmClient/EL7/cloudhsm-client-latest.el7.x86_64.rpm wget https://s3.amazonaws.com/cloudhsmv2-software/CloudHsmClient/EL7/cloudhsm-client-dyn-latest.el7.x86_64.rpm sudo yum install ./cloudhsm-client-latest.el7.x86_64.rpm -y sudo yum install -y ./cloudhsm-client-dyn-latest.el7.x86_64.rpm sudo amazon-linux-extras install nginx1.12 -y 3.6. Configure el cliente del CloudHSM con los comandos: sudo aws s3 cp s3://crypto- <su_user_id> /customerCA.crt /opt/cloudhsm/etc/customerCA.crt sudo /opt/cloudhsm/bin/configure -a <su_user_id> sudo systemctl start cloudhsm-client 3.7. Cree una carpeta y copie los archivos de certificados y llaves necesarios desde el bucket S3 con los comandos: sudo mkdir -p /etc/pki/nginx/private sudo aws s3 cp s3://crypto- <su_user_id> /fake_pem.key /etc/pki/nginx/private/server.key sudo aws s3 cp s3://crypto- <su_user_id> /webserver.crt /etc/pki/nginx/server.crt 3.8. Cambie la configuraci\u00f3n de permisos del archivo de llaves fake: sudo chown nginx /etc/pki/nginx/server.crt /etc/pki/nginx/private/server.key 3.9. Cambie el archivo de configuraci\u00f3n del nginx para usar el engine de CloudHSM sudo sed -i '5issl_engine cloudhsm;' /etc/nginx/nginx.conf 3.10. Remueva los comantarios de la secci\u00f3n del servicio HTTPS del nginx: sudo nano /etc/nginx/nginx.conf Baje hasta la linea siguiente a # Settings for a TLS enabled server. y usando Ctrl+d para quitar los caracteres \"#\". Para grabar use Ctrl+s y para salir Ctrl+x 3.11. Cambie los archivos de configuraci\u00f3n del nginx con los comandos: sudo sed -i '11iEnvironmentFile=/etc/sysconfig/nginx' /lib/systemd/system/nginx.service echo 'n3fips_password=webserver1:defaultPassword' | sudo tee -a /etc/sysconfig/nginx 3.12. Inicie el servicio nginx sudo systemctl start nginx 3.13. Pruebe si el servicio funciona correctamente en https:// <instance Public IP> 3.14. Accepte el certificado digital auto-firmado haciendo click en Advanced... y Accept the Risk and Continue","title":"Website"},{"location":"website/#creando-un-website-cifrado-con-tls-usando-llaves-del-cloudhsm","text":"","title":"Creando un Website cifrado con TLS usando llaves del CloudHSM"},{"location":"website/#1-cree-un-usuario-para-el-servidor-web-y-comparta-llave-privada","text":"(detalles) 1.1. Abra en una nueva pesta\u00f1a o ventana del navegador del AWS CloudWatch en la terminal de la instancia 1.2. Seleccione el Logs en el menu lateral 1.3. Haga click en el \"Log Group\" con el nombre /aws/cloudhsm/cluster-<cluster_id> y despu\u00e9s en Search Log Group 1.4. Filtre los logs por el evento de generaci\u00f3n de par de llaves CN_GENERATE_KEY_PAIR 1.5. Haga click en la flecha para expandir los logs Entre el Key Handle de la llave privada generada con openssl: 1.6. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 1.7. Entre en el agente de administraci\u00f3n del cluster con el comando: ./cloudhsm_mgmt_util.sh 1.8. Login loginHSM CO admin defaultPassword 1.9. Cree un nuevo usuario para el servidor web createUser CU webserver1 defaultPassword 1.10. Tome nota del numero de usuario para compartirle la llave en un paso posterior listUsers Entre el User ID del usuario webserver1 : 1.11. Haga logout del CloudHSM como usuario Crypto Officer admin: logoutHSM 1.12. Haga login al CloudHSM como el usuario user1 que es administrador de la llave que sera compartida: loginHSM CU user1 defaultPassword 1.13. Comparta la llave privada con el usuario webserver1 con el comando: shareKey <public key handle> <webserver1 user id> 1 1.14. Ahora intentemos exportar la llave como el usuario webserver1. Para eso generaremos una llava para wrapping con el comando: /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s webserver1 -p defaultPassword genSymKey -t 31 -s 32 -l wrappingKey Entre el Key Handle de la llave generada: 1.15. Y intente exportar la llave con el comando: /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s webserver1 -p defaultPassword exportPrivateKey -k <openssl priv key handle> -w <wrapping key handle> -out webserver_priv.key El CloudHSM no permitir\u00e1 exportar essa llave pues el usuario webserver1 no es administrador de la llave, apenas la tiene compartida para operaciones de cifrado con ella.","title":"1. Cree un usuario para el servidor web y comparta llave privada"},{"location":"website/#2-cree-un-servidor-web-usando-la-llave-en-el-cloudhsm","text":"(detalles) 2.1. Vuelva a pesta\u00f1a o ventana del navegador del AWS EC2 2.2. Haga click en Launch Instance 2.3. Seleccione la AMI Amazon Linux 2 AMI haciendo click en Select en la linea que corresponde 2.4. Deje seleccionado el tipo de instancia t2.micro y haga click en Next: Configure Instance Details 2.5. En la opci\u00f3n Network elija la VPC con nombre cloudhsm-vpc 2.6. En la opci\u00f3n Subnet elija la Subnet con nombre public-subnet-us-east-1a 2.7. En IAM role seleccione el perfil EC2-SSM+S3Crypto y haga click en Next: Add Storage 2.8. Haga click en Next: Add Tags 2.9. Haga click en Add Tag , en el campo \"Key\" llene con Name y en el campo \"Value\" llene con webserver1 2.10. Haga click en Next: Configure Security Group 2.11. Deje Create a new security group seleccionado y en \"Security group name\" llene con webserver1-sg 2.12. Borre la linea de configuraci\u00f3n de acceso SSH haciendo click en el icono X 2.13. Haga click en Add Rule , en el campo \"Type\" seleccione HTTPS y deje los otros campos con el valor por defecto 2.14. Haga click en Review and Launch y despu\u00e9s en Launch 2.15. Remplaze la opci\u00f3n \"Choose an existing key pair\" por Proceed without a key pair 2.16. Seleccione I acknowledge that I will not (...) y haga click en Launch Instance 2.17. Haga click en View Instances 2.18. Seleccione la instancia con nombre webserver1 2.19. Haga click en Actions , seleccione Networking y haga click en Change Security Groups 2.20. Deje seleccionado el Security Group webserver1-sg y seleccione tambi\u00e9n el grupo **cloudhsm-cluster-<cluster id>-sg 2.21. Haga click en Assign Security Groups 2.22. Tome nota de la direcci\u00f3n IP publica en IPv4 Public IP Entre el IP Address :","title":"2. Cree un servidor web usando la llave en el CloudHSM"},{"location":"website/#3-haga-la-configuracion-del-webserver1","text":"(detalles) Entre el user id o valor aleatorio usado anteriormente: Entre el HSM IP Address : 3.1. Vuelva a pesta\u00f1a o ventana del navegador del AWS Systems Manager 3.2. Haga click en Start session 3.3. Seleccione el webserver1 y haga click en Start session 3.4. Haga click en la terminal y digite: cd <enter> 3.5. Actualize el software del Sistema Operativo y instale las librerias de CloudHSM y nginx sudo yum update -y wget https://s3.amazonaws.com/cloudhsmv2-software/CloudHsmClient/EL7/cloudhsm-client-latest.el7.x86_64.rpm wget https://s3.amazonaws.com/cloudhsmv2-software/CloudHsmClient/EL7/cloudhsm-client-dyn-latest.el7.x86_64.rpm sudo yum install ./cloudhsm-client-latest.el7.x86_64.rpm -y sudo yum install -y ./cloudhsm-client-dyn-latest.el7.x86_64.rpm sudo amazon-linux-extras install nginx1.12 -y 3.6. Configure el cliente del CloudHSM con los comandos: sudo aws s3 cp s3://crypto- <su_user_id> /customerCA.crt /opt/cloudhsm/etc/customerCA.crt sudo /opt/cloudhsm/bin/configure -a <su_user_id> sudo systemctl start cloudhsm-client 3.7. Cree una carpeta y copie los archivos de certificados y llaves necesarios desde el bucket S3 con los comandos: sudo mkdir -p /etc/pki/nginx/private sudo aws s3 cp s3://crypto- <su_user_id> /fake_pem.key /etc/pki/nginx/private/server.key sudo aws s3 cp s3://crypto- <su_user_id> /webserver.crt /etc/pki/nginx/server.crt 3.8. Cambie la configuraci\u00f3n de permisos del archivo de llaves fake: sudo chown nginx /etc/pki/nginx/server.crt /etc/pki/nginx/private/server.key 3.9. Cambie el archivo de configuraci\u00f3n del nginx para usar el engine de CloudHSM sudo sed -i '5issl_engine cloudhsm;' /etc/nginx/nginx.conf 3.10. Remueva los comantarios de la secci\u00f3n del servicio HTTPS del nginx: sudo nano /etc/nginx/nginx.conf Baje hasta la linea siguiente a # Settings for a TLS enabled server. y usando Ctrl+d para quitar los caracteres \"#\". Para grabar use Ctrl+s y para salir Ctrl+x 3.11. Cambie los archivos de configuraci\u00f3n del nginx con los comandos: sudo sed -i '11iEnvironmentFile=/etc/sysconfig/nginx' /lib/systemd/system/nginx.service echo 'n3fips_password=webserver1:defaultPassword' | sudo tee -a /etc/sysconfig/nginx 3.12. Inicie el servicio nginx sudo systemctl start nginx 3.13. Pruebe si el servicio funciona correctamente en https:// <instance Public IP> 3.14. Accepte el certificado digital auto-firmado haciendo click en Advanced... y Accept the Risk and Continue","title":"3. Haga la configuraci\u00f3n del webserver1"}]}