{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Analisando e bloqueando vunerabilidades em aplica\u00e7\u00f5es web com o AWS WAF 1. Colete os dados da cria\u00e7\u00e3o do CloudFormation (detalhes) 1.1. Abra no seu navegador uma pagina do AWS CloudFormation no seu console da AWS 1.2. Clique em outputs na aba do CloudFormation 1.3. copie o campo \"value\" da instancia SecLabServer e cole aqui: 1.4. copie o campo \"value\" da instancia SecLabClient e cole aqui: 2. Criando o Elastic Load para sua aplica\u00e7\u00e3o (detalhes) 2.1. V\u00e1 at\u00e9 a pagina do AWS EC2 no console da AWS 2.2. Clique em LoadBalancer 2.3. Selecione Create em aplication Load Balancer 2.4. Coloque o nome que voc\u00ea quer que o Load Balancer tenha, por motivos didaticos vamos chama-lo de SafeSiteALB 2.5. em Listeners mantenha o HTTP, mas vamos subtituir a porta 80 por pela porta 8000, porta usada pela nossa aplica\u00e7\u00e3o 2.6. Na area Availability Zones , selecione as duas subnets disponiveis. Depois clique em Configure Security Groups 2.7. Selecione um security group existente, clique no com nome de SecLabSG , este foi criado pelo nosso CloudFormation e \u00e9 onde est\u00e1 nossas instancias 2.8. Clique em Next: Configure Routing 2.9. Nos Target Groups, selecione New target group 2.10. Vamos nomea-lo como, safeSiteTG 2.11. Manteremos o Target Type como instance , materemos igual o protocolo como HTTP. Altere a porta de 80 para 8000 2.12. Vamos registrar as nossas instancias, selecione a instencia SecLabServer e em seguida clique me Add to Registered 2.13. Clique em next: Review 2.14. Verifique se todos os dados est\u00e3o corretos, feito isso clique em Create 2.15. Enquanto voc\u00ea aguarda a cria\u00e7\u00e3o do seu ALB, copie o campo DNS name do ALB que acabamos de criar e cole aqui, usaremos mais tarde: 3. Conecte a instancia com windows server e acesse o SafeSite (detalhes) 3.1. V\u00e1 at\u00e9 a pagina do AWS EC2 no console da AWS 3.2. Clique em Runniong Instances 3.3. Selecione a instancia SecLabClient 3.4. Na aba superior, clique no bot\u00e3o connect 3.5. Clique em Download Remote desktop File 3.6. Ap\u00f3s o download, clique no arquivo que agora est\u00e1 salvo no seu computador 3.7. Ser\u00e1 pedido a senha da instancia com Windows, esta \u00e9: mBp4t;Jvg6!dskzt3DCHa@w7H?l5.?VE 3.8. Aguarde a conex\u00e3o e o carregamento da interface gr\u00e1fica 3.9. Abra o navegador Firefox 3.10. Cole no navegador o <su_user_id> :8000 4. Explorando as vunerabilidades do Site (detalhes) 4.1. SQL Injection (detalhes) 4.1.1. Agora com voc\u00ea conectado ao nosso SafeSite, vamos come\u00e7ar a ver as possibilidades de explora\u00e7\u00e3o 4.1.2. Vamos come\u00e7ar pela p\u00e1gina inicial, veremos SQL injection 4.1.3. No campo de Buscar posts digite algo que voc\u00ea deseja que seja procurado, a ideia \u00e9 ver que a pesquisa est\u00e1 funcionando, por exemplo digite fox 4.1.4. Agora vamos tentar fazer um sql injection, coloque na barra de pesquisa o seqguinte comando \"or 1=1 -- , e veja o que acontece 4.1.5. perceba que agora com o comando SQl Injection, o resultado se transforma em tudo que existe no banco de dados 4.2. Cross-site scripting (detalhes) 4.2.1. Vamos para o proximo ataque que pode ser feito, vamos mudar para a pagina de contato 4.2.2. Aqui j\u00e1 sabemos que essa sess\u00e3o do site aceita Cross-site scripiting, ent\u00e3o vamos na sess\u00e3o Livro de recados 4.2.3. No quadro de Seu recado escreva um script em JavaScript para o cross-site scripting 4.2.4. Por efeito de demo, vamos deixar um exemplo simples: <script>window.alert(\"Cross-site scripting funciona\")</script> 4.2.5. Agora clique em enviar, o site vai pedir para que voc\u00ea fa\u00e7a login. Como usu\u00e1rio use guest , e como senha use guest 4.2.6. Volte para a pagina de contato e refa\u00e7a os passos a cima 4.2.7. Voc\u00ea vai ver que na area de mensagens, o seu cross-site scripting foi como comentario para a p\u00e1gina, com sucesso 5. Conectando nossa solu\u00e7\u00e3o do AWS WAF para mitigar os ataques (detalhes) 5.1. Vamos voltar para o console da AWS, vamos para o AWS WAF 5.2. Selecione a regi\u00e3o de S\u00e3o Paulo 5.3. Voc\u00ea ver\u00e1 a area com as suas WebACLs para serem adicionadas ao seu Load Balancer 5.4. Clique em AWSWAFSecurityAutomations , quando a pagina estiver carregada clique em Rules 5.5. Na parte de baixo da pagina, clique em Add Association 5.6. Em Resource Type , selecione Elastic Load Balancer. \u00c9 o que estamos usando no momento para esse lab 5.7. Em Resource , selecione o SafeSiteALB . Depois clique em Add 5.8. Pronto, agora as regras do WAF est\u00e3o associadas ao nosso site ! 5.9. Agora volte ao site e refa\u00e7a os ataques, dos passos 4.1 e 4.2 . Com o AWS WAF associado ao nosso balanceador de carga, este ir\u00e1 bloquear os ataques antes de chegar as nossas instancias","title":"Home"},{"location":"#analisando-e-bloqueando-vunerabilidades-em-aplicacoes-web-com-o-aws-waf","text":"","title":"Analisando e bloqueando vunerabilidades em aplica\u00e7\u00f5es web com o AWS WAF"},{"location":"#1-colete-os-dados-da-criacao-do-cloudformation","text":"(detalhes) 1.1. Abra no seu navegador uma pagina do AWS CloudFormation no seu console da AWS 1.2. Clique em outputs na aba do CloudFormation 1.3. copie o campo \"value\" da instancia SecLabServer e cole aqui: 1.4. copie o campo \"value\" da instancia SecLabClient e cole aqui:","title":"1. Colete os dados da cria\u00e7\u00e3o do CloudFormation"},{"location":"#2-criando-o-elastic-load-para-sua-aplicacao","text":"(detalhes) 2.1. V\u00e1 at\u00e9 a pagina do AWS EC2 no console da AWS 2.2. Clique em LoadBalancer 2.3. Selecione Create em aplication Load Balancer 2.4. Coloque o nome que voc\u00ea quer que o Load Balancer tenha, por motivos didaticos vamos chama-lo de SafeSiteALB 2.5. em Listeners mantenha o HTTP, mas vamos subtituir a porta 80 por pela porta 8000, porta usada pela nossa aplica\u00e7\u00e3o 2.6. Na area Availability Zones , selecione as duas subnets disponiveis. Depois clique em Configure Security Groups 2.7. Selecione um security group existente, clique no com nome de SecLabSG , este foi criado pelo nosso CloudFormation e \u00e9 onde est\u00e1 nossas instancias 2.8. Clique em Next: Configure Routing 2.9. Nos Target Groups, selecione New target group 2.10. Vamos nomea-lo como, safeSiteTG 2.11. Manteremos o Target Type como instance , materemos igual o protocolo como HTTP. Altere a porta de 80 para 8000 2.12. Vamos registrar as nossas instancias, selecione a instencia SecLabServer e em seguida clique me Add to Registered 2.13. Clique em next: Review 2.14. Verifique se todos os dados est\u00e3o corretos, feito isso clique em Create 2.15. Enquanto voc\u00ea aguarda a cria\u00e7\u00e3o do seu ALB, copie o campo DNS name do ALB que acabamos de criar e cole aqui, usaremos mais tarde:","title":"2. Criando o Elastic Load para sua aplica\u00e7\u00e3o"},{"location":"#3-conecte-a-instancia-com-windows-server-e-acesse-o-safesite","text":"(detalhes) 3.1. V\u00e1 at\u00e9 a pagina do AWS EC2 no console da AWS 3.2. Clique em Runniong Instances 3.3. Selecione a instancia SecLabClient 3.4. Na aba superior, clique no bot\u00e3o connect 3.5. Clique em Download Remote desktop File 3.6. Ap\u00f3s o download, clique no arquivo que agora est\u00e1 salvo no seu computador 3.7. Ser\u00e1 pedido a senha da instancia com Windows, esta \u00e9: mBp4t;Jvg6!dskzt3DCHa@w7H?l5.?VE 3.8. Aguarde a conex\u00e3o e o carregamento da interface gr\u00e1fica 3.9. Abra o navegador Firefox 3.10. Cole no navegador o <su_user_id> :8000","title":"3. Conecte a instancia com windows server e acesse o SafeSite"},{"location":"#4-explorando-as-vunerabilidades-do-site","text":"(detalhes)","title":"4. Explorando as vunerabilidades do Site"},{"location":"#41-sql-injection","text":"(detalhes) 4.1.1. Agora com voc\u00ea conectado ao nosso SafeSite, vamos come\u00e7ar a ver as possibilidades de explora\u00e7\u00e3o 4.1.2. Vamos come\u00e7ar pela p\u00e1gina inicial, veremos SQL injection 4.1.3. No campo de Buscar posts digite algo que voc\u00ea deseja que seja procurado, a ideia \u00e9 ver que a pesquisa est\u00e1 funcionando, por exemplo digite fox 4.1.4. Agora vamos tentar fazer um sql injection, coloque na barra de pesquisa o seqguinte comando \"or 1=1 -- , e veja o que acontece 4.1.5. perceba que agora com o comando SQl Injection, o resultado se transforma em tudo que existe no banco de dados","title":"4.1. SQL Injection"},{"location":"#42-cross-site-scripting","text":"(detalhes) 4.2.1. Vamos para o proximo ataque que pode ser feito, vamos mudar para a pagina de contato 4.2.2. Aqui j\u00e1 sabemos que essa sess\u00e3o do site aceita Cross-site scripiting, ent\u00e3o vamos na sess\u00e3o Livro de recados 4.2.3. No quadro de Seu recado escreva um script em JavaScript para o cross-site scripting 4.2.4. Por efeito de demo, vamos deixar um exemplo simples: <script>window.alert(\"Cross-site scripting funciona\")</script> 4.2.5. Agora clique em enviar, o site vai pedir para que voc\u00ea fa\u00e7a login. Como usu\u00e1rio use guest , e como senha use guest 4.2.6. Volte para a pagina de contato e refa\u00e7a os passos a cima 4.2.7. Voc\u00ea vai ver que na area de mensagens, o seu cross-site scripting foi como comentario para a p\u00e1gina, com sucesso","title":"4.2. Cross-site scripting"},{"location":"#5-conectando-nossa-solucao-do-aws-waf-para-mitigar-os-ataques","text":"(detalhes) 5.1. Vamos voltar para o console da AWS, vamos para o AWS WAF 5.2. Selecione a regi\u00e3o de S\u00e3o Paulo 5.3. Voc\u00ea ver\u00e1 a area com as suas WebACLs para serem adicionadas ao seu Load Balancer 5.4. Clique em AWSWAFSecurityAutomations , quando a pagina estiver carregada clique em Rules 5.5. Na parte de baixo da pagina, clique em Add Association 5.6. Em Resource Type , selecione Elastic Load Balancer. \u00c9 o que estamos usando no momento para esse lab 5.7. Em Resource , selecione o SafeSiteALB . Depois clique em Add 5.8. Pronto, agora as regras do WAF est\u00e3o associadas ao nosso site ! 5.9. Agora volte ao site e refa\u00e7a os ataques, dos passos 4.1 e 4.2 . Com o AWS WAF associado ao nosso balanceador de carga, este ir\u00e1 bloquear os ataques antes de chegar as nossas instancias","title":"5. Conectando nossa solu\u00e7\u00e3o do AWS WAF para mitigar os ataques"}]}