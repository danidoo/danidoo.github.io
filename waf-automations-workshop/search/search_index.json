{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Analisando e bloqueando vunerabilidades em aplica\u00e7\u00f5es web com o AWS WAF 1. Verifique os recursos criados pelo Stack de CloudFormation (detalhes) 1.1. Abra a servi\u00e7o AWS EC2 na console da AWS 1.2. Clique em Running Instances 1.3. Verifique que h\u00e1 2 servidores criados, um com nome SecLabServer e outro SecLabClient e que ambos est\u00e3o no estado running 2. Criando um Application Load Balancer para sua aplica\u00e7\u00e3o (detalhes) 2.1. Selecione LoadBalancer no menu lateral 2.2. Clique em Create Load Balancer 2.3. Na caixa \"Application Load Balancer\" clique em Create 2.4. No campo Name preencha com o nome do balanceador de carga, por exemplo SafeSiteALB 2.5. Na se\u00e7\u00e3o Availability Zones , em VPC selecione o que tem a marca\u00e7\u00e3o (default) no final e selecione ao menos duas das subnets disponiveis 2.6. Clique em Next: Configure Security Settings 2.7. Pode ignorar a mensagem \"Improve your load balancer's security. Your load balancer is not using any secure listener.\", clicando em Next: Configure Security Groups 2.8. Escolha um security group existente, selecionando o que tem SecLabSG criado pelo CloudFormation, e de-selecione o \"default\" 2.9. Clique em Next: Configure Routing 2.10. Em \"Target Groups\", deixe selecionado New target group 2.11. Vamos nome\u00e1-lo como safeSiteTG 2.12. Mantenha as outras configura\u00e7\u00f5es como est\u00e3o, apenas altere a porta de 80 para 8000 2.13. Clique em Next: Register Targets 2.14. Registre a instancia da aplica\u00e7\u00e3o selecionando a linha do SecLabServer e clicando em Add to registered 2.15. Clique em Next: Review 2.16. Verifique se todos os dados est\u00e3o corretos, feito isso clique em Create e depois em Close 2.17. Enquanto voc\u00ea aguarda a cria\u00e7\u00e3o do seu ALB, copie o campo DNS name do ALB que acabamos de criar e cole abaixo para usar mais tarde 3. Conecte \u00e0 instancia Windows Server e acesse o SafeSite (detalhes) 3.1. V\u00e1 at\u00e9 a pagina do AWS EC2 na console da AWS 3.2. Clique em Running Instances 3.3. Selecione a instancia SecLabClient 3.4. Na aba superior, clique no bot\u00e3o Connect 3.5. Clique em Download Remote Desktop File 3.6. Ap\u00f3s o download, clique no arquivo que agora est\u00e1 salvo no seu computador 3.7. Ser\u00e1 pedido a senha da instancia com Windows, esta \u00e9: mBp4t;Jvg6!dskzt3DCHa@w7H?l5.?VE 3.8. Aguarde a conex\u00e3o e o carregamento da interface gr\u00e1fica 3.9. Na janela \"Shutdown Event Tracker\" clique em Cancel 3.10. Abra o navegador Firefox atrav\u00e9s do icone na \u00c1rea de Trabalho 3.11. Cole no navegador a URL abaixo http:// <safesite/> 4. Explorando as vunerabilidades do Site (detalhes) 4.1. SQL Injection (detalhes) 4.1.1. Agora com voc\u00ea conectado ao nosso SafeSite, vamos come\u00e7ar a ver as possibilidades de explora\u00e7\u00e3o 4.1.2. Vamos come\u00e7ar pela p\u00e1gina inicial com um ataque de SQL Injection 4.1.3. No campo de Buscar posts digite algo que voc\u00ea deseja que seja procurado, a ideia \u00e9 ver que a pesquisa est\u00e1 funcionando, por exemplo digite fox 4.1.4. Vamos tentar fazer um ataque de SQL Injection, na ferramenta de busca no site, fa\u00e7a uma busca usando o seguinte texto: ''' \" or 1=1 -- ''' 4.1.5. Perceba que o resultado mostra todos os posts que existem na tabela do banco de dados pois foi feito um ataque de SQL Injection 4.1.4. Agora vamos sofisticar o ataque, usando o seguinte comando na busca do site ''' X\" union select login || ': ' || email, password from logins -- ''' 4.1.5. Veja que agora o resultado s\u00e3o os hashes de login de usu\u00e1rios, verifique que os hashes podem ser facilmente quebrados com ferramentas como https://crackstation.net/. 4.2. Cross-site scripting (detalhes) 4.2.1. A p\u00e1gina de Contato do site \u00e9 vulner\u00e1vel ao ataque de Cross-Site Scripting, mas primeiro temos que fazer login no site 4.2.2. Clique em \u00c1rea Restrita e fa\u00e7a login como guest e senha guest 4.2.3. Uma vez autenticado, clique no link Contato 4.2.4. Na se\u00e7\u00e3o Livro de Recados , no campo Seu recado preencha com conte\u00fado em JavaScript para executar um ataque de cross-site scripting (XSS), como por exemplo: <script>window.alert(\"Cross-site scripting funciona\")</script> 4.2.5. Clique em Escrever e quando a p\u00e1gina for recarregada voc\u00ea dever\u00e1 receber um alerta do navegador com a mensagem contida no script que foi enviado 5. Conectando nossa solu\u00e7\u00e3o com o AWS WAF para mitigar os ataques (detalhes) 5.1. Voltando \u00e0 console da AWS, abra o servi\u00e7o AWS WAF 5.2. Clique em Go to AWS WAF e depois em Web ACLs no menu lateral 5.3. Verifique que o parametro Filter est\u00e1 selecionado com US East (N. Virginia) 5.4. Nesta p\u00e1gina voc\u00ea ver\u00e1 as WebACLs dispon\u00edveis para prote\u00e7\u00e3o de seus Load Balancers 5.5. Clique em AWSWAFSecurityAutomations , e ap\u00f3s o carregamento da p\u00e1gina clique na aba Rules 5.6. Na parte de baixo da pagina, clique em Add Association 5.7. Em Resource Type , selecione Application Load Balancer 5.8. Em Resource , selecione o SafeSiteALB e clique em Add 5.9. A partir de agora as regras do AWS WAF est\u00e3o associadas ao balanceador de carga e ir\u00e3o bloquear determinadas chamadas de acordo com as regras configuradas 5.10. Agora volte ao site e refa\u00e7a os ataques dos passos 4.1 e 4.2 . Com o AWS WAF associado ao nosso balanceador de carga, os ataques ser\u00e3o bloqueados antes de chegar aos recursos configurados no \"Target Group\" (neste caso \u00e0s instancias EC2) 6. Verificando o funcionamento da regra Bad Bot do AWS WAF Security Automations (detalhes) 6.1. Volte novamente \u00e0 console do servi\u00e7o AWS WAF 6.2. Clique na regra AWSWAFSecurityAutomations - Bad Bot Rule 6.3. Verifique que a lista de endere\u00e7os associada a esta regra est\u00e1 vazia quando houver o seguinte texto na configura\u00e7\u00e3o: \"No IP addresses are in this IP match condition.\" 6.4. Volte novamente \u00e0 console do servi\u00e7o AWS WAF 6.5. Abra em outra janela ou aba do navegador o servi\u00e7o AWS CloudFormation 6.6. Clique no Stack AWSWAFSecurityAutomations e depois selecione a aba Outputs 6.7. Copie o link para o BadBotHoneypotEndpoint (uma URL similar a https://xxxxxxxxxx.execute-api.us-east-1.amazonaws.com/ProdStage) 6.8. Voltando ao Remote Desktop no Windows Client, acesse no navegador a URL copiada anteriormente 6.9. Retorne \u00e0 console AWS na janela ou aba com as configura\u00e7\u00f5es de regras do WAF e recarregue a p\u00e1gina 6.10. Agora na lista de endere\u00e7os IP deve haver um endere\u00e7o IP associado \u00e0 instancia Windows Client 6.11. Se esta regra fosse utilizada para um site publicado externamente, o cliente que acessar a URL seria bloqueado pelo WAF","title":"Home"},{"location":"#analisando-e-bloqueando-vunerabilidades-em-aplicacoes-web-com-o-aws-waf","text":"","title":"Analisando e bloqueando vunerabilidades em aplica\u00e7\u00f5es web com o AWS WAF"},{"location":"#1-verifique-os-recursos-criados-pelo-stack-de-cloudformation","text":"(detalhes) 1.1. Abra a servi\u00e7o AWS EC2 na console da AWS 1.2. Clique em Running Instances 1.3. Verifique que h\u00e1 2 servidores criados, um com nome SecLabServer e outro SecLabClient e que ambos est\u00e3o no estado running","title":"1. Verifique os recursos criados pelo Stack de CloudFormation"},{"location":"#2-criando-um-application-load-balancer-para-sua-aplicacao","text":"(detalhes) 2.1. Selecione LoadBalancer no menu lateral 2.2. Clique em Create Load Balancer 2.3. Na caixa \"Application Load Balancer\" clique em Create 2.4. No campo Name preencha com o nome do balanceador de carga, por exemplo SafeSiteALB 2.5. Na se\u00e7\u00e3o Availability Zones , em VPC selecione o que tem a marca\u00e7\u00e3o (default) no final e selecione ao menos duas das subnets disponiveis 2.6. Clique em Next: Configure Security Settings 2.7. Pode ignorar a mensagem \"Improve your load balancer's security. Your load balancer is not using any secure listener.\", clicando em Next: Configure Security Groups 2.8. Escolha um security group existente, selecionando o que tem SecLabSG criado pelo CloudFormation, e de-selecione o \"default\" 2.9. Clique em Next: Configure Routing 2.10. Em \"Target Groups\", deixe selecionado New target group 2.11. Vamos nome\u00e1-lo como safeSiteTG 2.12. Mantenha as outras configura\u00e7\u00f5es como est\u00e3o, apenas altere a porta de 80 para 8000 2.13. Clique em Next: Register Targets 2.14. Registre a instancia da aplica\u00e7\u00e3o selecionando a linha do SecLabServer e clicando em Add to registered 2.15. Clique em Next: Review 2.16. Verifique se todos os dados est\u00e3o corretos, feito isso clique em Create e depois em Close 2.17. Enquanto voc\u00ea aguarda a cria\u00e7\u00e3o do seu ALB, copie o campo DNS name do ALB que acabamos de criar e cole abaixo para usar mais tarde","title":"2. Criando um Application Load Balancer para sua aplica\u00e7\u00e3o"},{"location":"#3-conecte-a-instancia-windows-server-e-acesse-o-safesite","text":"(detalhes) 3.1. V\u00e1 at\u00e9 a pagina do AWS EC2 na console da AWS 3.2. Clique em Running Instances 3.3. Selecione a instancia SecLabClient 3.4. Na aba superior, clique no bot\u00e3o Connect 3.5. Clique em Download Remote Desktop File 3.6. Ap\u00f3s o download, clique no arquivo que agora est\u00e1 salvo no seu computador 3.7. Ser\u00e1 pedido a senha da instancia com Windows, esta \u00e9: mBp4t;Jvg6!dskzt3DCHa@w7H?l5.?VE 3.8. Aguarde a conex\u00e3o e o carregamento da interface gr\u00e1fica 3.9. Na janela \"Shutdown Event Tracker\" clique em Cancel 3.10. Abra o navegador Firefox atrav\u00e9s do icone na \u00c1rea de Trabalho 3.11. Cole no navegador a URL abaixo http:// <safesite/>","title":"3. Conecte \u00e0 instancia Windows Server e acesse o SafeSite"},{"location":"#4-explorando-as-vunerabilidades-do-site","text":"(detalhes)","title":"4. Explorando as vunerabilidades do Site"},{"location":"#41-sql-injection","text":"(detalhes) 4.1.1. Agora com voc\u00ea conectado ao nosso SafeSite, vamos come\u00e7ar a ver as possibilidades de explora\u00e7\u00e3o 4.1.2. Vamos come\u00e7ar pela p\u00e1gina inicial com um ataque de SQL Injection 4.1.3. No campo de Buscar posts digite algo que voc\u00ea deseja que seja procurado, a ideia \u00e9 ver que a pesquisa est\u00e1 funcionando, por exemplo digite fox 4.1.4. Vamos tentar fazer um ataque de SQL Injection, na ferramenta de busca no site, fa\u00e7a uma busca usando o seguinte texto: ''' \" or 1=1 -- ''' 4.1.5. Perceba que o resultado mostra todos os posts que existem na tabela do banco de dados pois foi feito um ataque de SQL Injection 4.1.4. Agora vamos sofisticar o ataque, usando o seguinte comando na busca do site ''' X\" union select login || ': ' || email, password from logins -- ''' 4.1.5. Veja que agora o resultado s\u00e3o os hashes de login de usu\u00e1rios, verifique que os hashes podem ser facilmente quebrados com ferramentas como https://crackstation.net/.","title":"4.1. SQL Injection"},{"location":"#42-cross-site-scripting","text":"(detalhes) 4.2.1. A p\u00e1gina de Contato do site \u00e9 vulner\u00e1vel ao ataque de Cross-Site Scripting, mas primeiro temos que fazer login no site 4.2.2. Clique em \u00c1rea Restrita e fa\u00e7a login como guest e senha guest 4.2.3. Uma vez autenticado, clique no link Contato 4.2.4. Na se\u00e7\u00e3o Livro de Recados , no campo Seu recado preencha com conte\u00fado em JavaScript para executar um ataque de cross-site scripting (XSS), como por exemplo: <script>window.alert(\"Cross-site scripting funciona\")</script> 4.2.5. Clique em Escrever e quando a p\u00e1gina for recarregada voc\u00ea dever\u00e1 receber um alerta do navegador com a mensagem contida no script que foi enviado","title":"4.2. Cross-site scripting"},{"location":"#5-conectando-nossa-solucao-com-o-aws-waf-para-mitigar-os-ataques","text":"(detalhes) 5.1. Voltando \u00e0 console da AWS, abra o servi\u00e7o AWS WAF 5.2. Clique em Go to AWS WAF e depois em Web ACLs no menu lateral 5.3. Verifique que o parametro Filter est\u00e1 selecionado com US East (N. Virginia) 5.4. Nesta p\u00e1gina voc\u00ea ver\u00e1 as WebACLs dispon\u00edveis para prote\u00e7\u00e3o de seus Load Balancers 5.5. Clique em AWSWAFSecurityAutomations , e ap\u00f3s o carregamento da p\u00e1gina clique na aba Rules 5.6. Na parte de baixo da pagina, clique em Add Association 5.7. Em Resource Type , selecione Application Load Balancer 5.8. Em Resource , selecione o SafeSiteALB e clique em Add 5.9. A partir de agora as regras do AWS WAF est\u00e3o associadas ao balanceador de carga e ir\u00e3o bloquear determinadas chamadas de acordo com as regras configuradas 5.10. Agora volte ao site e refa\u00e7a os ataques dos passos 4.1 e 4.2 . Com o AWS WAF associado ao nosso balanceador de carga, os ataques ser\u00e3o bloqueados antes de chegar aos recursos configurados no \"Target Group\" (neste caso \u00e0s instancias EC2)","title":"5. Conectando nossa solu\u00e7\u00e3o com o AWS WAF para mitigar os ataques"},{"location":"#6-verificando-o-funcionamento-da-regra-bad-bot-do-aws-waf-security-automations","text":"(detalhes) 6.1. Volte novamente \u00e0 console do servi\u00e7o AWS WAF 6.2. Clique na regra AWSWAFSecurityAutomations - Bad Bot Rule 6.3. Verifique que a lista de endere\u00e7os associada a esta regra est\u00e1 vazia quando houver o seguinte texto na configura\u00e7\u00e3o: \"No IP addresses are in this IP match condition.\" 6.4. Volte novamente \u00e0 console do servi\u00e7o AWS WAF 6.5. Abra em outra janela ou aba do navegador o servi\u00e7o AWS CloudFormation 6.6. Clique no Stack AWSWAFSecurityAutomations e depois selecione a aba Outputs 6.7. Copie o link para o BadBotHoneypotEndpoint (uma URL similar a https://xxxxxxxxxx.execute-api.us-east-1.amazonaws.com/ProdStage) 6.8. Voltando ao Remote Desktop no Windows Client, acesse no navegador a URL copiada anteriormente 6.9. Retorne \u00e0 console AWS na janela ou aba com as configura\u00e7\u00f5es de regras do WAF e recarregue a p\u00e1gina 6.10. Agora na lista de endere\u00e7os IP deve haver um endere\u00e7o IP associado \u00e0 instancia Windows Client 6.11. Se esta regra fosse utilizada para um site publicado externamente, o cliente que acessar a URL seria bloqueado pelo WAF","title":"6. Verificando o funcionamento da regra Bad Bot do AWS WAF Security Automations"}]}