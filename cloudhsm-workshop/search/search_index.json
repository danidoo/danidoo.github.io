{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Lab Steps 1. Initializaci\u00f3n del cluster de CloudHSM 2. Gesti\u00f3n de llaves simetricas y asimetricas 3. Creaci\u00f3n de un website usando llaves RSA del CloudHSM 4. Usando el AWS Certificate Manager para gestionar llaves y certificados en el ELB 5. Encripci\u00f3n usando el servico AWS Key Management Service","title":"Inicio"},{"location":"#lab-steps","text":"1. Initializaci\u00f3n del cluster de CloudHSM 2. Gesti\u00f3n de llaves simetricas y asimetricas 3. Creaci\u00f3n de un website usando llaves RSA del CloudHSM 4. Usando el AWS Certificate Manager para gestionar llaves y certificados en el ELB 5. Encripci\u00f3n usando el servico AWS Key Management Service","title":"Lab Steps"},{"location":"acm/","text":"Creando un Website cifrado con TLS usando llaves del CloudHSM 1. Cree un usuario para el servidor web y comparta llave privada (detalles) 1.1. Abra en una nueva pesta\u00f1a o ventana del navegador del AWS CloudWatch en la terminal de la instancia 1.2. Seleccione el Logs en el menu lateral 1.3. Haga click en el \"Log Group\" con el nombre /aws/cloudhsm/cluster-<cluster_id> y despu\u00e9s en Search Log Group 1.4. Filtre los logs por el evento de generaci\u00f3n de par de llaves CN_GENERATE_KEY_PAIR 1.5. Haga click en la flecha para expandir los logs Entre el Key Handle de la llave privada generada con openssl: Entre el Key Handle de la llave de wrapping generada en el CloudHSM: 1.6. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 1.7. Entre en el agente de administraci\u00f3n del cluster con el comando: ./cloudhsm_mgmt_util.sh 1.8. Haga login en el CloudHSM loginHSM -u CU -s user1 -p defaultPassword 1.9. Exporte la llave publica generado con el openssl: exportPrivateKey -k <openssl priv key handle> -w <wrapping key handle> -out webserver.pem 1.10. Saiga el cliente: exit 1.11. Abra en una nueva pesta\u00f1a o ventana del navegador del AWS Certificate Manager 1.12. Si ves la opci\u00f3n Get started haga click en el que esta debajo de Provision certificates 1.13. Haga click en Import a certificate 1.14. En la ventana de terminal del AWS Systems Manager , ejecute el comando: cat webserver.crt 1.15. Copie la informacion y la pegue en el campo Certificate body 1.16. En la ventana de terminal del AWS Systems Manager , ejecute el comando: cat webserver.pem 1.17. Copie la informacion y la pegue en el campo Certificate private key 1.18. Haga click en Import 1.19. Revise el mensaje y haga click de nuevo en Import 2. Cree un balanceador usando el certificado importado (detalles) 2.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS EC2 2.2. En el menu lateral haga click en Load Balancers 2.3. Haga click en Create Load Balancer 2.4. Haga click en Create debajo de Application Load Balancer 2.5. En Name llene con acm-webserver 2.6. En Listeners , cambie el protocolo de \"HTTP\" a HTTPS 2.7. En VPC seleccione el que tiene nombre cloudhsm-vpc 2.8. Seleccione las AZ us-east-1a y us-east-1b y seleccione las subnets public para cada una. 2.9. Haga click en Next: Configure Security Settings 2.10. Deje seleccionado **Choose a certificate from ACM (recommended) y seleccione el certificado importado anteriormente 2.11. Haga click en Next: Configure Security Groups 2.12. Seleccione Create a new security group 2.13. En Security group name llene con acm-webserver-sg 2.14. En \"Type\" seleccione HTTPS 2.15. Haga click en Next: Configure Routing 2.16. En Name llene con webserver1 2.17. Haga click en Advanced health check settings 2.18. En la opci\u00f3n Healthy threashold cambie el valor para 2 2.19. En la opci\u00f3n Interval cambie el valor para 10 2.20. Haga click en Next: Register Targets 2.21. En la secci\u00f3n Instances seleccione la instancia webserver1 y haga click en Add to registered 2.22. Haga click en Next: Review y despu\u00e9s en Create 2.23. Haga click en Close 2.24. Llene abajo la informaci\u00f3n del nombre DNS el balanceador: Entre el DNS name del balanceador: 3. Agregue HTTP al Security Group el webserver1 (detalles) 3.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS EC2 3.2. En el menu lateral haga click en Security Groups 3.3. Seleccione el webserver1-sg y haga click en la pesta\u00f1a Inbound 3.4. Haga click en Edit y despu\u00e9s en Add Rule 3.5. En la ultima linea que se creo, seleccione el tipo HTTP y en \"Source\" remplaze el \"0.0.0.0/0\" por acm-web y cuando aparecer el id, seleccione el sg-xxxxxxxxxxx 3.6. Haga click en Save 3.7. En el menu lateral haga click en Target Groups 3.8. Seleccione el webserver1 y haga click en la pesta\u00f1a Targets 3.9. Vea si la instancia muestra Status como healthy 3.10. Si todav\u00eda sigue unhealthy espere alguns segundos, haga click en icono de refresh hasta que cambie de estado 3.11. Pruebe si el servicio funciona correctamente en: https:// <ELB DNS name> 3.12. Accepte el certificado digital auto-firmado haciendo click en Advanced... y Accept the Risk and Continue","title":"ACM"},{"location":"acm/#creando-un-website-cifrado-con-tls-usando-llaves-del-cloudhsm","text":"","title":"Creando un Website cifrado con TLS usando llaves del CloudHSM"},{"location":"acm/#1-cree-un-usuario-para-el-servidor-web-y-comparta-llave-privada","text":"(detalles) 1.1. Abra en una nueva pesta\u00f1a o ventana del navegador del AWS CloudWatch en la terminal de la instancia 1.2. Seleccione el Logs en el menu lateral 1.3. Haga click en el \"Log Group\" con el nombre /aws/cloudhsm/cluster-<cluster_id> y despu\u00e9s en Search Log Group 1.4. Filtre los logs por el evento de generaci\u00f3n de par de llaves CN_GENERATE_KEY_PAIR 1.5. Haga click en la flecha para expandir los logs Entre el Key Handle de la llave privada generada con openssl: Entre el Key Handle de la llave de wrapping generada en el CloudHSM: 1.6. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 1.7. Entre en el agente de administraci\u00f3n del cluster con el comando: ./cloudhsm_mgmt_util.sh 1.8. Haga login en el CloudHSM loginHSM -u CU -s user1 -p defaultPassword 1.9. Exporte la llave publica generado con el openssl: exportPrivateKey -k <openssl priv key handle> -w <wrapping key handle> -out webserver.pem 1.10. Saiga el cliente: exit 1.11. Abra en una nueva pesta\u00f1a o ventana del navegador del AWS Certificate Manager 1.12. Si ves la opci\u00f3n Get started haga click en el que esta debajo de Provision certificates 1.13. Haga click en Import a certificate 1.14. En la ventana de terminal del AWS Systems Manager , ejecute el comando: cat webserver.crt 1.15. Copie la informacion y la pegue en el campo Certificate body 1.16. En la ventana de terminal del AWS Systems Manager , ejecute el comando: cat webserver.pem 1.17. Copie la informacion y la pegue en el campo Certificate private key 1.18. Haga click en Import 1.19. Revise el mensaje y haga click de nuevo en Import","title":"1. Cree un usuario para el servidor web y comparta llave privada"},{"location":"acm/#2-cree-un-balanceador-usando-el-certificado-importado","text":"(detalles) 2.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS EC2 2.2. En el menu lateral haga click en Load Balancers 2.3. Haga click en Create Load Balancer 2.4. Haga click en Create debajo de Application Load Balancer 2.5. En Name llene con acm-webserver 2.6. En Listeners , cambie el protocolo de \"HTTP\" a HTTPS 2.7. En VPC seleccione el que tiene nombre cloudhsm-vpc 2.8. Seleccione las AZ us-east-1a y us-east-1b y seleccione las subnets public para cada una. 2.9. Haga click en Next: Configure Security Settings 2.10. Deje seleccionado **Choose a certificate from ACM (recommended) y seleccione el certificado importado anteriormente 2.11. Haga click en Next: Configure Security Groups 2.12. Seleccione Create a new security group 2.13. En Security group name llene con acm-webserver-sg 2.14. En \"Type\" seleccione HTTPS 2.15. Haga click en Next: Configure Routing 2.16. En Name llene con webserver1 2.17. Haga click en Advanced health check settings 2.18. En la opci\u00f3n Healthy threashold cambie el valor para 2 2.19. En la opci\u00f3n Interval cambie el valor para 10 2.20. Haga click en Next: Register Targets 2.21. En la secci\u00f3n Instances seleccione la instancia webserver1 y haga click en Add to registered 2.22. Haga click en Next: Review y despu\u00e9s en Create 2.23. Haga click en Close 2.24. Llene abajo la informaci\u00f3n del nombre DNS el balanceador: Entre el DNS name del balanceador:","title":"2. Cree un balanceador usando el certificado importado"},{"location":"acm/#3-agregue-http-al-security-group-el-webserver1","text":"(detalles) 3.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS EC2 3.2. En el menu lateral haga click en Security Groups 3.3. Seleccione el webserver1-sg y haga click en la pesta\u00f1a Inbound 3.4. Haga click en Edit y despu\u00e9s en Add Rule 3.5. En la ultima linea que se creo, seleccione el tipo HTTP y en \"Source\" remplaze el \"0.0.0.0/0\" por acm-web y cuando aparecer el id, seleccione el sg-xxxxxxxxxxx 3.6. Haga click en Save 3.7. En el menu lateral haga click en Target Groups 3.8. Seleccione el webserver1 y haga click en la pesta\u00f1a Targets 3.9. Vea si la instancia muestra Status como healthy 3.10. Si todav\u00eda sigue unhealthy espere alguns segundos, haga click en icono de refresh hasta que cambie de estado 3.11. Pruebe si el servicio funciona correctamente en: https:// <ELB DNS name> 3.12. Accepte el certificado digital auto-firmado haciendo click en Advanced... y Accept the Risk and Continue","title":"3. Agregue HTTP al Security Group el webserver1"},{"location":"advanced_topics/","text":"Topicos avanzados en el CloudHSM En este modulo se har\u00e1 las configuraciones de gestion por quorum (MofN) y configuraci\u00f3n de llaves no exportables 1. Cree una VPC (detalles) Si la infraestructura b\u00e1sica fue creada en el modulo anterior, podr\u00e1s saltar este paso. 1.1. En un navegador, abra la URL https://github.com/danidoo/danidoo.github.io/blob/master/cloudhsm-workshop/CFN-CloudHSMWorkshop.yml 1.2.","title":"Advanced topics"},{"location":"advanced_topics/#topicos-avanzados-en-el-cloudhsm","text":"En este modulo se har\u00e1 las configuraciones de gestion por quorum (MofN) y configuraci\u00f3n de llaves no exportables","title":"Topicos avanzados en el CloudHSM"},{"location":"advanced_topics/#1-cree-una-vpc","text":"(detalles) Si la infraestructura b\u00e1sica fue creada en el modulo anterior, podr\u00e1s saltar este paso. 1.1. En un navegador, abra la URL https://github.com/danidoo/danidoo.github.io/blob/master/cloudhsm-workshop/CFN-CloudHSMWorkshop.yml 1.2.","title":"1. Cree una VPC"},{"location":"cluster_init/","text":"Inicializaci\u00f3n del Cluster En este laborat\u00f3rio se har\u00e1 la inicializaci\u00f3n de un cluster de CloudHSM. 1. Cree una VPC (detalles) Si la infraestructura b\u00e1sica fue creada en el modulo anterior, podr\u00e1s saltar este paso. 1.1. En un navegador, abra la URL https://github.com/danidoo/danidoo.github.io/blob/master/cloudhsm-workshop/CFN-CloudHSMWorkshop.yml 1.2. Haga click en Raw e descargue el archivo a su maquina con el nombre cloudhsm-landing-zone.json. 1.3. Abra la Consola de AWS, en el servicio AWS CloudFormation . 1.4. Verifique que estas con la consola en la regi\u00f3n de \"N. Virginia\" (esa informaci\u00f3n esta en la parte superior derecha de la pantalla) 1.5. Haga click en Create stack 1.6. Seleccione el \"Template source\" como Upload a template file 1.7. Haga click en Choose a file y seleccione el archivo descargado anteriormente 1.8. Haga click en Next 1.9. En el campo Stack name llene con el nombre CloudHSM-Stack y haga click en Next 1.10. Haga click en Next y despues en Create stack 2. Cree un cluster (detalles) 2.1. En una nueva pesta\u00f1a o ventana del navegador, abra la consola de AWS en el servicio AWS CloudHSM en la regi\u00f3n de N. Virginia 2.2. Haga click en Create cluster , y usando los Ids del VPC y las subnets, elija los parametros adecuados 2.3. Deje la opci\u00f3n Create new cluster seleccionada y haga click en Next: Review y despu\u00e9s en Create cluster 2.4. La creaci\u00f3n del cluster puede llevar hasta 10 minutos. Siga con la proxima etapa mientras el proceso sigue. 3. Cree un bucket S3 para almacenamiento de objetos (detalles) Entre su user id o un valor aleatorio para generar objetos unicos 3.1. En una nueva pesta\u00f1a o ventana del navegador, abra la consola de AWS en el servicio Amazon S3 3.2. Haga click en Create bucket 3.2. En Bucket name llene con el nombre crypto- <su user id> (los buckets tinen que tener nombres \u00fanicos globalmente) 3.2. Elija la regi\u00f3n US East (N. Virginia) 3.2. Haga click en Create 4. Cree un bucket S3 para almacenamiento de sessiones (detalles) 4.2. Haga click en Create bucket 4.2. En Bucket name llene con el nombre session-logs- <su user id> (los buckets tinen que tener nombres \u00fanicos globalmente) 4.2. Elija la regi\u00f3n US East (N. Virginia) 4.2. Haga click en Create 5. Cree una politica IAM de acceso al bucket S3 creado anteriormente (detalles) 5.1. En una nueva pesta\u00f1a o ventana del navegador, abra la consola de AWS, en el servicio Amazon IAM 5.2. Haga click en Policies en el menu lateral y despu\u00e9s en Create policy 5.3. Haga click en Choose a service , filtre por S3 haga click en S3 5.4. Seleccione All S3 actions (s3:*) 5.5. Haga click Resources y despues en Add ARN del item bucket 5.6. En Bucket name llene con el nombre del bucket creado anteriormente ( crypto- <su user id> ) y haga click en Add 5.7. Haga click en Add ARN del item object 5.8. En Bucket name llene con el nombre del bucket creado anteriormente ( crypto- <su user id> ) 5.9. En Object name seleccione Any y haga click en Add 5.10. Haga click en Review policy 5.11. En Name llene con el nombre S3CryptoBucket y despu\u00e9s en Create policy 6. Cree un role IAM para instancias EC2 gestionadas por el SSM Systems Manager (detalles) 6.1. A\u00fan en la consola del servicio Amazon IAM 6.2. Haga click en Roles en el menu lateral y despu\u00e9s en Create role 6.3. Haga click en EC2 y despu\u00e9s en Next: Permissions 6.4. Filtre las politicas por ssm y elija la politica AmazonEC2RoleforSSM 6.5. Filtre de nuevo por cloudhsm y elija la politica AWSCloudHSMFullAccess 6.6. Filtre de nuevo por s3 y elija la politica creada en la etapa anterior S3CryptoBucket 6.7. Haga click en Next: Tags y despu\u00e9s en Next: Review 6.8. En Role name llene con el nombre EC2-SSM+S3Crypto y haga click en Create role 7. Cree un CloudHSM en el cluster (detalles) 7.1. Vuelva a la pesta\u00f1a del servicio AWS CloudHSM 7.2. Cuando el estado del cluster figure Uninitialized , haga click en Initialize Entre el Id del cluster (en el formato cluster-xxxxxxxxxxx ) 7.3. Cree un nuvo CloudHSM en el cluster, seleccionando la subnet en la AZ us-east-1a y haciendo click en Create (Si recibes el mensaje \"CreateHsm request failed\", elija la siguiente AZ - b, c...) 7.4. El processo de creaci\u00f3n de un nuevo CloudHSM en el cluster puede llevar cerca de 5 minutos. Siga a la proxima etapa mientras el proceso sigue. 8. Cree una instancia EC2 para gesti\u00f3n del CloudHSM (detalles) 8.1. Abra la consola AWS el servicio Amazon EC2 . 8.2. Haga click en Running Instances y despu\u00e9s en Launch Instance . 8.3. Selecci\u00f3ne la versi\u00f3n de Sistema Operativo Amazon Linux 2 AMI (64-bit x86) haciendo click en Select al lado de esta versi\u00f3n de AMI. 8.4. En el tipo de instancia, dele seleccionado t2.micro y haga click en Next: Configure Instance Details 8.5. En Network elija la VPC con nombre cloudhsm-vpc 8.6. En Subnet elija la subnet private-subnet-us-east-1b (o preferencialmente la de la regi\u00f3n donde fue creado el CloudHSM) 8.7. En IAM role elija el perfil creado anteriormente EC2-SSM+S3Crypto y haga click en Next: Add Storage 8.8. Haga click en Next Add Tags y despu\u00e9s en Add Tag 8.9. En el campo Key llene con Name y en el campo Value llene con el nombre cloudhsm-mgmt 8.10. Haga click en Next: Configure Security Group 8.11. Deje seleccionado Create a new security group 8.12. En Security group name llene con el nombre cloudhsm-mgmt-sg 8.13. En Description llene con CloudHSM Management Group 8.14. Borre la configuraci\u00f3n de SSH haciendo click en el X al fin de la linea de configuraci\u00f3n 8.15. Haga click en Review and Launch y despu\u00e9s en Launch 8.16. Remplaze la opci\u00f3n \"Choose an existing key pair\" por Proceed without a key pair 8.17. Seleccione I acknowledge that I will not (...) y haga click en Launch Instance 9. Descargue el CSR y lo deje disponible para firmar en el bucket S3 (detalles) 9.1. Vuelva a la pesta\u00f1a o ventana del navegador en el servicio AWS CloudHSM 9.2. Descargue el archivo para firmar el certificado del cluster, haciendo click en Cluster CSR y grabelo en tu laptop 9.3. Vuelva a la pesta\u00f1a o ventana del navegador en el servicio S3 9.4. Haga click en el bucket creado anteriormente crypto- <su user id> 9.5. Haga click en Upload y despues en Add files 9.6. Elija el archivo con el CSR descargado anteriormente (archivo con el nombre <cluster-xxxxxxxxxxxx> _ClusterCsr.csr ) 9.7. Haga click en Upload 10. Use la instancia de gesti\u00f3n para firmar el CSR (detalles) 10.1. Abra una nueva pesta\u00f1a o ventana del navegador en el servicio AWS Systems Manager 10.2. En el menu lateral, haga click Session Manager 10.3. Haga click en Configure Preferences o en la pesta\u00f1a Preferences 10.4. En la secci\u00f3n Write session output to an Amazon S3 bucket seleccione S3 bucket y desabilite Encrypt log data 10.5. Deje seleccionado Choose a bucket name from the list y seleccione el bucket creado anteriormente con nombre session-logs- <su user id> 10.6. Haga click en Save y despues en la pesta\u00f1a Sessions 11. Use la instancia de gesti\u00f3n para firmar el CSR (detalles) 11.3. Haga click en Start session 11.4. Seleccione la instancia con nombre cloudhsm-mgmt y haga click en Start session 11.5. Una nueva pesta\u00f1a se abrir\u00e1, haga click en la ventana y ejecute cd <enter> 11.6. Ejecute los comandos: sudo yum update -y wget https://s3.amazonaws.com/cloudhsmv2-software/CloudHsmClient/EL7/cloudhsm-client-latest.el7.x86_64.rpm sudo yum install ./cloudhsm-client-latest.el7.x86_64.rpm -y sudo yum install jq -y aws configure 11.7. No cambie las configuraciones est\u00e1ndar AWS Access Key ID y AWS Secret Access Key 11.8. En la opci\u00f3n Default region name llene con us-east-1 11.9. No cambie las configuracion est\u00e1ndar Default output format 11.10. Ejecute los comandos: aws s3 cp s3://crypto- <su_user_id> / <cluster-xxxxxxxxxxxx> _ClusterCsr.csr . 11.11. Crea un par de llaves y un certificado root con los comandos: openssl genrsa -aes256 -out customerCA.key 2048 11.12. Elija un pass phrase para las llaves openssl req -new -x509 -days 3652 -key customerCA.key -out customerCA.crt 11.12. Use el pass phrase creado anteriormente y elija las opciones que quiera para las preguntas que siguen 11.13. Firme el CSR con el comando: openssl x509 -req -days 3652 -in <cluster-xxxxxxxxxxxx> _ClusterCsr.csr \\ -CA customerCA.crt \\ -CAkey customerCA.key \\ -CAcreateserial \\ -out CustomerHsmCertificate.crt 11.14. Use el pass phrase creado anteriormente 11.15. Inicialice el cluster con el comando: aws cloudhsmv2 initialize-cluster --cluster-id <cluster-xxxxxxxxxxxx> \\ --signed-cert file://CustomerHsmCertificate.crt \\ --trust-anchor file://customerCA.crt 11.16. Vuelva a la pesta\u00f1a o ventana del navegador en el servicio AWS CloudHSM 11.17. Haga click en el bot\u00f3n de refrescar y vea que el status del cluster esta en Initialize in progress 11.10. El processo de inicializaci\u00f3n del cluster puede llevar cerca de 5 minutos. Siga a la proxima etapa mientras el proceso sigue. 12. Use el cliente de CloudHSM para conectar al cluster (detalles) 12.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 12.2. Configure el cliente con el comando: sudo cp customerCA.crt /opt/cloudhsm/etc/customerCA.crt 12.3. echo '#!/bin/sh' >> cloudhsm_mgmt_util.sh echo '/opt/cloudhsm/bin/cloudhsm_mgmt_util /opt/cloudhsm/etc/cloudhsm_mgmt_util.cfg' >> cloudhsm_mgmt_util.sh chmod +x cloudhsm_mgmt_util.sh ln -s /opt/cloudhsm/bin/key_mgmt_util key_mgmt_util 12.4. Vea la direcci\u00f3n IP del HSM en el cluster con el comando: aws cloudhsmv2 describe-clusters | jq '.Clusters[].Hsms[].EniIp' 12.5. Use la direcci\u00f3n IP del HSM para configurar el agente con el comando sudo /opt/cloudhsm/bin/configure -a <IP address> 12.6. Lanze el agente de gesti\u00f3n del CloudHSM con el comando: ./cloudhsm_mgmt_util.sh 12.7. En ese momento no vas a poder conectar pues faltan las reglas de firewall (Security Groups) para acceder al CloudHSM. Lo haremos en el paso siguiente 13. Configure las reglas de firewall para conectar al CloudHSM (detalles) 13.1. Vuelva a la pesta\u00f1a o ventana del navegador en el servicio AWS EC2 13.2. En el menu lateral haga click en Instances 13.3. Seleccione la instancia con nombre cloudhsm-mgmt 13.4. Haga click en Actions y debajo de Networking haga click en Change Security Groups 13.5. Seleccione un Security Group adicional con \"Group Name\" cloudhsm- <cluster-xxxxxxxxxxxx> -sg (generado automaticamente por el Cluster) 13.6. Haga click en Assign Security Groups 13.7. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 13.8. Intente de nuevo conectar al HSM con el comando: ./cloudhsm_mgmt_util.sh 13.9. Vea los usuarios est\u00e1ndar en el sistema con el comando: listUsers 13.10. Haga login con el usuario y contrase\u00f1a inicial con el comando: loginHSM PRECO admin password 13.11. Cambie la contrase\u00f1a con el comando: changePswd PRECO admin defaultPassword 13.12. Cuando recibir el prompt Do you want to continue(y/n)? digita y <enter> 13.13. Usa el comando \u201ccreateUser\u201c para crear un crypto user (CU). createUser CU user1 defaultPassword 13.14. Vea que el CloudHSM cabia el tipo de usuario del crypto officer y muestra el nuevo usuario user1 : listUsers 13.15. Termine la sesi\u00f3n en el agente con el comando: quit","title":"Inicializaci\u00f3n"},{"location":"cluster_init/#inicializacion-del-cluster","text":"En este laborat\u00f3rio se har\u00e1 la inicializaci\u00f3n de un cluster de CloudHSM.","title":"Inicializaci\u00f3n del Cluster"},{"location":"cluster_init/#1-cree-una-vpc","text":"(detalles) Si la infraestructura b\u00e1sica fue creada en el modulo anterior, podr\u00e1s saltar este paso. 1.1. En un navegador, abra la URL https://github.com/danidoo/danidoo.github.io/blob/master/cloudhsm-workshop/CFN-CloudHSMWorkshop.yml 1.2. Haga click en Raw e descargue el archivo a su maquina con el nombre cloudhsm-landing-zone.json. 1.3. Abra la Consola de AWS, en el servicio AWS CloudFormation . 1.4. Verifique que estas con la consola en la regi\u00f3n de \"N. Virginia\" (esa informaci\u00f3n esta en la parte superior derecha de la pantalla) 1.5. Haga click en Create stack 1.6. Seleccione el \"Template source\" como Upload a template file 1.7. Haga click en Choose a file y seleccione el archivo descargado anteriormente 1.8. Haga click en Next 1.9. En el campo Stack name llene con el nombre CloudHSM-Stack y haga click en Next 1.10. Haga click en Next y despues en Create stack","title":"1. Cree una VPC"},{"location":"cluster_init/#2-cree-un-cluster","text":"(detalles) 2.1. En una nueva pesta\u00f1a o ventana del navegador, abra la consola de AWS en el servicio AWS CloudHSM en la regi\u00f3n de N. Virginia 2.2. Haga click en Create cluster , y usando los Ids del VPC y las subnets, elija los parametros adecuados 2.3. Deje la opci\u00f3n Create new cluster seleccionada y haga click en Next: Review y despu\u00e9s en Create cluster 2.4. La creaci\u00f3n del cluster puede llevar hasta 10 minutos. Siga con la proxima etapa mientras el proceso sigue.","title":"2. Cree un cluster"},{"location":"cluster_init/#3-cree-un-bucket-s3-para-almacenamiento-de-objetos","text":"(detalles) Entre su user id o un valor aleatorio para generar objetos unicos 3.1. En una nueva pesta\u00f1a o ventana del navegador, abra la consola de AWS en el servicio Amazon S3 3.2. Haga click en Create bucket 3.2. En Bucket name llene con el nombre crypto- <su user id> (los buckets tinen que tener nombres \u00fanicos globalmente) 3.2. Elija la regi\u00f3n US East (N. Virginia) 3.2. Haga click en Create","title":"3. Cree un bucket S3 para almacenamiento de objetos"},{"location":"cluster_init/#4-cree-un-bucket-s3-para-almacenamiento-de-sessiones","text":"(detalles) 4.2. Haga click en Create bucket 4.2. En Bucket name llene con el nombre session-logs- <su user id> (los buckets tinen que tener nombres \u00fanicos globalmente) 4.2. Elija la regi\u00f3n US East (N. Virginia) 4.2. Haga click en Create","title":"4. Cree un bucket S3 para almacenamiento de sessiones"},{"location":"cluster_init/#5-cree-una-politica-iam-de-acceso-al-bucket-s3-creado-anteriormente","text":"(detalles) 5.1. En una nueva pesta\u00f1a o ventana del navegador, abra la consola de AWS, en el servicio Amazon IAM 5.2. Haga click en Policies en el menu lateral y despu\u00e9s en Create policy 5.3. Haga click en Choose a service , filtre por S3 haga click en S3 5.4. Seleccione All S3 actions (s3:*) 5.5. Haga click Resources y despues en Add ARN del item bucket 5.6. En Bucket name llene con el nombre del bucket creado anteriormente ( crypto- <su user id> ) y haga click en Add 5.7. Haga click en Add ARN del item object 5.8. En Bucket name llene con el nombre del bucket creado anteriormente ( crypto- <su user id> ) 5.9. En Object name seleccione Any y haga click en Add 5.10. Haga click en Review policy 5.11. En Name llene con el nombre S3CryptoBucket y despu\u00e9s en Create policy","title":"5. Cree una politica IAM de acceso al bucket S3 creado anteriormente"},{"location":"cluster_init/#6-cree-un-role-iam-para-instancias-ec2-gestionadas-por-el-ssm-systems-manager","text":"(detalles) 6.1. A\u00fan en la consola del servicio Amazon IAM 6.2. Haga click en Roles en el menu lateral y despu\u00e9s en Create role 6.3. Haga click en EC2 y despu\u00e9s en Next: Permissions 6.4. Filtre las politicas por ssm y elija la politica AmazonEC2RoleforSSM 6.5. Filtre de nuevo por cloudhsm y elija la politica AWSCloudHSMFullAccess 6.6. Filtre de nuevo por s3 y elija la politica creada en la etapa anterior S3CryptoBucket 6.7. Haga click en Next: Tags y despu\u00e9s en Next: Review 6.8. En Role name llene con el nombre EC2-SSM+S3Crypto y haga click en Create role","title":"6. Cree un role IAM para instancias EC2 gestionadas por el SSM Systems Manager"},{"location":"cluster_init/#7-cree-un-cloudhsm-en-el-cluster","text":"(detalles) 7.1. Vuelva a la pesta\u00f1a del servicio AWS CloudHSM 7.2. Cuando el estado del cluster figure Uninitialized , haga click en Initialize Entre el Id del cluster (en el formato cluster-xxxxxxxxxxx ) 7.3. Cree un nuvo CloudHSM en el cluster, seleccionando la subnet en la AZ us-east-1a y haciendo click en Create (Si recibes el mensaje \"CreateHsm request failed\", elija la siguiente AZ - b, c...) 7.4. El processo de creaci\u00f3n de un nuevo CloudHSM en el cluster puede llevar cerca de 5 minutos. Siga a la proxima etapa mientras el proceso sigue.","title":"7. Cree un CloudHSM en el cluster"},{"location":"cluster_init/#8-cree-una-instancia-ec2-para-gestion-del-cloudhsm","text":"(detalles) 8.1. Abra la consola AWS el servicio Amazon EC2 . 8.2. Haga click en Running Instances y despu\u00e9s en Launch Instance . 8.3. Selecci\u00f3ne la versi\u00f3n de Sistema Operativo Amazon Linux 2 AMI (64-bit x86) haciendo click en Select al lado de esta versi\u00f3n de AMI. 8.4. En el tipo de instancia, dele seleccionado t2.micro y haga click en Next: Configure Instance Details 8.5. En Network elija la VPC con nombre cloudhsm-vpc 8.6. En Subnet elija la subnet private-subnet-us-east-1b (o preferencialmente la de la regi\u00f3n donde fue creado el CloudHSM) 8.7. En IAM role elija el perfil creado anteriormente EC2-SSM+S3Crypto y haga click en Next: Add Storage 8.8. Haga click en Next Add Tags y despu\u00e9s en Add Tag 8.9. En el campo Key llene con Name y en el campo Value llene con el nombre cloudhsm-mgmt 8.10. Haga click en Next: Configure Security Group 8.11. Deje seleccionado Create a new security group 8.12. En Security group name llene con el nombre cloudhsm-mgmt-sg 8.13. En Description llene con CloudHSM Management Group 8.14. Borre la configuraci\u00f3n de SSH haciendo click en el X al fin de la linea de configuraci\u00f3n 8.15. Haga click en Review and Launch y despu\u00e9s en Launch 8.16. Remplaze la opci\u00f3n \"Choose an existing key pair\" por Proceed without a key pair 8.17. Seleccione I acknowledge that I will not (...) y haga click en Launch Instance","title":"8. Cree una instancia EC2 para gesti\u00f3n del CloudHSM"},{"location":"cluster_init/#9-descargue-el-csr-y-lo-deje-disponible-para-firmar-en-el-bucket-s3","text":"(detalles) 9.1. Vuelva a la pesta\u00f1a o ventana del navegador en el servicio AWS CloudHSM 9.2. Descargue el archivo para firmar el certificado del cluster, haciendo click en Cluster CSR y grabelo en tu laptop 9.3. Vuelva a la pesta\u00f1a o ventana del navegador en el servicio S3 9.4. Haga click en el bucket creado anteriormente crypto- <su user id> 9.5. Haga click en Upload y despues en Add files 9.6. Elija el archivo con el CSR descargado anteriormente (archivo con el nombre <cluster-xxxxxxxxxxxx> _ClusterCsr.csr ) 9.7. Haga click en Upload","title":"9. Descargue el CSR y lo deje disponible para firmar en el bucket S3"},{"location":"cluster_init/#10-use-la-instancia-de-gestion-para-firmar-el-csr","text":"(detalles) 10.1. Abra una nueva pesta\u00f1a o ventana del navegador en el servicio AWS Systems Manager 10.2. En el menu lateral, haga click Session Manager 10.3. Haga click en Configure Preferences o en la pesta\u00f1a Preferences 10.4. En la secci\u00f3n Write session output to an Amazon S3 bucket seleccione S3 bucket y desabilite Encrypt log data 10.5. Deje seleccionado Choose a bucket name from the list y seleccione el bucket creado anteriormente con nombre session-logs- <su user id> 10.6. Haga click en Save y despues en la pesta\u00f1a Sessions","title":"10. Use la instancia de gesti\u00f3n para firmar el CSR"},{"location":"cluster_init/#11-use-la-instancia-de-gestion-para-firmar-el-csr","text":"(detalles) 11.3. Haga click en Start session 11.4. Seleccione la instancia con nombre cloudhsm-mgmt y haga click en Start session 11.5. Una nueva pesta\u00f1a se abrir\u00e1, haga click en la ventana y ejecute cd <enter> 11.6. Ejecute los comandos: sudo yum update -y wget https://s3.amazonaws.com/cloudhsmv2-software/CloudHsmClient/EL7/cloudhsm-client-latest.el7.x86_64.rpm sudo yum install ./cloudhsm-client-latest.el7.x86_64.rpm -y sudo yum install jq -y aws configure 11.7. No cambie las configuraciones est\u00e1ndar AWS Access Key ID y AWS Secret Access Key 11.8. En la opci\u00f3n Default region name llene con us-east-1 11.9. No cambie las configuracion est\u00e1ndar Default output format 11.10. Ejecute los comandos: aws s3 cp s3://crypto- <su_user_id> / <cluster-xxxxxxxxxxxx> _ClusterCsr.csr . 11.11. Crea un par de llaves y un certificado root con los comandos: openssl genrsa -aes256 -out customerCA.key 2048 11.12. Elija un pass phrase para las llaves openssl req -new -x509 -days 3652 -key customerCA.key -out customerCA.crt 11.12. Use el pass phrase creado anteriormente y elija las opciones que quiera para las preguntas que siguen 11.13. Firme el CSR con el comando: openssl x509 -req -days 3652 -in <cluster-xxxxxxxxxxxx> _ClusterCsr.csr \\ -CA customerCA.crt \\ -CAkey customerCA.key \\ -CAcreateserial \\ -out CustomerHsmCertificate.crt 11.14. Use el pass phrase creado anteriormente 11.15. Inicialice el cluster con el comando: aws cloudhsmv2 initialize-cluster --cluster-id <cluster-xxxxxxxxxxxx> \\ --signed-cert file://CustomerHsmCertificate.crt \\ --trust-anchor file://customerCA.crt 11.16. Vuelva a la pesta\u00f1a o ventana del navegador en el servicio AWS CloudHSM 11.17. Haga click en el bot\u00f3n de refrescar y vea que el status del cluster esta en Initialize in progress 11.10. El processo de inicializaci\u00f3n del cluster puede llevar cerca de 5 minutos. Siga a la proxima etapa mientras el proceso sigue.","title":"11. Use la instancia de gesti\u00f3n para firmar el CSR"},{"location":"cluster_init/#12-use-el-cliente-de-cloudhsm-para-conectar-al-cluster","text":"(detalles) 12.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 12.2. Configure el cliente con el comando: sudo cp customerCA.crt /opt/cloudhsm/etc/customerCA.crt 12.3. echo '#!/bin/sh' >> cloudhsm_mgmt_util.sh echo '/opt/cloudhsm/bin/cloudhsm_mgmt_util /opt/cloudhsm/etc/cloudhsm_mgmt_util.cfg' >> cloudhsm_mgmt_util.sh chmod +x cloudhsm_mgmt_util.sh ln -s /opt/cloudhsm/bin/key_mgmt_util key_mgmt_util 12.4. Vea la direcci\u00f3n IP del HSM en el cluster con el comando: aws cloudhsmv2 describe-clusters | jq '.Clusters[].Hsms[].EniIp' 12.5. Use la direcci\u00f3n IP del HSM para configurar el agente con el comando sudo /opt/cloudhsm/bin/configure -a <IP address> 12.6. Lanze el agente de gesti\u00f3n del CloudHSM con el comando: ./cloudhsm_mgmt_util.sh 12.7. En ese momento no vas a poder conectar pues faltan las reglas de firewall (Security Groups) para acceder al CloudHSM. Lo haremos en el paso siguiente","title":"12. Use el cliente de CloudHSM para conectar al cluster"},{"location":"cluster_init/#13-configure-las-reglas-de-firewall-para-conectar-al-cloudhsm","text":"(detalles) 13.1. Vuelva a la pesta\u00f1a o ventana del navegador en el servicio AWS EC2 13.2. En el menu lateral haga click en Instances 13.3. Seleccione la instancia con nombre cloudhsm-mgmt 13.4. Haga click en Actions y debajo de Networking haga click en Change Security Groups 13.5. Seleccione un Security Group adicional con \"Group Name\" cloudhsm- <cluster-xxxxxxxxxxxx> -sg (generado automaticamente por el Cluster) 13.6. Haga click en Assign Security Groups 13.7. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 13.8. Intente de nuevo conectar al HSM con el comando: ./cloudhsm_mgmt_util.sh 13.9. Vea los usuarios est\u00e1ndar en el sistema con el comando: listUsers 13.10. Haga login con el usuario y contrase\u00f1a inicial con el comando: loginHSM PRECO admin password 13.11. Cambie la contrase\u00f1a con el comando: changePswd PRECO admin defaultPassword 13.12. Cuando recibir el prompt Do you want to continue(y/n)? digita y <enter> 13.13. Usa el comando \u201ccreateUser\u201c para crear un crypto user (CU). createUser CU user1 defaultPassword 13.14. Vea que el CloudHSM cabia el tipo de usuario del crypto officer y muestra el nuevo usuario user1 : listUsers 13.15. Termine la sesi\u00f3n en el agente con el comando: quit","title":"13. Configure las reglas de firewall para conectar al CloudHSM"},{"location":"key_management/","text":"Gesti\u00f3n llaves 1. Creando llaves en el HSM (detalles) En este modulo se crear\u00e1 varios tipos de llaves (simetricas y asim\u00e9tricas) Entre el user id o valor aleatorio usado en el modulo anterior: 1.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 1.2. Inicie el servicio cliente del CloudHSM sudo systemctl start cloudhsm-client 1.3. Inicie el agente de gesti\u00f3n de llaves ./key_mgmt_util 1.4. Haga login con el usuario crypto user creado loginHSM -u CU -s user1 -p defaultPassword 1.5. Genere una llave simetrica AES-256 con el comando: genSymKey -t 31 -s 32 -l aes256 Entre el Key Handle de esa llave: 1.6. Genere una llave asim\u00e9trica RSA con el comando: genRSAKeyPair -m 2048 -e 65541 -l rsa_test Entre el Key Handle de esa llave: 1.7. Genere una llave de curva el\u00edptica con el comando: genECCKeyPair -i 12 -l ecc12 1.8. Genere una wrapping key en el CloudHSM y tome nota de su key handle genSymKey -t 31 -s 32 -l wrappingKey Llene el Key Handle del wrapping key: Tome nota tambi\u00e9n de ese numero en un editor de texto pues la va a necesitar en una etapa seguiente. 1.9. Saiga del agente con el comando: exit 2. Importando una llave AES-256 al CloudHSM (detalles) En este modulo se va a importar una llave simetrica AES-256 al CloudHSM 2.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 2.2. Genere una llave simetrica AES-256 para importaci\u00f3n con la herramienta openssl openssl rand -out aes256-forImport.key 32 2.3. Use el comando imSymKey para importar al CloudHSM la llave AES-256 generada con openssl en el paso anteriormente. /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s user1 -p defaultPassword imSymKey -f aes256-forImport.key -w <wrapping key handle> -t 31 -l imported 3. Exportando la llave AES-256 del CloudHSM (detalles) 3.1. Exporte en texto plano la llave AES-256 creada anteriormente (key handle -k). El agente usa una llave AES-256 de wrapping creada anteriormente(key handle -w) en el CloudHSM. Entonces escribe la llave en texto plano al archivo AES-256-CHSM-unencrypted.key. /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s user1 -p defaultPassword exSymKey -k <AES-256 key handle> -w <wrapping key handle> -out AES-256-CHSM-unencrypted.key 3.2. Importe la llave AES-256 en texto plano creada anteriormente (key handle -k). /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s user1 -p defaultPassword imSymKey -t 31 -f AES-256-CHSM-unencrypted.key -w <wrapping key handle> -l imported_fromPlaintext 3.3. Exporte la misma llave AES-256 de manera cifrada con el comando: /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s user1 -p defaultPassword wrapKey -k <AES-256 key handle> -w <wrapping key handle> -out AES-256-CHSM-encrypted.key 3.4. Vuelva a importar esa llave cifrada al CloudHSM: /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s user1 -p defaultPassword unWrapKey -f AES-256-CHSM-encrypted.key -w <wrapping key handle> 3.5. Saiga del agente con el comando: exit 4. Usando openssl con llaves en el CloudHSM (detalles) 4.1. Instale la libreria wget https://s3.amazonaws.com/cloudhsmv2-software/CloudHsmClient/EL7/cloudhsm-client-dyn-latest.el7.x86_64.rpm sudo yum install -y ./cloudhsm-client-dyn-latest.el7.x86_64.rpm 4.2. Configure las credenciales export n3fips_password=user1:defaultPassword 4.3. Cree un key pair openssl genrsa -engine cloudhsm -out fake_pem.key 2048 4.4. Cree un CSR openssl req -engine cloudhsm -new -key fake_pem.key -out webserver.csr 4.4. Cree un Certificado auto-firmado con el comando: openssl x509 -engine cloudhsm -req -days 365 -in webserver.csr -signkey fake_pem.key -out webserver.crt 5. Ponga el certificado y fake_pem en el bucket S3 (detalles) 5.1. Envie el archivo PEM de llave y el certificado generado al bucket S3 con los comandos aws s3 cp ./fake_pem.key s3://crypto- <su user id> / aws s3 cp ./webserver.crt s3://crypto- <su user id> /","title":"Gesti\u00f3n de llaves"},{"location":"key_management/#gestion-llaves","text":"","title":"Gesti\u00f3n llaves"},{"location":"key_management/#1-creando-llaves-en-el-hsm","text":"(detalles) En este modulo se crear\u00e1 varios tipos de llaves (simetricas y asim\u00e9tricas) Entre el user id o valor aleatorio usado en el modulo anterior: 1.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 1.2. Inicie el servicio cliente del CloudHSM sudo systemctl start cloudhsm-client 1.3. Inicie el agente de gesti\u00f3n de llaves ./key_mgmt_util 1.4. Haga login con el usuario crypto user creado loginHSM -u CU -s user1 -p defaultPassword 1.5. Genere una llave simetrica AES-256 con el comando: genSymKey -t 31 -s 32 -l aes256 Entre el Key Handle de esa llave: 1.6. Genere una llave asim\u00e9trica RSA con el comando: genRSAKeyPair -m 2048 -e 65541 -l rsa_test Entre el Key Handle de esa llave: 1.7. Genere una llave de curva el\u00edptica con el comando: genECCKeyPair -i 12 -l ecc12 1.8. Genere una wrapping key en el CloudHSM y tome nota de su key handle genSymKey -t 31 -s 32 -l wrappingKey Llene el Key Handle del wrapping key: Tome nota tambi\u00e9n de ese numero en un editor de texto pues la va a necesitar en una etapa seguiente. 1.9. Saiga del agente con el comando: exit","title":"1. Creando llaves en el HSM"},{"location":"key_management/#2-importando-una-llave-aes-256-al-cloudhsm","text":"(detalles) En este modulo se va a importar una llave simetrica AES-256 al CloudHSM 2.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 2.2. Genere una llave simetrica AES-256 para importaci\u00f3n con la herramienta openssl openssl rand -out aes256-forImport.key 32 2.3. Use el comando imSymKey para importar al CloudHSM la llave AES-256 generada con openssl en el paso anteriormente. /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s user1 -p defaultPassword imSymKey -f aes256-forImport.key -w <wrapping key handle> -t 31 -l imported","title":"2. Importando una llave AES-256 al CloudHSM"},{"location":"key_management/#3-exportando-la-llave-aes-256-del-cloudhsm","text":"(detalles) 3.1. Exporte en texto plano la llave AES-256 creada anteriormente (key handle -k). El agente usa una llave AES-256 de wrapping creada anteriormente(key handle -w) en el CloudHSM. Entonces escribe la llave en texto plano al archivo AES-256-CHSM-unencrypted.key. /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s user1 -p defaultPassword exSymKey -k <AES-256 key handle> -w <wrapping key handle> -out AES-256-CHSM-unencrypted.key 3.2. Importe la llave AES-256 en texto plano creada anteriormente (key handle -k). /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s user1 -p defaultPassword imSymKey -t 31 -f AES-256-CHSM-unencrypted.key -w <wrapping key handle> -l imported_fromPlaintext 3.3. Exporte la misma llave AES-256 de manera cifrada con el comando: /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s user1 -p defaultPassword wrapKey -k <AES-256 key handle> -w <wrapping key handle> -out AES-256-CHSM-encrypted.key 3.4. Vuelva a importar esa llave cifrada al CloudHSM: /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s user1 -p defaultPassword unWrapKey -f AES-256-CHSM-encrypted.key -w <wrapping key handle> 3.5. Saiga del agente con el comando: exit","title":"3. Exportando la llave AES-256 del CloudHSM"},{"location":"key_management/#4-usando-openssl-con-llaves-en-el-cloudhsm","text":"(detalles) 4.1. Instale la libreria wget https://s3.amazonaws.com/cloudhsmv2-software/CloudHsmClient/EL7/cloudhsm-client-dyn-latest.el7.x86_64.rpm sudo yum install -y ./cloudhsm-client-dyn-latest.el7.x86_64.rpm 4.2. Configure las credenciales export n3fips_password=user1:defaultPassword 4.3. Cree un key pair openssl genrsa -engine cloudhsm -out fake_pem.key 2048 4.4. Cree un CSR openssl req -engine cloudhsm -new -key fake_pem.key -out webserver.csr 4.4. Cree un Certificado auto-firmado con el comando: openssl x509 -engine cloudhsm -req -days 365 -in webserver.csr -signkey fake_pem.key -out webserver.crt","title":"4. Usando openssl con llaves en el CloudHSM"},{"location":"key_management/#5-ponga-el-certificado-y-fake_pem-en-el-bucket-s3","text":"(detalles) 5.1. Envie el archivo PEM de llave y el certificado generado al bucket S3 con los comandos aws s3 cp ./fake_pem.key s3://crypto- <su user id> / aws s3 cp ./webserver.crt s3://crypto- <su user id> /","title":"5. Ponga el certificado y fake_pem en el bucket S3"},{"location":"kms/","text":"AWS Key Management Service AWS Key Management Service As pr\u00e1ticas recomendadas sugerem o uso de criptografia de dados em repouso com base nos padr\u00f5es e pr\u00e1ticas recomendadas mais recentes para ajudar a proteger seus dados. Al\u00e9m disso, as chaves de criptografia devem ser armazenadas com seguran\u00e7a, rotacionadas e seu acesso deve ser controladoe restrito; por exemplo, usando um servi\u00e7o de gerenciamento de chaves, como o AWS Key Management Service. Neste laborat\u00f3rio ser\u00e1 usado o servi\u00e7o AWS Key Management Service para criar e gerenciar o controle de acesso \u00e0s chaves, assim como o Amazon S3 para armazenar objetos criptografados usando estas chaves. 1. Cree un perfil para una instancia EC2 (detalles) 1.1. En una nueva pesta\u00f1a o ventana del navegador, abra la consola de AWS en el servicio AWS Identity and Access Management 1.2. En el menu lateral, haga click en Roles y despu\u00e9s en Create role 1.3. Deje las selecciones por defecto de entidades confiadas como AWS service , haga click en el servicio EC2 y despu\u00e9s en Next: Permissions 1.4. Filtre las politicas por SSM , seleccione la pol\u00edtica AmazonEC2RoleforSSM y haga click en Next: Tags 1.5. Haga click en Next: Review (Tags no van a ser necesarios en ese momento) 1.6. En el campo Role name llene con el nombre EC2-Role y haga click en Create role 1.7. En el topo de la pantalla aparecer\u00e1 el mensaje \"The role EC2-SSM-S3 has been created\", haga click en el enlace EC2-Role 1.8. Tome nota del ARN (Amazon Resource Name) en Role ARN (formato arn:aws:iam::XXXXXXXXXXXX:role/EC2-SSM-S3 ) Entre el ARN del perfil: 2. Cree un bucket S3 (detalles) 2.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS S3 2.2. Haga click en + Create bucket 2.3. En el campo Bucket name llene el texto s3encrypted-<su user id> 2.4. Verifique que em Region est\u00e1 selecionado US East (N. Virginia) e clique em Create** Entre el Nombre final del bucket: 3. Cree una instancia EC2 (detalles) 3.1. Vuelva a la pesta\u00f1a o ventana del navegador del Amazon EC2 3.2. Haga click en Launch Instance 3.3. Haga click en Select en la linea que corresponde a la AMI Amazon Linux 2 AMI (HVM), SSD Volume Type 3.4. Deje seleccionado el tipo de instancia t2.micro y haga click en Next: Configure Instance Details 3.5. Mantenga las configuraciones por defecto y en el punto IAM role seleccione el perfil EC2-Role creado anteriormente 3.6. Haga click en Review and Launch y en la pantalla siguiente en Launch 3.7. Remplaze la opci\u00f3n \"Choose an existing key pair\" por Proceed without a key pair 3.8. Seleccione I acknowledge that I will not (...) y haga click en Launch Instance 4. Pruebe el acceso de la instancia al bucket S3 (detalles) 4.1. Abra una nueva pesta\u00f1a o ventana del navegador en el servicio AWS Systems Manager 4.2. En el menu lateral, haga click Session Manager 4.3. Haga click en Start session 4.4. Seleccione la instancia creada anteriormente y haga click en Start session 4.5. Una nueva pesta\u00f1a se abrir\u00e1, haga click en la ventana y ejecute cd <enter> 4.6. Para listar los buckets S3, ejecute el comando aws s3 ls 4.7. El acceso sera denegado pues la instancia no tiene permiso de acceso al servicio S3 4.8. Mantenga la pesta\u00f1a o ventana del navegador abierta pues se la usaremos en otras etapas 5. Agregue permissos de acceso al S3 a la instancia (detalles) 5.1. Vuelva a la pesta\u00f1a o ventana del navegador del Amazon IAM 5.2. HEn el menu lateral haga click en Roles y filtre por ec2 5.3. Haga click en el perfil EC2-Role creado anteriormente 5.4. Haga click en Attach policies 5.5. Filtre las politicas por S3 , seleccione la politica AmazonS3FullAccess y haga click en Attach policy 5.6. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 5.7. Ejecute nuevamente el comando para listar los buckets S3 aws s3 ls 5.7. Ahora con los permisos establecidos, el acceso debe ser permitido y una lista de buckets sera mostrada 6. Cree una Customer Master Key (detalles) 6.1. Abra una nueva pesta\u00f1a o ventana del navegador en el servicio AWS Key Management Service 6.2. Haga click en Create Key 6.3. En el campo Alias llene con el texto KMS-CMK 6.4. En Advanced options deje seleccionado KMS como origen del material de llaves y haga click en Next 6.5. Haga click en Next 6.6. En las opciones de elecci\u00f3n de administradores, deje los valores est\u00e1ndar y haga click en Next 6.7. En las opciones de administradores de llaves, filtre por user1 , seleccione el usuario user1 y haga click en Next 6.8. Haga click en Finish Entre el Key Id de la llave creada: 7. Configure el bucket para encripci\u00f3n, agregue un objeto y pruebe el acceso (detalles) 7.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS S3 7.2. Haga click en el numbre del bucket creado anteriormente <nombre del bucket> 7.3. Haga click en la pesta\u00f1a Properties y despu\u00e9s en Default encryption 7.4. Seleccione encripci\u00f3n KMS-CMK , elija la llave KMS-CMK y haga click en Save 7.5. Cree o elija un archivo no confidencial o personal en su computadora que no sea muy grande 7.6. Vuelva a la pesta\u00f1a Overview y haga click en Upload 7.7. Haga click en Add files y seleccione el archivo; o arrastre el archivo a la pantalla 7.8. Haga click en Upload Entre el nombre del archivo : 7.9. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 7.10. Intente descargar el archivo (no ser\u00e1 posible pues la instancia no tiene permiso a la llave de encripci\u00f3n) aws s3 cp s3:// <nombre del bucket> / <nombre del archivo> . 8. Cambie los permisos de acceso a la llave y intente de nuevo (detalles) 8.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Key Management Service 8.2. En el menu lateral, haga click en Customer managed keys 8.3. Seleccione el alias de la llave generada anteriormente KMS-CMK 8.4. En la secci\u00f3n Key users haga click en Add 8.5. Filtre por ec2 , seleccione EC2-Role y haga click en Add 8.6. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia aws s3 cp s3:// <nombre del bucket> / <nombre del archivo> . 8.7. En esta vez el acceso al archivo sera permitido pues el perfil de la instancia tiene permisi\u00f3n para uso de la llave 9. Configure el rotacionamiento automatico de la llave (detalles) 9.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Key Management Service 9.2. En el menu lateral, haga click en Customer managed keys 9.3. Seleccione el nombre de la llave generada anteriormente KMS-CMK 9.4. En la pesta\u00f1a Key policy haga click en Edit 9.5. Haga click en la pesta\u00f1a Key rotation 9.6. Seleccione la opci\u00f3n Automatically rotate this CMK every year. 9.7. Haga click en Save 10. Agregue permissos de acceso al AWS KMS a la instancia (detalles) 10.1. Vuelva a la pesta\u00f1a o ventana del navegador del Amazon IAM 10.2. HEn el menu lateral haga click en Roles y filtre por ec2 10.3. Haga click en el perfil EC2-Role creado anteriormente 10.4. Haga click en Attach policies 10.5. Filtre las politicas por S3 , seleccione la politica AmazonS3FullAccess y haga click en Attach policy 10.6. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 10.7. Ejecute nuevamente el comando para listar los buckets S3 aws s3 ls 10.8. Ahora con los permisos establecidos, el acceso debe ser permitido y una lista de buckets sera mostrada 11. Haga encripci\u00f3n del lado del cliente usando llaves del KMS (detalles) 11.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 11.2. Instale las herramientas de encripcion de AWS con el comando: sudo install python3 python-pip3 -y sudo pip3 install aws-encryption-sdk-cli 11.3. Descargue un archivo para cifrar con el comando: cd /tmp wget https://d1.awsstatic.com/whitepapers/KMS-Cryptographic-Details.pdf 11.1. Verifique el formato del archivo usando el comando: file KMS-Cryptographic-Details.pdf 11.1. Usando la herramienta de encripci\u00f3n de AWS, cifre el archivo usando la llave creada anteriormente: aws-encryption-cli --encrypt --input KMS-Cryptographic-Details.pdf \\ --master-keys key= <cmk key id> \\ --encryption-context purpose=test \\ --metadata-output ~/metadata \\ --output . 11.1. Verifique el formato del archivo cifrado usando el comando: file KMS-Cryptographic-Details.pdf.encrypted 11.1. Decifre el archivo usando el comando: aws-encryption-cli --decrypt --input KMS-Cryptographic-Details.pdf.encrypted \\ --encryption-context purpose=test \\ --metadata-output ~/metadata \\ --output . 11.1. Verifique el formato del archivo cifrado usando el comando: file KMS-Cryptographic-Details.pdf.encrypted 11.1. Verifique si los archivos son identicos con el comando: sha256sum KMS-Cryptographic-Details.pdf KMS-Cryptographic-Details.pdf.encrypted.decrypted","title":"KMS"},{"location":"kms/#aws-key-management-service","text":"","title":"AWS Key Management Service"},{"location":"kms/#aws-key-management-service_1","text":"As pr\u00e1ticas recomendadas sugerem o uso de criptografia de dados em repouso com base nos padr\u00f5es e pr\u00e1ticas recomendadas mais recentes para ajudar a proteger seus dados. Al\u00e9m disso, as chaves de criptografia devem ser armazenadas com seguran\u00e7a, rotacionadas e seu acesso deve ser controladoe restrito; por exemplo, usando um servi\u00e7o de gerenciamento de chaves, como o AWS Key Management Service. Neste laborat\u00f3rio ser\u00e1 usado o servi\u00e7o AWS Key Management Service para criar e gerenciar o controle de acesso \u00e0s chaves, assim como o Amazon S3 para armazenar objetos criptografados usando estas chaves.","title":"AWS Key Management Service"},{"location":"kms/#1-cree-un-perfil-para-una-instancia-ec2","text":"(detalles) 1.1. En una nueva pesta\u00f1a o ventana del navegador, abra la consola de AWS en el servicio AWS Identity and Access Management 1.2. En el menu lateral, haga click en Roles y despu\u00e9s en Create role 1.3. Deje las selecciones por defecto de entidades confiadas como AWS service , haga click en el servicio EC2 y despu\u00e9s en Next: Permissions 1.4. Filtre las politicas por SSM , seleccione la pol\u00edtica AmazonEC2RoleforSSM y haga click en Next: Tags 1.5. Haga click en Next: Review (Tags no van a ser necesarios en ese momento) 1.6. En el campo Role name llene con el nombre EC2-Role y haga click en Create role 1.7. En el topo de la pantalla aparecer\u00e1 el mensaje \"The role EC2-SSM-S3 has been created\", haga click en el enlace EC2-Role 1.8. Tome nota del ARN (Amazon Resource Name) en Role ARN (formato arn:aws:iam::XXXXXXXXXXXX:role/EC2-SSM-S3 ) Entre el ARN del perfil:","title":"1. Cree un perfil para una instancia EC2"},{"location":"kms/#2-cree-un-bucket-s3","text":"(detalles) 2.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS S3 2.2. Haga click en + Create bucket 2.3. En el campo Bucket name llene el texto s3encrypted-<su user id> 2.4. Verifique que em Region est\u00e1 selecionado US East (N. Virginia) e clique em Create** Entre el Nombre final del bucket:","title":"2. Cree un bucket S3"},{"location":"kms/#3-cree-una-instancia-ec2","text":"(detalles) 3.1. Vuelva a la pesta\u00f1a o ventana del navegador del Amazon EC2 3.2. Haga click en Launch Instance 3.3. Haga click en Select en la linea que corresponde a la AMI Amazon Linux 2 AMI (HVM), SSD Volume Type 3.4. Deje seleccionado el tipo de instancia t2.micro y haga click en Next: Configure Instance Details 3.5. Mantenga las configuraciones por defecto y en el punto IAM role seleccione el perfil EC2-Role creado anteriormente 3.6. Haga click en Review and Launch y en la pantalla siguiente en Launch 3.7. Remplaze la opci\u00f3n \"Choose an existing key pair\" por Proceed without a key pair 3.8. Seleccione I acknowledge that I will not (...) y haga click en Launch Instance","title":"3. Cree una instancia EC2"},{"location":"kms/#4-pruebe-el-acceso-de-la-instancia-al-bucket-s3","text":"(detalles) 4.1. Abra una nueva pesta\u00f1a o ventana del navegador en el servicio AWS Systems Manager 4.2. En el menu lateral, haga click Session Manager 4.3. Haga click en Start session 4.4. Seleccione la instancia creada anteriormente y haga click en Start session 4.5. Una nueva pesta\u00f1a se abrir\u00e1, haga click en la ventana y ejecute cd <enter> 4.6. Para listar los buckets S3, ejecute el comando aws s3 ls 4.7. El acceso sera denegado pues la instancia no tiene permiso de acceso al servicio S3 4.8. Mantenga la pesta\u00f1a o ventana del navegador abierta pues se la usaremos en otras etapas","title":"4. Pruebe el acceso de la instancia al bucket S3"},{"location":"kms/#5-agregue-permissos-de-acceso-al-s3-a-la-instancia","text":"(detalles) 5.1. Vuelva a la pesta\u00f1a o ventana del navegador del Amazon IAM 5.2. HEn el menu lateral haga click en Roles y filtre por ec2 5.3. Haga click en el perfil EC2-Role creado anteriormente 5.4. Haga click en Attach policies 5.5. Filtre las politicas por S3 , seleccione la politica AmazonS3FullAccess y haga click en Attach policy 5.6. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 5.7. Ejecute nuevamente el comando para listar los buckets S3 aws s3 ls 5.7. Ahora con los permisos establecidos, el acceso debe ser permitido y una lista de buckets sera mostrada","title":"5. Agregue permissos de acceso al S3 a la instancia"},{"location":"kms/#6-cree-una-customer-master-key","text":"(detalles) 6.1. Abra una nueva pesta\u00f1a o ventana del navegador en el servicio AWS Key Management Service 6.2. Haga click en Create Key 6.3. En el campo Alias llene con el texto KMS-CMK 6.4. En Advanced options deje seleccionado KMS como origen del material de llaves y haga click en Next 6.5. Haga click en Next 6.6. En las opciones de elecci\u00f3n de administradores, deje los valores est\u00e1ndar y haga click en Next 6.7. En las opciones de administradores de llaves, filtre por user1 , seleccione el usuario user1 y haga click en Next 6.8. Haga click en Finish Entre el Key Id de la llave creada:","title":"6. Cree una Customer Master Key"},{"location":"kms/#7-configure-el-bucket-para-encripcion-agregue-un-objeto-y-pruebe-el-acceso","text":"(detalles) 7.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS S3 7.2. Haga click en el numbre del bucket creado anteriormente <nombre del bucket> 7.3. Haga click en la pesta\u00f1a Properties y despu\u00e9s en Default encryption 7.4. Seleccione encripci\u00f3n KMS-CMK , elija la llave KMS-CMK y haga click en Save 7.5. Cree o elija un archivo no confidencial o personal en su computadora que no sea muy grande 7.6. Vuelva a la pesta\u00f1a Overview y haga click en Upload 7.7. Haga click en Add files y seleccione el archivo; o arrastre el archivo a la pantalla 7.8. Haga click en Upload Entre el nombre del archivo : 7.9. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 7.10. Intente descargar el archivo (no ser\u00e1 posible pues la instancia no tiene permiso a la llave de encripci\u00f3n) aws s3 cp s3:// <nombre del bucket> / <nombre del archivo> .","title":"7. Configure el bucket para encripci\u00f3n, agregue un objeto y pruebe el acceso"},{"location":"kms/#8-cambie-los-permisos-de-acceso-a-la-llave-y-intente-de-nuevo","text":"(detalles) 8.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Key Management Service 8.2. En el menu lateral, haga click en Customer managed keys 8.3. Seleccione el alias de la llave generada anteriormente KMS-CMK 8.4. En la secci\u00f3n Key users haga click en Add 8.5. Filtre por ec2 , seleccione EC2-Role y haga click en Add 8.6. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia aws s3 cp s3:// <nombre del bucket> / <nombre del archivo> . 8.7. En esta vez el acceso al archivo sera permitido pues el perfil de la instancia tiene permisi\u00f3n para uso de la llave","title":"8. Cambie los permisos de acceso a la llave y intente de nuevo"},{"location":"kms/#9-configure-el-rotacionamiento-automatico-de-la-llave","text":"(detalles) 9.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Key Management Service 9.2. En el menu lateral, haga click en Customer managed keys 9.3. Seleccione el nombre de la llave generada anteriormente KMS-CMK 9.4. En la pesta\u00f1a Key policy haga click en Edit 9.5. Haga click en la pesta\u00f1a Key rotation 9.6. Seleccione la opci\u00f3n Automatically rotate this CMK every year. 9.7. Haga click en Save","title":"9. Configure el rotacionamiento automatico de la llave"},{"location":"kms/#10-agregue-permissos-de-acceso-al-aws-kms-a-la-instancia","text":"(detalles) 10.1. Vuelva a la pesta\u00f1a o ventana del navegador del Amazon IAM 10.2. HEn el menu lateral haga click en Roles y filtre por ec2 10.3. Haga click en el perfil EC2-Role creado anteriormente 10.4. Haga click en Attach policies 10.5. Filtre las politicas por S3 , seleccione la politica AmazonS3FullAccess y haga click en Attach policy 10.6. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 10.7. Ejecute nuevamente el comando para listar los buckets S3 aws s3 ls 10.8. Ahora con los permisos establecidos, el acceso debe ser permitido y una lista de buckets sera mostrada","title":"10. Agregue permissos de acceso al AWS KMS a la instancia"},{"location":"kms/#11-haga-encripcion-del-lado-del-cliente-usando-llaves-del-kms","text":"(detalles) 11.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 11.2. Instale las herramientas de encripcion de AWS con el comando: sudo install python3 python-pip3 -y sudo pip3 install aws-encryption-sdk-cli 11.3. Descargue un archivo para cifrar con el comando: cd /tmp wget https://d1.awsstatic.com/whitepapers/KMS-Cryptographic-Details.pdf 11.1. Verifique el formato del archivo usando el comando: file KMS-Cryptographic-Details.pdf 11.1. Usando la herramienta de encripci\u00f3n de AWS, cifre el archivo usando la llave creada anteriormente: aws-encryption-cli --encrypt --input KMS-Cryptographic-Details.pdf \\ --master-keys key= <cmk key id> \\ --encryption-context purpose=test \\ --metadata-output ~/metadata \\ --output . 11.1. Verifique el formato del archivo cifrado usando el comando: file KMS-Cryptographic-Details.pdf.encrypted 11.1. Decifre el archivo usando el comando: aws-encryption-cli --decrypt --input KMS-Cryptographic-Details.pdf.encrypted \\ --encryption-context purpose=test \\ --metadata-output ~/metadata \\ --output . 11.1. Verifique el formato del archivo cifrado usando el comando: file KMS-Cryptographic-Details.pdf.encrypted 11.1. Verifique si los archivos son identicos con el comando: sha256sum KMS-Cryptographic-Details.pdf KMS-Cryptographic-Details.pdf.encrypted.decrypted","title":"11. Haga encripci\u00f3n del lado del cliente usando llaves del KMS"},{"location":"networking_setup/","text":"Create VPC aws ec2 create-vpc --cidr-block 10.0.0.0/16 Enter VPC Id from output: aws ec2 modify-vpc-attribute --enable-dns-hostnames --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-tags --resources vpc-XXXXXXXXXXXX --tags Key=Name,Value=cloudhsm-vpc Create protected subnets aws ec2 describe-availability-zones --region us-east-1 aws ec2 create-subnet --availability-zone us-east-1a --cidr-block 10.0.0.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1b --cidr-block 10.0.1.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1c --cidr-block 10.0.2.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1d --cidr-block 10.0.3.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1e --cidr-block 10.0.4.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1f --cidr-block 10.0.5.0/24 --vpc-id vpc-XXXXXXXXXXXX Create private subnets aws ec2 create-subnet --availability-zone us-east-1a --cidr-block 10.0.128.0/24 --vpc-id vpc-XXXXXXXXXXXX Enter Subnet Id from output: aws ec2 create-subnet --availability-zone us-east-1b --cidr-block 10.0.129.0/24 --vpc-id vpc-XXXXXXXXXXXX Enter Subnet Id from output: Tag private subnets aws ec2 create-tags --resources subnet-XXXXXXXXXXXX --tags Key=Name,Value=private-subnet-us-east-1a aws ec2 create-tags --resources subnet-XXXXXXXXXXXX --tags Key=Name,Value=private-subnet-us-east-1b Create Security Groups for VPC Endpoints aws ec2 create-security-group --group-name vpc-endpoints --description \"For communication with VPC Endpoints\" --vpc-id vpc-XXXXXXXXXXXX Enter Security Group Id from output: aws ec2 authorize-security-group-ingress --group-id sg-XXXXXXXXXXXX --cidr '10.0.0.0/16' --protocol tcp --port 443 Create VPC Endpoints to manage EC2 instances through Session Manager aws ec2 describe-vpc-endpoint-services aws ec2 create-vpc-endpoint --vpc-endpoint-type Interface --private-dns-enabled --service-name com.amazonaws.us-east-1.ec2 --security-group-ids sg-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX --subnet-ids subnet-XXXXXXXXXXXX vpc-XXXXXXXXXXXX aws ec2 create-vpc-endpoint --vpc-endpoint-type Interface --private-dns-enabled --service-name com.amazonaws.us-east-1.ec2messages --security-group-ids sg-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX --subnet-ids subnet-XXXXXXXXXXXX vpc-XXXXXXXXXXXX aws ec2 create-vpc-endpoint --vpc-endpoint-type Interface --private-dns-enabled --service-name com.amazonaws.us-east-1.ssm --security-group-ids sg-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX --subnet-ids subnet-XXXXXXXXXXXX vpc-XXXXXXXXXXXX aws ec2 create-vpc-endpoint --vpc-endpoint-type Interface --private-dns-enabled --service-name com.amazonaws.us-east-1.ssmmessages --security-group-ids sg-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX --subnet-ids subnet-XXXXXXXXXXXX vpc-XXXXXXXXXXXX Create public subnets aws ec2 create-subnet --availability-zone us-east-1a --cidr-block 10.0.192.0/24 --vpc-id vpc-XXXXXXXXXXXX Enter Subnet Id from output: aws ec2 create-subnet --availability-zone us-east-1b --cidr-block 10.0.193.0/24 --vpc-id vpc-XXXXXXXXXXXX Enter Subnet Id from output: aws ec2 create-tags --resources subnet-XXXXXXXXXXXX --tags Key=Name,Value=public-subnet-us-east-1a aws ec2 create-tags --resources subnet-XXXXXXXXXXXX --tags Key=Name,Value=public-subnet-us-east-1b Create and attach internet gateway to VPC aws ec2 create-internet-gateway Enter Subnet Id from output: aws ec2 attach-internet-gateway --internet-gateway-id igw-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX Set Subnets for auto public IP assignment aws ec2 modify-subnet-attribute --map-public-ip-on-launch --subnet-id subnet-XXXXXXXXXXXX aws ec2 modify-subnet-attribute --map-public-ip-on-launch --subnet-id subnet-XXXXXXXXXXXX Allocate Elastic IP and create NAT Gateway aws ec2 allocate-address Enter Elastic IP Id from output: aws ec2 create-nat-gateway --allocation-id subnet-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX Enter NAT Gateway Id from output: Create Route Table for public subnet aws ec2 create-route-table --vpc-id vpc-XXXXXXXXXXXX Enter Route Table Id from output: aws ec2 create-tags --resources rtb-XXXXXXXXXXXX --tags Key=Name,Value=public-route-table aws ec2 create-route --destination-cidr-block 0.0.0.0/0 --gateway-id igw-XXXXXXXXXXXX --route-table-id rtb-XXXXXXXXXXXX aws ec2 associate-route-table --route-table-id rtb-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX aws ec2 associate-route-table --route-table-id rtb-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX Create Route Table for private subnet aws ec2 create-route-table --vpc-id vpc-XXXXXXXXXXXX Enter Route Table Id from output: aws ec2 create-tags --resources rtb-XXXXXXXXXXXX --tags Key=Name,Value=private-route-table aws ec2 create-route --destination-cidr-block 0.0.0.0/0 --nat-gateway-id nat-XXXXXXXXXXXX --route-table-id rtb-XXXXXXXXXXXX aws ec2 associate-route-table --route-table-id rtb-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX aws ec2 associate-route-table --route-table-id rtb-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX","title":"Networking setup"},{"location":"networking_setup/#create-vpc","text":"aws ec2 create-vpc --cidr-block 10.0.0.0/16 Enter VPC Id from output: aws ec2 modify-vpc-attribute --enable-dns-hostnames --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-tags --resources vpc-XXXXXXXXXXXX --tags Key=Name,Value=cloudhsm-vpc","title":"Create VPC"},{"location":"networking_setup/#create-protected-subnets","text":"aws ec2 describe-availability-zones --region us-east-1 aws ec2 create-subnet --availability-zone us-east-1a --cidr-block 10.0.0.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1b --cidr-block 10.0.1.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1c --cidr-block 10.0.2.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1d --cidr-block 10.0.3.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1e --cidr-block 10.0.4.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1f --cidr-block 10.0.5.0/24 --vpc-id vpc-XXXXXXXXXXXX","title":"Create protected subnets"},{"location":"networking_setup/#create-private-subnets","text":"aws ec2 create-subnet --availability-zone us-east-1a --cidr-block 10.0.128.0/24 --vpc-id vpc-XXXXXXXXXXXX Enter Subnet Id from output: aws ec2 create-subnet --availability-zone us-east-1b --cidr-block 10.0.129.0/24 --vpc-id vpc-XXXXXXXXXXXX Enter Subnet Id from output:","title":"Create private subnets"},{"location":"networking_setup/#tag-private-subnets","text":"aws ec2 create-tags --resources subnet-XXXXXXXXXXXX --tags Key=Name,Value=private-subnet-us-east-1a aws ec2 create-tags --resources subnet-XXXXXXXXXXXX --tags Key=Name,Value=private-subnet-us-east-1b","title":"Tag private subnets"},{"location":"networking_setup/#create-security-groups-for-vpc-endpoints","text":"aws ec2 create-security-group --group-name vpc-endpoints --description \"For communication with VPC Endpoints\" --vpc-id vpc-XXXXXXXXXXXX Enter Security Group Id from output: aws ec2 authorize-security-group-ingress --group-id sg-XXXXXXXXXXXX --cidr '10.0.0.0/16' --protocol tcp --port 443","title":"Create Security Groups for VPC Endpoints"},{"location":"networking_setup/#create-vpc-endpoints-to-manage-ec2-instances-through-session-manager","text":"aws ec2 describe-vpc-endpoint-services aws ec2 create-vpc-endpoint --vpc-endpoint-type Interface --private-dns-enabled --service-name com.amazonaws.us-east-1.ec2 --security-group-ids sg-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX --subnet-ids subnet-XXXXXXXXXXXX vpc-XXXXXXXXXXXX aws ec2 create-vpc-endpoint --vpc-endpoint-type Interface --private-dns-enabled --service-name com.amazonaws.us-east-1.ec2messages --security-group-ids sg-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX --subnet-ids subnet-XXXXXXXXXXXX vpc-XXXXXXXXXXXX aws ec2 create-vpc-endpoint --vpc-endpoint-type Interface --private-dns-enabled --service-name com.amazonaws.us-east-1.ssm --security-group-ids sg-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX --subnet-ids subnet-XXXXXXXXXXXX vpc-XXXXXXXXXXXX aws ec2 create-vpc-endpoint --vpc-endpoint-type Interface --private-dns-enabled --service-name com.amazonaws.us-east-1.ssmmessages --security-group-ids sg-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX --subnet-ids subnet-XXXXXXXXXXXX vpc-XXXXXXXXXXXX","title":"Create VPC Endpoints to manage EC2 instances through Session Manager"},{"location":"networking_setup/#create-public-subnets","text":"aws ec2 create-subnet --availability-zone us-east-1a --cidr-block 10.0.192.0/24 --vpc-id vpc-XXXXXXXXXXXX Enter Subnet Id from output: aws ec2 create-subnet --availability-zone us-east-1b --cidr-block 10.0.193.0/24 --vpc-id vpc-XXXXXXXXXXXX Enter Subnet Id from output: aws ec2 create-tags --resources subnet-XXXXXXXXXXXX --tags Key=Name,Value=public-subnet-us-east-1a aws ec2 create-tags --resources subnet-XXXXXXXXXXXX --tags Key=Name,Value=public-subnet-us-east-1b","title":"Create public subnets"},{"location":"networking_setup/#create-and-attach-internet-gateway-to-vpc","text":"aws ec2 create-internet-gateway Enter Subnet Id from output: aws ec2 attach-internet-gateway --internet-gateway-id igw-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX","title":"Create and attach internet gateway to VPC"},{"location":"networking_setup/#set-subnets-for-auto-public-ip-assignment","text":"aws ec2 modify-subnet-attribute --map-public-ip-on-launch --subnet-id subnet-XXXXXXXXXXXX aws ec2 modify-subnet-attribute --map-public-ip-on-launch --subnet-id subnet-XXXXXXXXXXXX","title":"Set Subnets for auto public IP assignment"},{"location":"networking_setup/#allocate-elastic-ip-and-create-nat-gateway","text":"aws ec2 allocate-address Enter Elastic IP Id from output: aws ec2 create-nat-gateway --allocation-id subnet-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX Enter NAT Gateway Id from output:","title":"Allocate Elastic IP and create NAT Gateway"},{"location":"networking_setup/#create-route-table-for-public-subnet","text":"aws ec2 create-route-table --vpc-id vpc-XXXXXXXXXXXX Enter Route Table Id from output: aws ec2 create-tags --resources rtb-XXXXXXXXXXXX --tags Key=Name,Value=public-route-table aws ec2 create-route --destination-cidr-block 0.0.0.0/0 --gateway-id igw-XXXXXXXXXXXX --route-table-id rtb-XXXXXXXXXXXX aws ec2 associate-route-table --route-table-id rtb-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX aws ec2 associate-route-table --route-table-id rtb-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX","title":"Create Route Table for public subnet"},{"location":"networking_setup/#create-route-table-for-private-subnet","text":"aws ec2 create-route-table --vpc-id vpc-XXXXXXXXXXXX Enter Route Table Id from output: aws ec2 create-tags --resources rtb-XXXXXXXXXXXX --tags Key=Name,Value=private-route-table aws ec2 create-route --destination-cidr-block 0.0.0.0/0 --nat-gateway-id nat-XXXXXXXXXXXX --route-table-id rtb-XXXXXXXXXXXX aws ec2 associate-route-table --route-table-id rtb-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX aws ec2 associate-route-table --route-table-id rtb-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX","title":"Create Route Table for private subnet"},{"location":"website/","text":"Creando un Website cifrado con TLS usando llaves del CloudHSM 1. Cree un usuario para el servidor web y comparta llave privada (detalles) 1.1. Abra en una nueva pesta\u00f1a o ventana del navegador del AWS CloudWatch en la terminal de la instancia 1.2. Seleccione el Logs en el menu lateral 1.3. Haga click en el \"Log Group\" con el nombre /aws/cloudhsm/cluster-<cluster_id> y despu\u00e9s en Search Log Group 1.4. Filtre los logs por el evento de generaci\u00f3n de par de llaves CN_GENERATE_KEY_PAIR 1.5. Haga click en la flecha para expandir los logs Entre el Key Handle de la llave privada generada con openssl: 1.6. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 1.7. Entre en el agente de administraci\u00f3n del cluster con el comando: ./cloudhsm_mgmt_util.sh 1.8. Login loginHSM CO admin defaultPassword 1.9. Cree un nuevo usuario para el servidor web createUser CU webserver1 defaultPassword 1.10. Tome nota del numero de usuario para compartirle la llave en un paso posterior listUsers Entre el User ID del usuario webserver1 : 1.11. Haga logout del CloudHSM como usuario Crypto Officer admin: logoutHSM 1.12. Haga login al CloudHSM como el usuario user1 que es administrador de la llave que sera compartida: loginHSM CU user1 defaultPassword 1.13. Comparta la llave privada con el usuario webserver1 con el comando: shareKey <public key handle> <webserver1 user id> 1 1.14. Ahora intentemos exportar la llave como el usuario webserver1. Para eso generaremos una llava para wrapping con el comando: /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s webserver1 -p defaultPassword genSymKey -t 31 -s 32 -l wrappingKey Entre el Key Handle de la llave generada: 1.15. Y intente exportar la llave con el comando: /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s webserver1 -p defaultPassword exportPrivateKey -k <openssl priv key handle> -w <wrapping key handle> -out webserver_priv.key El CloudHSM no permitir\u00e1 exportar essa llave pues el usuario webserver1 no es administrador de la llave, apenas la tiene compartida para operaciones de cifrado con ella. 2. Cree un servidor web usando la llave en el CloudHSM (detalles) 2.1. Vuelva a pesta\u00f1a o ventana del navegador del AWS EC2 2.2. Haga click en Launch Instance 2.3. Seleccione la AMI Amazon Linux 2 AMI haciendo click en Select en la linea que corresponde 2.4. Deje seleccionado el tipo de instancia t2.micro y haga click en Next: Configure Instance Details 2.5. En la opci\u00f3n Network elija la VPC con nombre cloudhsm-vpc 2.6. En la opci\u00f3n Subnet elija la Subnet con nombre public-subnet-us-east-1a 2.7. En IAM role seleccione el perfil EC2-SSM+S3Crypto y haga click en Next: Add Storage 2.8. Haga click en Next: Add Tags 2.9. Haga click en Add Tag , en el campo \"Key\" llene con Name y en el campo \"Value\" llene con webserver1 2.10. Haga click en Next: Configure Security Group 2.11. Deje Create a new security group seleccionado y en \"Security group name\" llene con webserver1-sg 2.12. Borre la linea de configuraci\u00f3n de acceso SSH haciendo click en el icono X 2.13. Haga click en Add Rule , en el campo \"Type\" seleccione HTTPS y deje los otros campos con el valor por defecto 2.14. Haga click en Review and Launch y despu\u00e9s en Launch 2.15. Remplaze la opci\u00f3n \"Choose an existing key pair\" por Proceed without a key pair 2.16. Seleccione I acknowledge that I will not (...) y haga click en Launch Instance 2.17. Haga click en View Instances 2.18. Seleccione la instancia con nombre webserver1 2.19. Haga click en Actions , seleccione Networking y haga click en Change Security Groups 2.20. Deje seleccionado el Security Group webserver1-sg y seleccione tambi\u00e9n el grupo **cloudhsm-cluster-<cluster id>-sg 2.21. Haga click en Assign Security Groups 2.22. Tome nota de la direcci\u00f3n IP publica en IPv4 Public IP Entre el IP Address : 3. Haga la configuraci\u00f3n del webserver1 (detalles) Entre el **user id** o valor aleatorio usado anteriormente: <input type=\"text\" id=\"user-id\" onkeyup=\"copyval(this);\"/><br> Entre el **HSM IP Address**: <input type=\"text\" id=\"cloudhsm-ip\" onkeyup=\"copyval(this);\"/><br> 3.1. Vuelva a pesta\u00f1a o ventana del navegador del AWS Systems Manager 3.2. Haga click en Start session 3.3. Seleccione el webserver1 y haga click en Start session 3.4. Haga click en la terminal y digite: cd <enter> 3.5. Actualize el software del Sistema Operativo y instale las librerias de CloudHSM y nginx sudo yum update -y wget https://s3.amazonaws.com/cloudhsmv2-software/CloudHsmClient/EL7/cloudhsm-client-latest.el7.x86_64.rpm wget https://s3.amazonaws.com/cloudhsmv2-software/CloudHsmClient/EL7/cloudhsm-client-dyn-latest.el7.x86_64.rpm sudo yum install ./cloudhsm-client-latest.el7.x86_64.rpm -y sudo yum install -y ./cloudhsm-client-dyn-latest.el7.x86_64.rpm sudo amazon-linux-extras install nginx1.12 -y 3.6. Configure el cliente del CloudHSM con los comandos: sudo aws s3 cp s3://crypto- <su_user_id> /customerCA.crt /opt/cloudhsm/etc/customerCA.crt sudo /opt/cloudhsm/bin/configure -a <su_user_id> sudo systemctl start cloudhsm-client 3.7. Cree una carpeta y copie los archivos de certificados y llaves necesarios desde el bucket S3 con los comandos: sudo mkdir -p /etc/pki/nginx/private sudo aws s3 cp s3://crypto- <su_user_id> /fake_pem.key /etc/pki/nginx/private/server.key sudo aws s3 cp s3://crypto- <su_user_id> /webserver.crt /etc/pki/nginx/server.crt 3.8. Cambie la configuraci\u00f3n de permisos del archivo de llaves fake: sudo chown nginx /etc/pki/nginx/server.crt /etc/pki/nginx/private/server.key 3.9. Cambie el archivo de configuraci\u00f3n del nginx para usar el engine de CloudHSM sudo sed -i '5issl_engine cloudhsm;' /etc/nginx/nginx.conf 3.10. Remueva los comantarios de la secci\u00f3n del servicio HTTPS del nginx: sudo nano /etc/nginx/nginx.conf Baje hasta la linea siguiente a # Settings for a TLS enabled server. y usando Ctrl+d para quitar los caracteres \"#\". Para grabar use Ctrl+s y para salir Ctrl+x 3.11. Cambie los archivos de configuraci\u00f3n del nginx con los comandos: sudo sed -i '11iEnvironmentFile=/etc/sysconfig/nginx' /lib/systemd/system/nginx.service echo 'n3fips_password=webserver1:defaultPassword' | sudo tee -a /etc/sysconfig/nginx 3.12. Inicie el servicio nginx sudo systemctl start nginx 3.13. Pruebe si el servicio funciona correctamente en https:// <instance Public IP> 3.14. Accepte el certificado digital auto-firmado haciendo click en Advanced... y Accept the Risk and Continue","title":"Website"},{"location":"website/#creando-un-website-cifrado-con-tls-usando-llaves-del-cloudhsm","text":"","title":"Creando un Website cifrado con TLS usando llaves del CloudHSM"},{"location":"website/#1-cree-un-usuario-para-el-servidor-web-y-comparta-llave-privada","text":"(detalles) 1.1. Abra en una nueva pesta\u00f1a o ventana del navegador del AWS CloudWatch en la terminal de la instancia 1.2. Seleccione el Logs en el menu lateral 1.3. Haga click en el \"Log Group\" con el nombre /aws/cloudhsm/cluster-<cluster_id> y despu\u00e9s en Search Log Group 1.4. Filtre los logs por el evento de generaci\u00f3n de par de llaves CN_GENERATE_KEY_PAIR 1.5. Haga click en la flecha para expandir los logs Entre el Key Handle de la llave privada generada con openssl: 1.6. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 1.7. Entre en el agente de administraci\u00f3n del cluster con el comando: ./cloudhsm_mgmt_util.sh 1.8. Login loginHSM CO admin defaultPassword 1.9. Cree un nuevo usuario para el servidor web createUser CU webserver1 defaultPassword 1.10. Tome nota del numero de usuario para compartirle la llave en un paso posterior listUsers Entre el User ID del usuario webserver1 : 1.11. Haga logout del CloudHSM como usuario Crypto Officer admin: logoutHSM 1.12. Haga login al CloudHSM como el usuario user1 que es administrador de la llave que sera compartida: loginHSM CU user1 defaultPassword 1.13. Comparta la llave privada con el usuario webserver1 con el comando: shareKey <public key handle> <webserver1 user id> 1 1.14. Ahora intentemos exportar la llave como el usuario webserver1. Para eso generaremos una llava para wrapping con el comando: /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s webserver1 -p defaultPassword genSymKey -t 31 -s 32 -l wrappingKey Entre el Key Handle de la llave generada: 1.15. Y intente exportar la llave con el comando: /opt/cloudhsm/bin/key_mgmt_util singlecmd loginHSM -u CU -s webserver1 -p defaultPassword exportPrivateKey -k <openssl priv key handle> -w <wrapping key handle> -out webserver_priv.key El CloudHSM no permitir\u00e1 exportar essa llave pues el usuario webserver1 no es administrador de la llave, apenas la tiene compartida para operaciones de cifrado con ella.","title":"1. Cree un usuario para el servidor web y comparta llave privada"},{"location":"website/#2-cree-un-servidor-web-usando-la-llave-en-el-cloudhsm","text":"(detalles) 2.1. Vuelva a pesta\u00f1a o ventana del navegador del AWS EC2 2.2. Haga click en Launch Instance 2.3. Seleccione la AMI Amazon Linux 2 AMI haciendo click en Select en la linea que corresponde 2.4. Deje seleccionado el tipo de instancia t2.micro y haga click en Next: Configure Instance Details 2.5. En la opci\u00f3n Network elija la VPC con nombre cloudhsm-vpc 2.6. En la opci\u00f3n Subnet elija la Subnet con nombre public-subnet-us-east-1a 2.7. En IAM role seleccione el perfil EC2-SSM+S3Crypto y haga click en Next: Add Storage 2.8. Haga click en Next: Add Tags 2.9. Haga click en Add Tag , en el campo \"Key\" llene con Name y en el campo \"Value\" llene con webserver1 2.10. Haga click en Next: Configure Security Group 2.11. Deje Create a new security group seleccionado y en \"Security group name\" llene con webserver1-sg 2.12. Borre la linea de configuraci\u00f3n de acceso SSH haciendo click en el icono X 2.13. Haga click en Add Rule , en el campo \"Type\" seleccione HTTPS y deje los otros campos con el valor por defecto 2.14. Haga click en Review and Launch y despu\u00e9s en Launch 2.15. Remplaze la opci\u00f3n \"Choose an existing key pair\" por Proceed without a key pair 2.16. Seleccione I acknowledge that I will not (...) y haga click en Launch Instance 2.17. Haga click en View Instances 2.18. Seleccione la instancia con nombre webserver1 2.19. Haga click en Actions , seleccione Networking y haga click en Change Security Groups 2.20. Deje seleccionado el Security Group webserver1-sg y seleccione tambi\u00e9n el grupo **cloudhsm-cluster-<cluster id>-sg 2.21. Haga click en Assign Security Groups 2.22. Tome nota de la direcci\u00f3n IP publica en IPv4 Public IP Entre el IP Address :","title":"2. Cree un servidor web usando la llave en el CloudHSM"},{"location":"website/#3-haga-la-configuracion-del-webserver1","text":"(detalles) Entre el **user id** o valor aleatorio usado anteriormente: <input type=\"text\" id=\"user-id\" onkeyup=\"copyval(this);\"/><br> Entre el **HSM IP Address**: <input type=\"text\" id=\"cloudhsm-ip\" onkeyup=\"copyval(this);\"/><br> 3.1. Vuelva a pesta\u00f1a o ventana del navegador del AWS Systems Manager 3.2. Haga click en Start session 3.3. Seleccione el webserver1 y haga click en Start session 3.4. Haga click en la terminal y digite: cd <enter> 3.5. Actualize el software del Sistema Operativo y instale las librerias de CloudHSM y nginx sudo yum update -y wget https://s3.amazonaws.com/cloudhsmv2-software/CloudHsmClient/EL7/cloudhsm-client-latest.el7.x86_64.rpm wget https://s3.amazonaws.com/cloudhsmv2-software/CloudHsmClient/EL7/cloudhsm-client-dyn-latest.el7.x86_64.rpm sudo yum install ./cloudhsm-client-latest.el7.x86_64.rpm -y sudo yum install -y ./cloudhsm-client-dyn-latest.el7.x86_64.rpm sudo amazon-linux-extras install nginx1.12 -y 3.6. Configure el cliente del CloudHSM con los comandos: sudo aws s3 cp s3://crypto- <su_user_id> /customerCA.crt /opt/cloudhsm/etc/customerCA.crt sudo /opt/cloudhsm/bin/configure -a <su_user_id> sudo systemctl start cloudhsm-client 3.7. Cree una carpeta y copie los archivos de certificados y llaves necesarios desde el bucket S3 con los comandos: sudo mkdir -p /etc/pki/nginx/private sudo aws s3 cp s3://crypto- <su_user_id> /fake_pem.key /etc/pki/nginx/private/server.key sudo aws s3 cp s3://crypto- <su_user_id> /webserver.crt /etc/pki/nginx/server.crt 3.8. Cambie la configuraci\u00f3n de permisos del archivo de llaves fake: sudo chown nginx /etc/pki/nginx/server.crt /etc/pki/nginx/private/server.key 3.9. Cambie el archivo de configuraci\u00f3n del nginx para usar el engine de CloudHSM sudo sed -i '5issl_engine cloudhsm;' /etc/nginx/nginx.conf 3.10. Remueva los comantarios de la secci\u00f3n del servicio HTTPS del nginx: sudo nano /etc/nginx/nginx.conf Baje hasta la linea siguiente a # Settings for a TLS enabled server. y usando Ctrl+d para quitar los caracteres \"#\". Para grabar use Ctrl+s y para salir Ctrl+x 3.11. Cambie los archivos de configuraci\u00f3n del nginx con los comandos: sudo sed -i '11iEnvironmentFile=/etc/sysconfig/nginx' /lib/systemd/system/nginx.service echo 'n3fips_password=webserver1:defaultPassword' | sudo tee -a /etc/sysconfig/nginx 3.12. Inicie el servicio nginx sudo systemctl start nginx 3.13. Pruebe si el servicio funciona correctamente en https:// <instance Public IP> 3.14. Accepte el certificado digital auto-firmado haciendo click en Advanced... y Accept the Risk and Continue","title":"3. Haga la configuraci\u00f3n del webserver1"}]}