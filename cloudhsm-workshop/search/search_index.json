{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Lab Steps 1. Networking Environment Setup 2. Initialize the CloudHSM Cluster 3. Create Symmetric and Asymetric Keys 4. Create a Website using CloudHSM to store TLS Keys","title":"Inicio"},{"location":"#lab-steps","text":"1. Networking Environment Setup 2. Initialize the CloudHSM Cluster 3. Create Symmetric and Asymetric Keys 4. Create a Website using CloudHSM to store TLS Keys","title":"Lab Steps"},{"location":"cluster_init/","text":"Inicializaci\u00f3n del Cluster En este laborat\u00f3rio se har\u00e1 la inicializaci\u00f3n de un cluster de CloudHSM. 1. Cree una VPC (detalles) 1.1. En un navegador, abra el sitio 1.2. Haga click en Raw e descargue el archivo a su maquina con el nombre cloudhsm-landing-zone.json. 1.3. Abra la Consola de AWS, en el servicio CloudFormation. 1.4. Implemente el ambiente de inicio usando el servicio CloudFormation con el archivo descargado. 1.5. Tome nota del VPC Id que fue creado, y de las 6 subnets 2. Cree un cluster (detalles) 2.1. En una nueva pesta\u00f1a o ventana del navegador, abra la consola de AWS en el servicio AWS CloudHSM en la regi\u00f3n de N. Virginia 2.2. Haga click en Create cluster , y usando los Ids del VPC y las subnets, elija los parametros adecuados 2.3. Deje la opci\u00f3n Create new cluster seleccionada y haga click en Next: Review y despu\u00e9s en Create cluster 2.4. La creaci\u00f3n del cluster puede llevar hasta 10 minutos. Siga con la proxima etapa mientras el proceso sigue. 3. Cree un bucket S3 para almacenamiento de objetos (detalles) 3.1. En una nueva pesta\u00f1a o ventana del navegador, abra la consola de AWS en el servicio Amazon S3 3.2. Haga click en Create bucket 3.2. En Bucket name llene con el nombre crypto-<su_userid> (los buckets tinen que tener nombres \u00fanicos globalmente) 3.2. Elija la regi\u00f3n US East (N. Virginia) 3.2. Haga click en Create 4. Cree una politica IAM de acceso al bucket S3 creado anteriormente (detalles) 4.1. En una nueva pesta\u00f1a o ventana del navegador, abra la consola de AWS, en el servicio Amazon IAM 4.2. Haga click en Policies en el menu lateral y despu\u00e9s en Create policy 4.3. Haga click en Choose a service , filtre por S3 haga click en S3 4.4. Seleccione All S3 actions (s3:*) 4.5. Haga click Resources y despues en Add ARN del item bucket 4.6. En Bucket name llene con el nombre del bucket creado anteriormente ( crypto-<su_userid> ) y haga click en Add 4.7. Haga click en Add ARN del item object 4.8. En Bucket name llene con el nombre del bucket creado anteriormente ( crypto-<su_userid> ) 4.9. En Object name seleccione Any y haga click en Add 4.10. Haga click en Review policy 4.11. En Name llene con el nombre S3CryptoBucket y despu\u00e9s en Create policy 5. Cree un role IAM para instancias EC2 gestionadas por el SSM Systems Manager (detalles) 5.1. A\u00fan en la consola del servicio Amazon IAM 5.2. Haga click en Roles en el menu lateral y despu\u00e9s en Create role 5.3. Haga click en EC2 y despu\u00e9s en Next: Permissions 5.4. Filtre las politicas por ssm y elija la politica AmazonEC2RoleforSSM 5.5. Filtre de nuevo por cloudhsm y elija la politica AWSCloudHSMFullAccess 5.6. Filtre de nuevo por s3 y elija la politica creada en la etapa anterior S3CryptoBucket 5.7. Haga click en Next: Tags y despu\u00e9s en Next: Review 5.8. En Role name llene con el nombre EC2-SSM+S3Crypto y haga click en Create role 6. Cree un CloudHSM en el cluster (detalles) 6.1. Vuelva a la pesta\u00f1a del servicio AWS CloudHSM 6.2. Cuando el estado del cluster figure Uninitialized , haga click en Initialize 6.3. Cree un nuvo CloudHSM en el cluster, seleccionando la subnet en la AZ us-east-1a y haciendo click en Create (Si recibes el mensaje \"CreateHsm request failed\", elija la siguiente AZ - b, c...) 6.4. El processo de creaci\u00f3n de un nuevo CloudHSM en el cluster puede llevar cerca de 5 minutos. Siga a la proxima etapa mientras el proceso sigue. 7. Cree una instancia EC2 para gesti\u00f3n del CloudHSM (detalles) 7.1. Abra la consola AWS el servicio Amazon EC2 . 7.2. Haga click en Running Instances y despu\u00e9s en Launch Instance . 7.3. Selecci\u00f3ne la versi\u00f3n de Sistema Operativo Amazon Linux 2 AMI (64-bit x86) haciendo click en Select al lado de esta versi\u00f3n de AMI. 7.4. En el tipo de instancia, dele seleccionado t2.micro y haga click en Next: Configure Instance Details 7.5. En Network elija la VPC con nombre cloudhsm-vpc 7.6. En Subnet elija la subnet private-subnet-us-east-1b (o preferencialmente la de la regi\u00f3n donde fue creado el CloudHSM) 7.7. En IAM role elija el perfil creado anteriormente EC2-SSM+S3Crypto y haga click en Next: Add Storage 7.8. Haga click en Next Add Tags y despu\u00e9s en Add Tag 7.9. En el campo Key llene con Name y en el campo Value llene con el nombre cloudhsm-mgmt 7.10. Haga click en Next: Configure Security Group 7.11. Deje seleccionado Create a new security group 7.12. En Security group name llene con el nombre cloudhsm-mgmt-sg 7.13. En Description llene con CloudHSM Management Group 7.14. Borre la configuraci\u00f3n de SSH haciendo click en el X al fin de la linea de configuraci\u00f3n 7.15. Haga click en Review and Launch y despu\u00e9s en Launch 7.16. Remplaze la opci\u00f3n \"Choose an existing key pair\" por Proceed without a key pair 7.17. Seleccione I acknowledge that I will not (...) y haga click en Launch Instance 8. Descargue el CSR y lo deje disponible para firmar en el bucket S3 (detalles) 8.1. Vuelva a la pesta\u00f1a o ventana del navegador en el servicio AWS CloudHSM 8.2. Descargue el archivo para firmar el certificado del cluster, haciendo click en Cluster CSR y grabelo en tu laptop 8.3. Vuelva a la pesta\u00f1a o ventana del navegador en el servicio S3 8.4. Haga click en el bucket creado anteriormente crypto-<su_userid> 8.5. Haga click en Upload y despues en Add files 8.6. Elija el archivo con el CSR descargado anteriormente (archivo con un nombre parecido a cluster-5xr767yr3wr_ClusterCsr.csr ) 8.7. Haga click en Upload 9. Use la instancia de gesti\u00f3n para firmar el CSR (detalles) 9.1. Abra una nueva pesta\u00f1a o ventana del navegador en el servicio AWS Systems Manager 9.2. En el menu lateral, haga click Session Manager 9.3. Haga click en Start session 9.4. Seleccione la instancia con nombre cloudhsm-mgmt y haga click en Start session 9.5. Una nueva pesta\u00f1a se abrir\u00e1, haga click en la ventana y ejecute cd <enter> 9.6. Ejecute los comandos: sudo yum update -y wget https://s3.amazonaws.com/cloudhsmv2-software/CloudHsmClient/EL6/cloudhsm-client-latest.el6.x86_64.rpm sudo yum install ./cloudhsm-client-latest.el6.x86_64.rpm -y sudo yum install jq -y aws configure 9.7. No cambie las configuraciones est\u00e1ndar AWS Access Key ID y AWS Secret Access Key 9.8. En la opci\u00f3n Default region name llene con us-east-1 9.9. No cambie las configuracion est\u00e1ndar Default output format 9.10. Ejecute los comandos: aws s3 cp s3://crypto-<su_userid>/cluster-<id_del_cluster>_ClusterCsr.csr . 9.11. Crea un par de llaves y un certificado root con los comandos: openssl genrsa -aes256 -out customerCA.key 2048 9.12. Elija un pass phrase para las llaves openssl req -new -x509 -days 3652 -key customerCA.key -out customerCA.crt 9.12. Use el pass phrase creado anteriormente y elija las opciones que quiera para las preguntas que siguen 9.13. Firme el CSR con el comando: openssl x509 -req -days 3652 -in cluster-<id_del_cluster>_ClusterCsr.csr \\ -CA customerCA.crt \\ -CAkey customerCA.key \\ -CAcreateserial \\ -out CustomerHsmCertificate.crt 9.14. Use el pass phrase creado anteriormente 9.15. Inicialice el cluster con el comando: aws cloudhsmv2 initialize-cluster --cluster-id cluster-<cluster_id> \\ --signed-cert file://CustomerHsmCertificate.crt \\ --trust-anchor file://customerCA.crt 9.16. Vuelva a la pesta\u00f1a o ventana del navegador en el servicio AWS CloudHSM 9.17. Haga click en el bot\u00f3n de refrescar y vea que el status del cluster esta en Initialize in progress 9.19. El processo de inicializaci\u00f3n del cluster puede llevar cerca de 5 minutos. Siga a la proxima etapa mientras el proceso sigue. 10. Use el cliente de CloudHSM para conectar al cluster (detalles) 10.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 10.2. Configure el cliente con el comando: sudo cp customerCA.crt /opt/cloudhsm/etc/customerCA.crt 10.3. echo '#!/bin/sh' >> cloudhsm_mgmt_util.sh echo '/opt/cloudhsm/bin/cloudhsm_mgmt_util /opt/cloudhsm/etc/cloudhsm_mgmt_util.cfg' >> cloudhsm_mgmt_util.sh chmod +x cloudhsm_mgmt_util.sh ln -s /opt/cloudhsm/bin/key_mgmt_util key_mgmt_util 10.4. Vea la direcci\u00f3n IP del HSM en el cluster con el comando: aws cloudhsmv2 describe-clusters | jq '.Clusters[].Hsms[].EniIp' 10.5. Use la direcci\u00f3n IP del HSM para configurar el agente con el comando sudo /opt/cloudhsm/bin/configure -a <IP address> 10.6. Lanze el agente de gesti\u00f3n del CloudHSM con el comando: ./cloudhsm_mgmt_util.sh 10.7. En ese momento no vas a poder conectar pues faltan las reglas de firewall (Security Groups) para acceder al CloudHSM. Lo haremos en el paso siguiente 11. Configure las reglas de firewall para conectar al CloudHSM (detalles) 11.1. Vuelva a la pesta\u00f1a o ventana del navegador en el servicio AWS EC2 11.2. En el menu lateral haga click en Instances 11.3. Seleccione la instancia con nombre cloudhsm-mgmt 11.4. Haga click en Actions y debajo de Networking haga click en Change Security Groups 11.5. Seleccione un Security Group adicional con \"Group Name\" parecido a cloudhsm-cluster-5xr767yr3wr-sg (generado automaticamente por el Cluster) 11.6. Haga click en Assign Security Groups 11.7. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 11.8. Intente de nuevo conectar al HSM con el comando: ./cloudhsm_mgmt_util.sh 11.9. Vea los usuarios est\u00e1ndar en el sistema con el comando: listUsers 11.10. loginHSM PRECO admin password 11.11. changePswd PRECO admin 11.12. Do you want to continue(y/n)? -> y 11.13. listUsers 11.14. Use the \u201ccreateUser\u201c command to create a crypto user (CU). createUser CU user1 defaultPassword 11.15. quit","title":"Inicializaci\u00f3n del cluster"},{"location":"cluster_init/#inicializacion-del-cluster","text":"En este laborat\u00f3rio se har\u00e1 la inicializaci\u00f3n de un cluster de CloudHSM.","title":"Inicializaci\u00f3n del Cluster"},{"location":"cluster_init/#1-cree-una-vpc","text":"(detalles) 1.1. En un navegador, abra el sitio 1.2. Haga click en Raw e descargue el archivo a su maquina con el nombre cloudhsm-landing-zone.json. 1.3. Abra la Consola de AWS, en el servicio CloudFormation. 1.4. Implemente el ambiente de inicio usando el servicio CloudFormation con el archivo descargado. 1.5. Tome nota del VPC Id que fue creado, y de las 6 subnets","title":"1. Cree una VPC"},{"location":"cluster_init/#2-cree-un-cluster","text":"(detalles) 2.1. En una nueva pesta\u00f1a o ventana del navegador, abra la consola de AWS en el servicio AWS CloudHSM en la regi\u00f3n de N. Virginia 2.2. Haga click en Create cluster , y usando los Ids del VPC y las subnets, elija los parametros adecuados 2.3. Deje la opci\u00f3n Create new cluster seleccionada y haga click en Next: Review y despu\u00e9s en Create cluster 2.4. La creaci\u00f3n del cluster puede llevar hasta 10 minutos. Siga con la proxima etapa mientras el proceso sigue.","title":"2. Cree un cluster"},{"location":"cluster_init/#3-cree-un-bucket-s3-para-almacenamiento-de-objetos","text":"(detalles) 3.1. En una nueva pesta\u00f1a o ventana del navegador, abra la consola de AWS en el servicio Amazon S3 3.2. Haga click en Create bucket 3.2. En Bucket name llene con el nombre crypto-<su_userid> (los buckets tinen que tener nombres \u00fanicos globalmente) 3.2. Elija la regi\u00f3n US East (N. Virginia) 3.2. Haga click en Create","title":"3. Cree un bucket S3 para almacenamiento de objetos"},{"location":"cluster_init/#4-cree-una-politica-iam-de-acceso-al-bucket-s3-creado-anteriormente","text":"(detalles) 4.1. En una nueva pesta\u00f1a o ventana del navegador, abra la consola de AWS, en el servicio Amazon IAM 4.2. Haga click en Policies en el menu lateral y despu\u00e9s en Create policy 4.3. Haga click en Choose a service , filtre por S3 haga click en S3 4.4. Seleccione All S3 actions (s3:*) 4.5. Haga click Resources y despues en Add ARN del item bucket 4.6. En Bucket name llene con el nombre del bucket creado anteriormente ( crypto-<su_userid> ) y haga click en Add 4.7. Haga click en Add ARN del item object 4.8. En Bucket name llene con el nombre del bucket creado anteriormente ( crypto-<su_userid> ) 4.9. En Object name seleccione Any y haga click en Add 4.10. Haga click en Review policy 4.11. En Name llene con el nombre S3CryptoBucket y despu\u00e9s en Create policy","title":"4. Cree una politica IAM de acceso al bucket S3 creado anteriormente"},{"location":"cluster_init/#5-cree-un-role-iam-para-instancias-ec2-gestionadas-por-el-ssm-systems-manager","text":"(detalles) 5.1. A\u00fan en la consola del servicio Amazon IAM 5.2. Haga click en Roles en el menu lateral y despu\u00e9s en Create role 5.3. Haga click en EC2 y despu\u00e9s en Next: Permissions 5.4. Filtre las politicas por ssm y elija la politica AmazonEC2RoleforSSM 5.5. Filtre de nuevo por cloudhsm y elija la politica AWSCloudHSMFullAccess 5.6. Filtre de nuevo por s3 y elija la politica creada en la etapa anterior S3CryptoBucket 5.7. Haga click en Next: Tags y despu\u00e9s en Next: Review 5.8. En Role name llene con el nombre EC2-SSM+S3Crypto y haga click en Create role","title":"5. Cree un role IAM para instancias EC2 gestionadas por el SSM Systems Manager"},{"location":"cluster_init/#6-cree-un-cloudhsm-en-el-cluster","text":"(detalles) 6.1. Vuelva a la pesta\u00f1a del servicio AWS CloudHSM 6.2. Cuando el estado del cluster figure Uninitialized , haga click en Initialize 6.3. Cree un nuvo CloudHSM en el cluster, seleccionando la subnet en la AZ us-east-1a y haciendo click en Create (Si recibes el mensaje \"CreateHsm request failed\", elija la siguiente AZ - b, c...) 6.4. El processo de creaci\u00f3n de un nuevo CloudHSM en el cluster puede llevar cerca de 5 minutos. Siga a la proxima etapa mientras el proceso sigue.","title":"6. Cree un CloudHSM en el cluster"},{"location":"cluster_init/#7-cree-una-instancia-ec2-para-gestion-del-cloudhsm","text":"(detalles) 7.1. Abra la consola AWS el servicio Amazon EC2 . 7.2. Haga click en Running Instances y despu\u00e9s en Launch Instance . 7.3. Selecci\u00f3ne la versi\u00f3n de Sistema Operativo Amazon Linux 2 AMI (64-bit x86) haciendo click en Select al lado de esta versi\u00f3n de AMI. 7.4. En el tipo de instancia, dele seleccionado t2.micro y haga click en Next: Configure Instance Details 7.5. En Network elija la VPC con nombre cloudhsm-vpc 7.6. En Subnet elija la subnet private-subnet-us-east-1b (o preferencialmente la de la regi\u00f3n donde fue creado el CloudHSM) 7.7. En IAM role elija el perfil creado anteriormente EC2-SSM+S3Crypto y haga click en Next: Add Storage 7.8. Haga click en Next Add Tags y despu\u00e9s en Add Tag 7.9. En el campo Key llene con Name y en el campo Value llene con el nombre cloudhsm-mgmt 7.10. Haga click en Next: Configure Security Group 7.11. Deje seleccionado Create a new security group 7.12. En Security group name llene con el nombre cloudhsm-mgmt-sg 7.13. En Description llene con CloudHSM Management Group 7.14. Borre la configuraci\u00f3n de SSH haciendo click en el X al fin de la linea de configuraci\u00f3n 7.15. Haga click en Review and Launch y despu\u00e9s en Launch 7.16. Remplaze la opci\u00f3n \"Choose an existing key pair\" por Proceed without a key pair 7.17. Seleccione I acknowledge that I will not (...) y haga click en Launch Instance","title":"7. Cree una instancia EC2 para gesti\u00f3n del CloudHSM"},{"location":"cluster_init/#8-descargue-el-csr-y-lo-deje-disponible-para-firmar-en-el-bucket-s3","text":"(detalles) 8.1. Vuelva a la pesta\u00f1a o ventana del navegador en el servicio AWS CloudHSM 8.2. Descargue el archivo para firmar el certificado del cluster, haciendo click en Cluster CSR y grabelo en tu laptop 8.3. Vuelva a la pesta\u00f1a o ventana del navegador en el servicio S3 8.4. Haga click en el bucket creado anteriormente crypto-<su_userid> 8.5. Haga click en Upload y despues en Add files 8.6. Elija el archivo con el CSR descargado anteriormente (archivo con un nombre parecido a cluster-5xr767yr3wr_ClusterCsr.csr ) 8.7. Haga click en Upload","title":"8. Descargue el CSR y lo deje disponible para firmar en el bucket S3"},{"location":"cluster_init/#9-use-la-instancia-de-gestion-para-firmar-el-csr","text":"(detalles) 9.1. Abra una nueva pesta\u00f1a o ventana del navegador en el servicio AWS Systems Manager 9.2. En el menu lateral, haga click Session Manager 9.3. Haga click en Start session 9.4. Seleccione la instancia con nombre cloudhsm-mgmt y haga click en Start session 9.5. Una nueva pesta\u00f1a se abrir\u00e1, haga click en la ventana y ejecute cd <enter> 9.6. Ejecute los comandos: sudo yum update -y wget https://s3.amazonaws.com/cloudhsmv2-software/CloudHsmClient/EL6/cloudhsm-client-latest.el6.x86_64.rpm sudo yum install ./cloudhsm-client-latest.el6.x86_64.rpm -y sudo yum install jq -y aws configure 9.7. No cambie las configuraciones est\u00e1ndar AWS Access Key ID y AWS Secret Access Key 9.8. En la opci\u00f3n Default region name llene con us-east-1 9.9. No cambie las configuracion est\u00e1ndar Default output format 9.10. Ejecute los comandos: aws s3 cp s3://crypto-<su_userid>/cluster-<id_del_cluster>_ClusterCsr.csr . 9.11. Crea un par de llaves y un certificado root con los comandos: openssl genrsa -aes256 -out customerCA.key 2048 9.12. Elija un pass phrase para las llaves openssl req -new -x509 -days 3652 -key customerCA.key -out customerCA.crt 9.12. Use el pass phrase creado anteriormente y elija las opciones que quiera para las preguntas que siguen 9.13. Firme el CSR con el comando: openssl x509 -req -days 3652 -in cluster-<id_del_cluster>_ClusterCsr.csr \\ -CA customerCA.crt \\ -CAkey customerCA.key \\ -CAcreateserial \\ -out CustomerHsmCertificate.crt 9.14. Use el pass phrase creado anteriormente 9.15. Inicialice el cluster con el comando: aws cloudhsmv2 initialize-cluster --cluster-id cluster-<cluster_id> \\ --signed-cert file://CustomerHsmCertificate.crt \\ --trust-anchor file://customerCA.crt 9.16. Vuelva a la pesta\u00f1a o ventana del navegador en el servicio AWS CloudHSM 9.17. Haga click en el bot\u00f3n de refrescar y vea que el status del cluster esta en Initialize in progress 9.19. El processo de inicializaci\u00f3n del cluster puede llevar cerca de 5 minutos. Siga a la proxima etapa mientras el proceso sigue.","title":"9. Use la instancia de gesti\u00f3n para firmar el CSR"},{"location":"cluster_init/#10-use-el-cliente-de-cloudhsm-para-conectar-al-cluster","text":"(detalles) 10.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 10.2. Configure el cliente con el comando: sudo cp customerCA.crt /opt/cloudhsm/etc/customerCA.crt 10.3. echo '#!/bin/sh' >> cloudhsm_mgmt_util.sh echo '/opt/cloudhsm/bin/cloudhsm_mgmt_util /opt/cloudhsm/etc/cloudhsm_mgmt_util.cfg' >> cloudhsm_mgmt_util.sh chmod +x cloudhsm_mgmt_util.sh ln -s /opt/cloudhsm/bin/key_mgmt_util key_mgmt_util 10.4. Vea la direcci\u00f3n IP del HSM en el cluster con el comando: aws cloudhsmv2 describe-clusters | jq '.Clusters[].Hsms[].EniIp' 10.5. Use la direcci\u00f3n IP del HSM para configurar el agente con el comando sudo /opt/cloudhsm/bin/configure -a <IP address> 10.6. Lanze el agente de gesti\u00f3n del CloudHSM con el comando: ./cloudhsm_mgmt_util.sh 10.7. En ese momento no vas a poder conectar pues faltan las reglas de firewall (Security Groups) para acceder al CloudHSM. Lo haremos en el paso siguiente","title":"10. Use el cliente de CloudHSM para conectar al cluster"},{"location":"cluster_init/#11-configure-las-reglas-de-firewall-para-conectar-al-cloudhsm","text":"(detalles) 11.1. Vuelva a la pesta\u00f1a o ventana del navegador en el servicio AWS EC2 11.2. En el menu lateral haga click en Instances 11.3. Seleccione la instancia con nombre cloudhsm-mgmt 11.4. Haga click en Actions y debajo de Networking haga click en Change Security Groups 11.5. Seleccione un Security Group adicional con \"Group Name\" parecido a cloudhsm-cluster-5xr767yr3wr-sg (generado automaticamente por el Cluster) 11.6. Haga click en Assign Security Groups 11.7. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 11.8. Intente de nuevo conectar al HSM con el comando: ./cloudhsm_mgmt_util.sh 11.9. Vea los usuarios est\u00e1ndar en el sistema con el comando: listUsers 11.10. loginHSM PRECO admin password 11.11. changePswd PRECO admin 11.12. Do you want to continue(y/n)? -> y 11.13. listUsers 11.14. Use the \u201ccreateUser\u201c command to create a crypto user (CU). createUser CU user1 defaultPassword 11.15. quit","title":"11. Configure las reglas de firewall para conectar al CloudHSM"},{"location":"key_management/","text":"Gesti\u00f3n llaves 1. Creando llaves en el HSM (detalles) En este modulo \"you will be using key_mgmt_util software provided in cloudHSM Client package to create symmmetric keys, RSA Key pair and ECC key pair.\" 1.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 1.2. Conectese al sudo systemctl start cloudhsm-client 1.3. Conectese al ./key_mgmt_util 1.4. loginHSM -u CU -s user1 -p defaultPassword 1.5. genSymKey -t 31 -s 32 -l aes256 1.6. genRSAKeyPair -m 2048 -e 65541 -l rsa_test 1.7. genECCKeyPair -i 12 -l ecc12 1.8. exit 2. Importando y exportando llaves con el CloudHSM (detalles) En este modulo \"you will be using key_mgmt_util software provided in cloudHSM Client package to import symmetric keys, export symmetric keys and wrap keys.\" 2.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 2.2. The first command uses OpenSSL to generate a random 256-bit AES symmetric key. It saves the key in the aes256.key file. openssl rand -out aes256-forImport.key 32 2.3. Conectese al ./key_mgmt_util 2.4. loginHSM -u CU -s user1 -p defaultPassword 2.5. Generate a wrapping key on the HSM and take note of the key handle returned.You will reuire it in the below exercises. genSymKey -t 31 -s 32 -l wrappinhKey 2.6. Use the imSymKey to import the AES key from the aes256.key file into the HSMs. imSymKey -f aes256.key -w -t 31 -l imported 2.7. Generate a 3DES key and note the key handle returned. This key will be exported later genSymKey -t 21 -s 24 -l 3DES_export 2.8. This command exports a Triple DES (3DES) symmetric key (key handle -k). It uses an existing AES key (key handle -w) in the HSM as the wrapping key. Then it writes the plaintext of the 3DES key to the 3DES.key file. exSymKey -k -w -out 3DES.key 2.9. openssl enc -d -aes-256-cbc -in plain.txt -out encr.txt -pass file:./3DES.key 1.1. 1.1. 1.1. 1.1. 1.1. 3. Cree un cluster de CloudHSM (detalles) 3.1.","title":"Gesti\u00f3n de llaves"},{"location":"key_management/#gestion-llaves","text":"","title":"Gesti\u00f3n llaves"},{"location":"key_management/#1-creando-llaves-en-el-hsm","text":"(detalles) En este modulo \"you will be using key_mgmt_util software provided in cloudHSM Client package to create symmmetric keys, RSA Key pair and ECC key pair.\" 1.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 1.2. Conectese al sudo systemctl start cloudhsm-client 1.3. Conectese al ./key_mgmt_util 1.4. loginHSM -u CU -s user1 -p defaultPassword 1.5. genSymKey -t 31 -s 32 -l aes256 1.6. genRSAKeyPair -m 2048 -e 65541 -l rsa_test 1.7. genECCKeyPair -i 12 -l ecc12 1.8. exit","title":"1. Creando llaves en el HSM"},{"location":"key_management/#2-importando-y-exportando-llaves-con-el-cloudhsm","text":"(detalles) En este modulo \"you will be using key_mgmt_util software provided in cloudHSM Client package to import symmetric keys, export symmetric keys and wrap keys.\" 2.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager en la terminal de la instancia 2.2. The first command uses OpenSSL to generate a random 256-bit AES symmetric key. It saves the key in the aes256.key file. openssl rand -out aes256-forImport.key 32 2.3. Conectese al ./key_mgmt_util 2.4. loginHSM -u CU -s user1 -p defaultPassword 2.5. Generate a wrapping key on the HSM and take note of the key handle returned.You will reuire it in the below exercises. genSymKey -t 31 -s 32 -l wrappinhKey 2.6. Use the imSymKey to import the AES key from the aes256.key file into the HSMs. imSymKey -f aes256.key -w -t 31 -l imported 2.7. Generate a 3DES key and note the key handle returned. This key will be exported later genSymKey -t 21 -s 24 -l 3DES_export 2.8. This command exports a Triple DES (3DES) symmetric key (key handle -k). It uses an existing AES key (key handle -w) in the HSM as the wrapping key. Then it writes the plaintext of the 3DES key to the 3DES.key file. exSymKey -k -w -out 3DES.key 2.9. openssl enc -d -aes-256-cbc -in plain.txt -out encr.txt -pass file:./3DES.key 1.1. 1.1. 1.1. 1.1. 1.1.","title":"2. Importando y exportando llaves con el CloudHSM"},{"location":"key_management/#3-cree-un-cluster-de-cloudhsm","text":"(detalles) 3.1.","title":"3. Cree un cluster de CloudHSM"},{"location":"networking_setup/","text":"Create VPC aws ec2 create-vpc --cidr-block 10.0.0.0/16 Enter VPC Id from output: aws ec2 modify-vpc-attribute --enable-dns-hostnames --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-tags --resources vpc-XXXXXXXXXXXX --tags Key=Name,Value=cloudhsm-vpc Create protected subnets aws ec2 describe-availability-zones --region us-east-1 aws ec2 create-subnet --availability-zone us-east-1a --cidr-block 10.0.0.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1b --cidr-block 10.0.1.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1c --cidr-block 10.0.2.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1d --cidr-block 10.0.3.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1e --cidr-block 10.0.4.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1f --cidr-block 10.0.5.0/24 --vpc-id vpc-XXXXXXXXXXXX Create private subnets aws ec2 create-subnet --availability-zone us-east-1a --cidr-block 10.0.128.0/24 --vpc-id vpc-XXXXXXXXXXXX Enter Subnet Id from output: aws ec2 create-subnet --availability-zone us-east-1b --cidr-block 10.0.129.0/24 --vpc-id vpc-XXXXXXXXXXXX Enter Subnet Id from output: Tag private subnets aws ec2 create-tags --resources subnet-XXXXXXXXXXXX --tags Key=Name,Value=private-subnet-us-east-1a aws ec2 create-tags --resources subnet-XXXXXXXXXXXX --tags Key=Name,Value=private-subnet-us-east-1b Create Security Groups for VPC Endpoints aws ec2 create-security-group --group-name vpc-endpoints --description \"For communication with VPC Endpoints\" --vpc-id vpc-XXXXXXXXXXXX Enter Security Group Id from output: aws ec2 authorize-security-group-ingress --group-id sg-XXXXXXXXXXXX --cidr '10.0.0.0/16' --protocol tcp --port 443 Create VPC Endpoints to manage EC2 instances through Session Manager aws ec2 describe-vpc-endpoint-services aws ec2 create-vpc-endpoint --vpc-endpoint-type Interface --private-dns-enabled --service-name com.amazonaws.us-east-1.ec2 --security-group-ids sg-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX --subnet-ids subnet-XXXXXXXXXXXX vpc-XXXXXXXXXXXX aws ec2 create-vpc-endpoint --vpc-endpoint-type Interface --private-dns-enabled --service-name com.amazonaws.us-east-1.ec2messages --security-group-ids sg-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX --subnet-ids subnet-XXXXXXXXXXXX vpc-XXXXXXXXXXXX aws ec2 create-vpc-endpoint --vpc-endpoint-type Interface --private-dns-enabled --service-name com.amazonaws.us-east-1.ssm --security-group-ids sg-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX --subnet-ids subnet-XXXXXXXXXXXX vpc-XXXXXXXXXXXX aws ec2 create-vpc-endpoint --vpc-endpoint-type Interface --private-dns-enabled --service-name com.amazonaws.us-east-1.ssmmessages --security-group-ids sg-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX --subnet-ids subnet-XXXXXXXXXXXX vpc-XXXXXXXXXXXX Create public subnets aws ec2 create-subnet --availability-zone us-east-1a --cidr-block 10.0.192.0/24 --vpc-id vpc-XXXXXXXXXXXX Enter Subnet Id from output: aws ec2 create-subnet --availability-zone us-east-1b --cidr-block 10.0.193.0/24 --vpc-id vpc-XXXXXXXXXXXX Enter Subnet Id from output: aws ec2 create-tags --resources subnet-XXXXXXXXXXXX --tags Key=Name,Value=public-subnet-us-east-1a aws ec2 create-tags --resources subnet-XXXXXXXXXXXX --tags Key=Name,Value=public-subnet-us-east-1b Create and attach internet gateway to VPC aws ec2 create-internet-gateway Enter Subnet Id from output: aws ec2 attach-internet-gateway --internet-gateway-id igw-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX Set Subnets for auto public IP assignment aws ec2 modify-subnet-attribute --map-public-ip-on-launch --subnet-id subnet-XXXXXXXXXXXX aws ec2 modify-subnet-attribute --map-public-ip-on-launch --subnet-id subnet-XXXXXXXXXXXX Allocate Elastic IP and create NAT Gateway aws ec2 allocate-address Enter Elastic IP Id from output: aws ec2 create-nat-gateway --allocation-id subnet-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX Enter NAT Gateway Id from output: Create Route Table for public subnet aws ec2 create-route-table --vpc-id vpc-XXXXXXXXXXXX Enter Route Table Id from output: aws ec2 create-tags --resources rtb-XXXXXXXXXXXX --tags Key=Name,Value=public-route-table aws ec2 create-route --destination-cidr-block 0.0.0.0/0 --gateway-id igw-XXXXXXXXXXXX --route-table-id rtb-XXXXXXXXXXXX aws ec2 associate-route-table --route-table-id rtb-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX aws ec2 associate-route-table --route-table-id rtb-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX Create Route Table for private subnet aws ec2 create-route-table --vpc-id vpc-XXXXXXXXXXXX Enter Route Table Id from output: aws ec2 create-tags --resources rtb-XXXXXXXXXXXX --tags Key=Name,Value=private-route-table aws ec2 create-route --destination-cidr-block 0.0.0.0/0 --nat-gateway-id nat-XXXXXXXXXXXX --route-table-id rtb-XXXXXXXXXXXX aws ec2 associate-route-table --route-table-id rtb-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX aws ec2 associate-route-table --route-table-id rtb-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX","title":"Ambiente de redes"},{"location":"networking_setup/#create-vpc","text":"aws ec2 create-vpc --cidr-block 10.0.0.0/16 Enter VPC Id from output: aws ec2 modify-vpc-attribute --enable-dns-hostnames --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-tags --resources vpc-XXXXXXXXXXXX --tags Key=Name,Value=cloudhsm-vpc","title":"Create VPC"},{"location":"networking_setup/#create-protected-subnets","text":"aws ec2 describe-availability-zones --region us-east-1 aws ec2 create-subnet --availability-zone us-east-1a --cidr-block 10.0.0.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1b --cidr-block 10.0.1.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1c --cidr-block 10.0.2.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1d --cidr-block 10.0.3.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1e --cidr-block 10.0.4.0/24 --vpc-id vpc-XXXXXXXXXXXX aws ec2 create-subnet --availability-zone us-east-1f --cidr-block 10.0.5.0/24 --vpc-id vpc-XXXXXXXXXXXX","title":"Create protected subnets"},{"location":"networking_setup/#create-private-subnets","text":"aws ec2 create-subnet --availability-zone us-east-1a --cidr-block 10.0.128.0/24 --vpc-id vpc-XXXXXXXXXXXX Enter Subnet Id from output: aws ec2 create-subnet --availability-zone us-east-1b --cidr-block 10.0.129.0/24 --vpc-id vpc-XXXXXXXXXXXX Enter Subnet Id from output:","title":"Create private subnets"},{"location":"networking_setup/#tag-private-subnets","text":"aws ec2 create-tags --resources subnet-XXXXXXXXXXXX --tags Key=Name,Value=private-subnet-us-east-1a aws ec2 create-tags --resources subnet-XXXXXXXXXXXX --tags Key=Name,Value=private-subnet-us-east-1b","title":"Tag private subnets"},{"location":"networking_setup/#create-security-groups-for-vpc-endpoints","text":"aws ec2 create-security-group --group-name vpc-endpoints --description \"For communication with VPC Endpoints\" --vpc-id vpc-XXXXXXXXXXXX Enter Security Group Id from output: aws ec2 authorize-security-group-ingress --group-id sg-XXXXXXXXXXXX --cidr '10.0.0.0/16' --protocol tcp --port 443","title":"Create Security Groups for VPC Endpoints"},{"location":"networking_setup/#create-vpc-endpoints-to-manage-ec2-instances-through-session-manager","text":"aws ec2 describe-vpc-endpoint-services aws ec2 create-vpc-endpoint --vpc-endpoint-type Interface --private-dns-enabled --service-name com.amazonaws.us-east-1.ec2 --security-group-ids sg-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX --subnet-ids subnet-XXXXXXXXXXXX vpc-XXXXXXXXXXXX aws ec2 create-vpc-endpoint --vpc-endpoint-type Interface --private-dns-enabled --service-name com.amazonaws.us-east-1.ec2messages --security-group-ids sg-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX --subnet-ids subnet-XXXXXXXXXXXX vpc-XXXXXXXXXXXX aws ec2 create-vpc-endpoint --vpc-endpoint-type Interface --private-dns-enabled --service-name com.amazonaws.us-east-1.ssm --security-group-ids sg-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX --subnet-ids subnet-XXXXXXXXXXXX vpc-XXXXXXXXXXXX aws ec2 create-vpc-endpoint --vpc-endpoint-type Interface --private-dns-enabled --service-name com.amazonaws.us-east-1.ssmmessages --security-group-ids sg-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX --subnet-ids subnet-XXXXXXXXXXXX vpc-XXXXXXXXXXXX","title":"Create VPC Endpoints to manage EC2 instances through Session Manager"},{"location":"networking_setup/#create-public-subnets","text":"aws ec2 create-subnet --availability-zone us-east-1a --cidr-block 10.0.192.0/24 --vpc-id vpc-XXXXXXXXXXXX Enter Subnet Id from output: aws ec2 create-subnet --availability-zone us-east-1b --cidr-block 10.0.193.0/24 --vpc-id vpc-XXXXXXXXXXXX Enter Subnet Id from output: aws ec2 create-tags --resources subnet-XXXXXXXXXXXX --tags Key=Name,Value=public-subnet-us-east-1a aws ec2 create-tags --resources subnet-XXXXXXXXXXXX --tags Key=Name,Value=public-subnet-us-east-1b","title":"Create public subnets"},{"location":"networking_setup/#create-and-attach-internet-gateway-to-vpc","text":"aws ec2 create-internet-gateway Enter Subnet Id from output: aws ec2 attach-internet-gateway --internet-gateway-id igw-XXXXXXXXXXXX --vpc-id vpc-XXXXXXXXXXXX","title":"Create and attach internet gateway to VPC"},{"location":"networking_setup/#set-subnets-for-auto-public-ip-assignment","text":"aws ec2 modify-subnet-attribute --map-public-ip-on-launch --subnet-id subnet-XXXXXXXXXXXX aws ec2 modify-subnet-attribute --map-public-ip-on-launch --subnet-id subnet-XXXXXXXXXXXX","title":"Set Subnets for auto public IP assignment"},{"location":"networking_setup/#allocate-elastic-ip-and-create-nat-gateway","text":"aws ec2 allocate-address Enter Elastic IP Id from output: aws ec2 create-nat-gateway --allocation-id subnet-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX Enter NAT Gateway Id from output:","title":"Allocate Elastic IP and create NAT Gateway"},{"location":"networking_setup/#create-route-table-for-public-subnet","text":"aws ec2 create-route-table --vpc-id vpc-XXXXXXXXXXXX Enter Route Table Id from output: aws ec2 create-tags --resources rtb-XXXXXXXXXXXX --tags Key=Name,Value=public-route-table aws ec2 create-route --destination-cidr-block 0.0.0.0/0 --gateway-id igw-XXXXXXXXXXXX --route-table-id rtb-XXXXXXXXXXXX aws ec2 associate-route-table --route-table-id rtb-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX aws ec2 associate-route-table --route-table-id rtb-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX","title":"Create Route Table for public subnet"},{"location":"networking_setup/#create-route-table-for-private-subnet","text":"aws ec2 create-route-table --vpc-id vpc-XXXXXXXXXXXX Enter Route Table Id from output: aws ec2 create-tags --resources rtb-XXXXXXXXXXXX --tags Key=Name,Value=private-route-table aws ec2 create-route --destination-cidr-block 0.0.0.0/0 --nat-gateway-id nat-XXXXXXXXXXXX --route-table-id rtb-XXXXXXXXXXXX aws ec2 associate-route-table --route-table-id rtb-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX aws ec2 associate-route-table --route-table-id rtb-XXXXXXXXXXXX --subnet-id subnet-XXXXXXXXXXXX","title":"Create Route Table for private subnet"},{"location":"website/","text":"Creando un Website cifrado con TLS usando llaves del CloudHSM 1. Creando llaves en el HSM (detalles) En este modulo \"you will be using key_mgmt_util software provided in cloudHSM Client package to create symmmetric keys, RSA Key pair and ECC key pair.\" 1.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager {.new-tab} en la terminal de la instancia 1.2.","title":"Website"},{"location":"website/#creando-un-website-cifrado-con-tls-usando-llaves-del-cloudhsm","text":"","title":"Creando un Website cifrado con TLS usando llaves del CloudHSM"},{"location":"website/#1-creando-llaves-en-el-hsm","text":"(detalles) En este modulo \"you will be using key_mgmt_util software provided in cloudHSM Client package to create symmmetric keys, RSA Key pair and ECC key pair.\" 1.1. Vuelva a la pesta\u00f1a o ventana del navegador del AWS Systems Manager {.new-tab} en la terminal de la instancia 1.2.","title":"1. Creando llaves en el HSM"}]}